/*
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.2.0-alpha.43
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import sh.ory.model.SubmitSelfServiceLoginFlowWithLookupSecretMethodBody;
import sh.ory.model.SubmitSelfServiceLoginFlowWithOidcMethodBody;
import sh.ory.model.SubmitSelfServiceLoginFlowWithPasswordMethodBody;
import sh.ory.model.SubmitSelfServiceLoginFlowWithTotpMethodBody;
import sh.ory.model.SubmitSelfServiceLoginFlowWithWebAuthnMethodBody;

import javax.ws.rs.core.GenericType;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;

import sh.ory.JSON;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-14T15:03:23.816610581Z[Etc/UTC]")
public class SubmitSelfServiceLoginFlowBody extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(SubmitSelfServiceLoginFlowBody.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!SubmitSelfServiceLoginFlowBody.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'SubmitSelfServiceLoginFlowBody' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<SubmitSelfServiceLoginFlowWithLookupSecretMethodBody> adapterSubmitSelfServiceLoginFlowWithLookupSecretMethodBody = gson.getDelegateAdapter(this, TypeToken.get(SubmitSelfServiceLoginFlowWithLookupSecretMethodBody.class));
            final TypeAdapter<SubmitSelfServiceLoginFlowWithOidcMethodBody> adapterSubmitSelfServiceLoginFlowWithOidcMethodBody = gson.getDelegateAdapter(this, TypeToken.get(SubmitSelfServiceLoginFlowWithOidcMethodBody.class));
            final TypeAdapter<SubmitSelfServiceLoginFlowWithPasswordMethodBody> adapterSubmitSelfServiceLoginFlowWithPasswordMethodBody = gson.getDelegateAdapter(this, TypeToken.get(SubmitSelfServiceLoginFlowWithPasswordMethodBody.class));
            final TypeAdapter<SubmitSelfServiceLoginFlowWithTotpMethodBody> adapterSubmitSelfServiceLoginFlowWithTotpMethodBody = gson.getDelegateAdapter(this, TypeToken.get(SubmitSelfServiceLoginFlowWithTotpMethodBody.class));
            final TypeAdapter<SubmitSelfServiceLoginFlowWithWebAuthnMethodBody> adapterSubmitSelfServiceLoginFlowWithWebAuthnMethodBody = gson.getDelegateAdapter(this, TypeToken.get(SubmitSelfServiceLoginFlowWithWebAuthnMethodBody.class));

            return (TypeAdapter<T>) new TypeAdapter<SubmitSelfServiceLoginFlowBody>() {
                @Override
                public void write(JsonWriter out, SubmitSelfServiceLoginFlowBody value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `SubmitSelfServiceLoginFlowWithLookupSecretMethodBody`
                    if (value.getActualInstance() instanceof SubmitSelfServiceLoginFlowWithLookupSecretMethodBody) {
                        JsonObject obj = adapterSubmitSelfServiceLoginFlowWithLookupSecretMethodBody.toJsonTree((SubmitSelfServiceLoginFlowWithLookupSecretMethodBody)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SubmitSelfServiceLoginFlowWithOidcMethodBody`
                    if (value.getActualInstance() instanceof SubmitSelfServiceLoginFlowWithOidcMethodBody) {
                        JsonObject obj = adapterSubmitSelfServiceLoginFlowWithOidcMethodBody.toJsonTree((SubmitSelfServiceLoginFlowWithOidcMethodBody)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SubmitSelfServiceLoginFlowWithPasswordMethodBody`
                    if (value.getActualInstance() instanceof SubmitSelfServiceLoginFlowWithPasswordMethodBody) {
                        JsonObject obj = adapterSubmitSelfServiceLoginFlowWithPasswordMethodBody.toJsonTree((SubmitSelfServiceLoginFlowWithPasswordMethodBody)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SubmitSelfServiceLoginFlowWithTotpMethodBody`
                    if (value.getActualInstance() instanceof SubmitSelfServiceLoginFlowWithTotpMethodBody) {
                        JsonObject obj = adapterSubmitSelfServiceLoginFlowWithTotpMethodBody.toJsonTree((SubmitSelfServiceLoginFlowWithTotpMethodBody)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SubmitSelfServiceLoginFlowWithWebAuthnMethodBody`
                    if (value.getActualInstance() instanceof SubmitSelfServiceLoginFlowWithWebAuthnMethodBody) {
                        JsonObject obj = adapterSubmitSelfServiceLoginFlowWithWebAuthnMethodBody.toJsonTree((SubmitSelfServiceLoginFlowWithWebAuthnMethodBody)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    throw new IOException("Failed to serialize as the type doesn't match oneOf schemas: SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody");
                }

                @Override
                public SubmitSelfServiceLoginFlowBody read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonObject jsonObject = elementAdapter.read(in).getAsJsonObject();

                    int match = 0;
                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize SubmitSelfServiceLoginFlowWithLookupSecretMethodBody
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubmitSelfServiceLoginFlowWithLookupSecretMethodBody.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubmitSelfServiceLoginFlowWithLookupSecretMethodBody;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubmitSelfServiceLoginFlowWithLookupSecretMethodBody'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithLookupSecretMethodBody failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubmitSelfServiceLoginFlowWithLookupSecretMethodBody'", e);
                    }

                    // deserialize SubmitSelfServiceLoginFlowWithOidcMethodBody
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubmitSelfServiceLoginFlowWithOidcMethodBody.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubmitSelfServiceLoginFlowWithOidcMethodBody;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubmitSelfServiceLoginFlowWithOidcMethodBody'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithOidcMethodBody failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubmitSelfServiceLoginFlowWithOidcMethodBody'", e);
                    }

                    // deserialize SubmitSelfServiceLoginFlowWithPasswordMethodBody
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubmitSelfServiceLoginFlowWithPasswordMethodBody.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubmitSelfServiceLoginFlowWithPasswordMethodBody;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubmitSelfServiceLoginFlowWithPasswordMethodBody'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithPasswordMethodBody failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubmitSelfServiceLoginFlowWithPasswordMethodBody'", e);
                    }

                    // deserialize SubmitSelfServiceLoginFlowWithTotpMethodBody
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubmitSelfServiceLoginFlowWithTotpMethodBody.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubmitSelfServiceLoginFlowWithTotpMethodBody;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubmitSelfServiceLoginFlowWithTotpMethodBody'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithTotpMethodBody failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubmitSelfServiceLoginFlowWithTotpMethodBody'", e);
                    }

                    // deserialize SubmitSelfServiceLoginFlowWithWebAuthnMethodBody
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubmitSelfServiceLoginFlowWithWebAuthnMethodBody.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubmitSelfServiceLoginFlowWithWebAuthnMethodBody;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubmitSelfServiceLoginFlowWithWebAuthnMethodBody'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithWebAuthnMethodBody failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubmitSelfServiceLoginFlowWithWebAuthnMethodBody'", e);
                    }

                    if (match == 1) {
                        SubmitSelfServiceLoginFlowBody ret = new SubmitSelfServiceLoginFlowBody();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonObject));
                        return ret;
                    }

                    throw new IOException(String.format("Failed deserialization for SubmitSelfServiceLoginFlowBody: %d classes match result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", match, errorMessages, jsonObject.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in oneOf
    public static final Map<String, GenericType> schemas = new HashMap<String, GenericType>();

    public SubmitSelfServiceLoginFlowBody() {
        super("oneOf", Boolean.FALSE);
    }

    public SubmitSelfServiceLoginFlowBody(SubmitSelfServiceLoginFlowWithLookupSecretMethodBody o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public SubmitSelfServiceLoginFlowBody(SubmitSelfServiceLoginFlowWithOidcMethodBody o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public SubmitSelfServiceLoginFlowBody(SubmitSelfServiceLoginFlowWithPasswordMethodBody o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public SubmitSelfServiceLoginFlowBody(SubmitSelfServiceLoginFlowWithTotpMethodBody o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public SubmitSelfServiceLoginFlowBody(SubmitSelfServiceLoginFlowWithWebAuthnMethodBody o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("SubmitSelfServiceLoginFlowWithLookupSecretMethodBody", new GenericType<SubmitSelfServiceLoginFlowWithLookupSecretMethodBody>() {
        });
        schemas.put("SubmitSelfServiceLoginFlowWithOidcMethodBody", new GenericType<SubmitSelfServiceLoginFlowWithOidcMethodBody>() {
        });
        schemas.put("SubmitSelfServiceLoginFlowWithPasswordMethodBody", new GenericType<SubmitSelfServiceLoginFlowWithPasswordMethodBody>() {
        });
        schemas.put("SubmitSelfServiceLoginFlowWithTotpMethodBody", new GenericType<SubmitSelfServiceLoginFlowWithTotpMethodBody>() {
        });
        schemas.put("SubmitSelfServiceLoginFlowWithWebAuthnMethodBody", new GenericType<SubmitSelfServiceLoginFlowWithWebAuthnMethodBody>() {
        });
    }

    @Override
    public Map<String, GenericType> getSchemas() {
        return SubmitSelfServiceLoginFlowBody.schemas;
    }

    /**
     * Set the instance that matches the oneOf child schema, check
     * the instance parameter is valid against the oneOf child schemas:
     * SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody
     *
     * It could be an instance of the 'oneOf' schemas.
     * The oneOf child schemas may themselves be a composed schema (allOf, anyOf, oneOf).
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof SubmitSelfServiceLoginFlowWithLookupSecretMethodBody) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SubmitSelfServiceLoginFlowWithOidcMethodBody) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SubmitSelfServiceLoginFlowWithPasswordMethodBody) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SubmitSelfServiceLoginFlowWithTotpMethodBody) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SubmitSelfServiceLoginFlowWithWebAuthnMethodBody) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody");
    }

    /**
     * Get the actual instance, which can be the following:
     * SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody
     *
     * @return The actual instance (SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody)
     */
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubmitSelfServiceLoginFlowWithLookupSecretMethodBody`. If the actual instance is not `SubmitSelfServiceLoginFlowWithLookupSecretMethodBody`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubmitSelfServiceLoginFlowWithLookupSecretMethodBody`
     * @throws ClassCastException if the instance is not `SubmitSelfServiceLoginFlowWithLookupSecretMethodBody`
     */
    public SubmitSelfServiceLoginFlowWithLookupSecretMethodBody getSubmitSelfServiceLoginFlowWithLookupSecretMethodBody() throws ClassCastException {
        return (SubmitSelfServiceLoginFlowWithLookupSecretMethodBody)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubmitSelfServiceLoginFlowWithOidcMethodBody`. If the actual instance is not `SubmitSelfServiceLoginFlowWithOidcMethodBody`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubmitSelfServiceLoginFlowWithOidcMethodBody`
     * @throws ClassCastException if the instance is not `SubmitSelfServiceLoginFlowWithOidcMethodBody`
     */
    public SubmitSelfServiceLoginFlowWithOidcMethodBody getSubmitSelfServiceLoginFlowWithOidcMethodBody() throws ClassCastException {
        return (SubmitSelfServiceLoginFlowWithOidcMethodBody)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubmitSelfServiceLoginFlowWithPasswordMethodBody`. If the actual instance is not `SubmitSelfServiceLoginFlowWithPasswordMethodBody`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubmitSelfServiceLoginFlowWithPasswordMethodBody`
     * @throws ClassCastException if the instance is not `SubmitSelfServiceLoginFlowWithPasswordMethodBody`
     */
    public SubmitSelfServiceLoginFlowWithPasswordMethodBody getSubmitSelfServiceLoginFlowWithPasswordMethodBody() throws ClassCastException {
        return (SubmitSelfServiceLoginFlowWithPasswordMethodBody)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubmitSelfServiceLoginFlowWithTotpMethodBody`. If the actual instance is not `SubmitSelfServiceLoginFlowWithTotpMethodBody`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubmitSelfServiceLoginFlowWithTotpMethodBody`
     * @throws ClassCastException if the instance is not `SubmitSelfServiceLoginFlowWithTotpMethodBody`
     */
    public SubmitSelfServiceLoginFlowWithTotpMethodBody getSubmitSelfServiceLoginFlowWithTotpMethodBody() throws ClassCastException {
        return (SubmitSelfServiceLoginFlowWithTotpMethodBody)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubmitSelfServiceLoginFlowWithWebAuthnMethodBody`. If the actual instance is not `SubmitSelfServiceLoginFlowWithWebAuthnMethodBody`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubmitSelfServiceLoginFlowWithWebAuthnMethodBody`
     * @throws ClassCastException if the instance is not `SubmitSelfServiceLoginFlowWithWebAuthnMethodBody`
     */
    public SubmitSelfServiceLoginFlowWithWebAuthnMethodBody getSubmitSelfServiceLoginFlowWithWebAuthnMethodBody() throws ClassCastException {
        return (SubmitSelfServiceLoginFlowWithWebAuthnMethodBody)super.getActualInstance();
    }


 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubmitSelfServiceLoginFlowBody
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
    // validate oneOf schemas one by one
    int validCount = 0;
    ArrayList<String> errorMessages = new ArrayList<>();
    // validate the json string with SubmitSelfServiceLoginFlowWithLookupSecretMethodBody
    try {
      SubmitSelfServiceLoginFlowWithLookupSecretMethodBody.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithLookupSecretMethodBody failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SubmitSelfServiceLoginFlowWithOidcMethodBody
    try {
      SubmitSelfServiceLoginFlowWithOidcMethodBody.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithOidcMethodBody failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SubmitSelfServiceLoginFlowWithPasswordMethodBody
    try {
      SubmitSelfServiceLoginFlowWithPasswordMethodBody.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithPasswordMethodBody failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SubmitSelfServiceLoginFlowWithTotpMethodBody
    try {
      SubmitSelfServiceLoginFlowWithTotpMethodBody.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithTotpMethodBody failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SubmitSelfServiceLoginFlowWithWebAuthnMethodBody
    try {
      SubmitSelfServiceLoginFlowWithWebAuthnMethodBody.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubmitSelfServiceLoginFlowWithWebAuthnMethodBody failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    if (validCount != 1) {
      throw new IOException(String.format("The JSON string is invalid for SubmitSelfServiceLoginFlowBody with oneOf schemas: SubmitSelfServiceLoginFlowWithLookupSecretMethodBody, SubmitSelfServiceLoginFlowWithOidcMethodBody, SubmitSelfServiceLoginFlowWithPasswordMethodBody, SubmitSelfServiceLoginFlowWithTotpMethodBody, SubmitSelfServiceLoginFlowWithWebAuthnMethodBody. %d class(es) match the result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", validCount, errorMessages, jsonObj.toString()));
    }
  }

 /**
  * Create an instance of SubmitSelfServiceLoginFlowBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubmitSelfServiceLoginFlowBody
  * @throws IOException if the JSON string is invalid with respect to SubmitSelfServiceLoginFlowBody
  */
  public static SubmitSelfServiceLoginFlowBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubmitSelfServiceLoginFlowBody.class);
  }

 /**
  * Convert an instance of SubmitSelfServiceLoginFlowBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

