/*
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.0.1-alpha.50
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import sh.ory.model.ProjectLookupSecretConfig;
import sh.ory.model.ProjectOidcConfig;
import sh.ory.model.ProjectPasswordConfig;
import sh.ory.model.ProjectRecoveryConfig;
import sh.ory.model.ProjectTotpConfig;
import sh.ory.model.ProjectVerificationConfig;
import sh.ory.model.ProjectWebAuthnConfig;
import sh.ory.model.RedirectionConfig;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProjectRevision
 */
public class ProjectRevisionTest {
    private final ProjectRevision model = new ProjectRevision();

    /**
     * Model tests for ProjectRevision
     */
    @Test
    public void testProjectRevision() {
        // TODO: test ProjectRevision
    }

    /**
     * Test the property 'apiUrl'
     */
    @Test
    public void apiUrlTest() {
        // TODO: test apiUrl
    }

    /**
     * Test the property 'applicationUrl'
     */
    @Test
    public void applicationUrlTest() {
        // TODO: test applicationUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultIdentitySchemaUrl'
     */
    @Test
    public void defaultIdentitySchemaUrlTest() {
        // TODO: test defaultIdentitySchemaUrl
    }

    /**
     * Test the property 'errorUiUrl'
     */
    @Test
    public void errorUiUrlTest() {
        // TODO: test errorUiUrl
    }

    /**
     * Test the property 'hosts'
     */
    @Test
    public void hostsTest() {
        // TODO: test hosts
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'kratosConfigVersion'
     */
    @Test
    public void kratosConfigVersionTest() {
        // TODO: test kratosConfigVersion
    }

    /**
     * Test the property 'kratosCustomSchemaId'
     */
    @Test
    public void kratosCustomSchemaIdTest() {
        // TODO: test kratosCustomSchemaId
    }

    /**
     * Test the property 'loginUiUrl'
     */
    @Test
    public void loginUiUrlTest() {
        // TODO: test loginUiUrl
    }

    /**
     * Test the property 'lookupSecret'
     */
    @Test
    public void lookupSecretTest() {
        // TODO: test lookupSecret
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'oidcProviders'
     */
    @Test
    public void oidcProvidersTest() {
        // TODO: test oidcProviders
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'recovery'
     */
    @Test
    public void recoveryTest() {
        // TODO: test recovery
    }

    /**
     * Test the property 'recoveryUiUrl'
     */
    @Test
    public void recoveryUiUrlTest() {
        // TODO: test recoveryUiUrl
    }

    /**
     * Test the property 'redirectionConfig'
     */
    @Test
    public void redirectionConfigTest() {
        // TODO: test redirectionConfig
    }

    /**
     * Test the property 'registrationUiUrl'
     */
    @Test
    public void registrationUiUrlTest() {
        // TODO: test registrationUiUrl
    }

    /**
     * Test the property 'sessionAfterSignUp'
     */
    @Test
    public void sessionAfterSignUpTest() {
        // TODO: test sessionAfterSignUp
    }

    /**
     * Test the property 'sessionSoft2fa'
     */
    @Test
    public void sessionSoft2faTest() {
        // TODO: test sessionSoft2fa
    }

    /**
     * Test the property 'settingsPrivilegedSessionMaxAgeSeconds'
     */
    @Test
    public void settingsPrivilegedSessionMaxAgeSecondsTest() {
        // TODO: test settingsPrivilegedSessionMaxAgeSeconds
    }

    /**
     * Test the property 'settingsSoft2fa'
     */
    @Test
    public void settingsSoft2faTest() {
        // TODO: test settingsSoft2fa
    }

    /**
     * Test the property 'settingsUiUrl'
     */
    @Test
    public void settingsUiUrlTest() {
        // TODO: test settingsUiUrl
    }

    /**
     * Test the property 'totp'
     */
    @Test
    public void totpTest() {
        // TODO: test totp
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'verification'
     */
    @Test
    public void verificationTest() {
        // TODO: test verification
    }

    /**
     * Test the property 'verificationUiUrl'
     */
    @Test
    public void verificationUiUrlTest() {
        // TODO: test verificationUiUrl
    }

    /**
     * Test the property 'webauthn'
     */
    @Test
    public void webauthnTest() {
        // TODO: test webauthn
    }

}
