/*
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.2.0-alpha.60
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sh.ory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import sh.ory.JSON;

/**
 * SelfServiceRecoveryCode
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-24T09:56:23.976880967Z[Etc/UTC]")
public class SelfServiceRecoveryCode {
  public static final String SERIALIZED_NAME_EXPIRES_AT = "expires_at";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_RECOVERY_CODE = "recovery_code";
  @SerializedName(SERIALIZED_NAME_RECOVERY_CODE)
  private String recoveryCode;

  public static final String SERIALIZED_NAME_RECOVERY_LINK = "recovery_link";
  @SerializedName(SERIALIZED_NAME_RECOVERY_LINK)
  private String recoveryLink;

  public SelfServiceRecoveryCode() { 
  }

  public SelfServiceRecoveryCode expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Expires At is the timestamp of when the recovery flow expires  The timestamp when the recovery link expires.
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expires At is the timestamp of when the recovery flow expires  The timestamp when the recovery link expires.")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public SelfServiceRecoveryCode recoveryCode(String recoveryCode) {
    
    this.recoveryCode = recoveryCode;
    return this;
  }

   /**
   * RecoveryCode is the code that can be used to recover the account
   * @return recoveryCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "RecoveryCode is the code that can be used to recover the account")

  public String getRecoveryCode() {
    return recoveryCode;
  }


  public void setRecoveryCode(String recoveryCode) {
    this.recoveryCode = recoveryCode;
  }


  public SelfServiceRecoveryCode recoveryLink(String recoveryLink) {
    
    this.recoveryLink = recoveryLink;
    return this;
  }

   /**
   * RecoveryLink with flow  This link opens the recovery UI with an empty &#x60;code&#x60; field.
   * @return recoveryLink
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "RecoveryLink with flow  This link opens the recovery UI with an empty `code` field.")

  public String getRecoveryLink() {
    return recoveryLink;
  }


  public void setRecoveryLink(String recoveryLink) {
    this.recoveryLink = recoveryLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelfServiceRecoveryCode selfServiceRecoveryCode = (SelfServiceRecoveryCode) o;
    return Objects.equals(this.expiresAt, selfServiceRecoveryCode.expiresAt) &&
        Objects.equals(this.recoveryCode, selfServiceRecoveryCode.recoveryCode) &&
        Objects.equals(this.recoveryLink, selfServiceRecoveryCode.recoveryLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiresAt, recoveryCode, recoveryLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelfServiceRecoveryCode {\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    recoveryCode: ").append(toIndentedString(recoveryCode)).append("\n");
    sb.append("    recoveryLink: ").append(toIndentedString(recoveryLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("expires_at");
    openapiFields.add("recovery_code");
    openapiFields.add("recovery_link");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("recovery_code");
    openapiRequiredFields.add("recovery_link");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SelfServiceRecoveryCode
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SelfServiceRecoveryCode.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SelfServiceRecoveryCode is not found in the empty JSON string", SelfServiceRecoveryCode.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SelfServiceRecoveryCode.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SelfServiceRecoveryCode` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SelfServiceRecoveryCode.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("recovery_code") != null && !jsonObj.get("recovery_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recovery_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recovery_code").toString()));
      }
      if (jsonObj.get("recovery_link") != null && !jsonObj.get("recovery_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recovery_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recovery_link").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SelfServiceRecoveryCode.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SelfServiceRecoveryCode' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SelfServiceRecoveryCode> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SelfServiceRecoveryCode.class));

       return (TypeAdapter<T>) new TypeAdapter<SelfServiceRecoveryCode>() {
           @Override
           public void write(JsonWriter out, SelfServiceRecoveryCode value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SelfServiceRecoveryCode read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SelfServiceRecoveryCode given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SelfServiceRecoveryCode
  * @throws IOException if the JSON string is invalid with respect to SelfServiceRecoveryCode
  */
  public static SelfServiceRecoveryCode fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SelfServiceRecoveryCode.class);
  }

 /**
  * Convert an instance of SelfServiceRecoveryCode to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

