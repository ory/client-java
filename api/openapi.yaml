openapi: 3.0.3
info:
  contact:
    email: support@ory.sh
    name: API Support
  description: |
    Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed
    with a valid Personal Access Token. Public APIs are mostly used in browsers.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: /ptos
  title: Ory APIs
  version: v0.2.0-alpha.28
servers:
- url: https://{project}.projects.oryapis.com/
  variables:
    project:
      default: playground
      description: Project slug as provided by the Ory Console.
paths:
  /.well-known/jwks.json:
    get:
      description: |-
        This endpoint returns JSON Web Keys required to verifying OpenID Connect ID Tokens and,
        if enabled, OAuth 2.0 JWT Access Tokens. This endpoint can be used with client libraries like
        [node-jwks-rsa](https://github.com/auth0/node-jwks-rsa) among others.
      operationId: discoverJsonWebKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      summary: Discover JSON Web Keys
      tags:
      - v0alpha2
      x-accepts: application/json
  /.well-known/openid-configuration:
    get:
      description: |-
        The well known endpoint an be used to retrieve information for OpenID Connect clients. We encourage you to not roll
        your own OpenID Connect client but to use an OpenID Connect client library instead. You can learn more on this
        flow at https://openid.net/specs/openid-connect-discovery-1_0.html .

        Popular libraries for OpenID Connect clients include oidc-client-js (JavaScript), go-oidc (Golang), and others.
        For a full list of clients go here: https://openid.net/developers/certified/
      operationId: discoverOidcConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcConfiguration'
          description: oidcConfiguration
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      summary: OpenID Connect Discovery
      tags:
      - v0alpha2
      x-accepts: application/json
  /.well-known/ory/webauthn.js:
    get:
      description: |-
        This endpoint provides JavaScript which is needed in order to perform WebAuthn login and registration.

        If you are building a JavaScript Browser App (e.g. in ReactJS or AngularJS) you will need to load this file:

        ```html
        <script src="https://public-kratos.example.org/.well-known/ory/webauthn.js" type="script" async />
        ```

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: getWebAuthnJavaScript
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webAuthnJavaScript'
          description: webAuthnJavaScript
      summary: Get WebAuthn JavaScript
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/clients:
    get:
      description: |-
        This endpoint lists all clients in the database, and never returns client secrets.
        As a default it lists the first 100 clients. The `limit` parameter can be used to retrieve more clients,
        but it has an upper bound at 500 objects. Pagination should be used to retrieve more than 500 objects.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.

        The "Link" header is also included in successful responses, which contains one or more links for pagination,
        formatted like so: '<https://project-slug.projects.oryapis.com/admin/clients?limit={limit}&offset={offset}>; rel="{page}"',
        where page is one of the following applicable pages: 'first', 'next', 'last', and 'previous'. Multiple links can
        be included in this header, and will be separated by a comma.
      operationId: adminListOAuth2Clients
      parameters:
      - description: |-
          Items per page

          This is the number of items per page to return.
          For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 250
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |-
          Next Page Token

          The next page token.
          For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          default: "1"
          minimum: 1
          type: string
        style: form
      - description: The name of the clients to filter by.
        explode: true
        in: query
        name: client_name
        required: false
        schema:
          type: string
        style: form
      - description: The owner of the clients to filter by.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/oAuth2Client'
                type: array
          description: The list of clients and pagination information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: List OAuth 2.0 Clients
      tags:
      - v0alpha2
      x-accepts: application/json
    post:
      description: |-
        Create a new OAuth 2.0 client. If you pass `client_secret` the secret is used, otherwise a random secret
        is generated. The secret is echoed in the response. It is not possible to retrieve it later on.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: adminCreateOAuth2Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oAuth2Client'
        required: true
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Create an OAuth 2.0 Client
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/clients/{id}:
    delete:
      description: |-
        Delete an existing OAuth 2.0 Client by its ID.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.

        Make sure that this endpoint is well protected and only callable by first-party components.
      operationId: adminDeleteOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Deletes an OAuth 2.0 Client
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        Get an OAuth 2.0 client by its ID. This endpoint never returns the client secret.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: adminGetOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Get an OAuth 2.0 Client
      tags:
      - v0alpha2
      x-accepts: application/json
    patch:
      description: |-
        Patch an existing OAuth 2.0 Client. If you pass `client_secret`
        the secret will be updated and returned via the API. This is the
        only time you will be able to retrieve the client secret, so write it down and keep it safe.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: adminPatchOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Patch an OAuth 2.0 Client
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        Update an existing OAuth 2.0 Client. If you pass `client_secret` the secret is used, otherwise a random secret
        is generated. The secret is echoed in the response. It is not possible to retrieve it later on.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: adminUpdateOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oAuth2Client'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Update an OAuth 2.0 Client
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/clients/{id}/lifespans:
    put:
      description: |-
        UpdateLifespans an existing OAuth 2.0 client's token lifespan configuration. This
        client configuration takes precedence over the instance-wide token lifespan
        configuration.
      operationId: UpdateOAuth2ClientLifespans
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOAuth2ClientLifespans'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      tags:
      - admin
      x-contentType: application/json
      x-accepts: application/json
  /admin/identities:
    get:
      description: |-
        Lists all identities. Does not support search at the moment.

        Learn how identities work in [Ory Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminListIdentities
      parameters:
      - description: |-
          Items per Page

          This is the number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 250
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |-
          Pagination Page

          This value is currently an integer, but it is not sequential. The value is not the page number, but a
          reference. The next page can be any number and some numbers might return an empty list.

          For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityList'
          description: identityList
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: List Identities
      tags:
      - v0alpha2
      x-accepts: application/json
    post:
      description: This endpoint creates an identity. Learn how identities work in
        [Ory Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminCreateIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adminCreateIdentityBody'
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
          description: identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Create an Identity
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/identities/{id}:
    delete:
      description: |-
        Calling this endpoint irrecoverably and permanently deletes the identity given its ID. This action can not be undone.
        This endpoint returns 204 when the identity was deleted or when the identity was not found, in which case it is
        assumed that is has been deleted already.

        Learn how identities work in [Ory Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminDeleteIdentity
      parameters:
      - description: ID is the identity's ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Delete an Identity
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: Learn how identities work in [Ory Kratos' User And Identity Model
        Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminGetIdentity
      parameters:
      - description: ID must be set to the ID of identity you want to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          DeclassifyCredentials will declassify one or more identity's credentials

          Currently, only `oidc` is supported. This will return the initial OAuth 2.0 Access,
          Refresh and (optionally) OpenID Connect ID Token.
        explode: true
        in: query
        name: include_credential
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
          description: identity
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Get an Identity
      tags:
      - v0alpha2
      x-accepts: application/json
    patch:
      description: |-
        NOTE: The fields `id`, `stateChangedAt` and `credentials` are not updateable.

        Learn how identities work in [Ory Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminPatchIdentity
      parameters:
      - description: ID must be set to the ID of identity you want to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonPatchDocument'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
          description: identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Partially updates an Identity's field using [JSON Patch](https://jsonpatch.com/)
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        This endpoint updates an identity. The full identity payload (except credentials) is expected. This endpoint does not support patching.

        Learn how identities work in [Ory Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).
      operationId: adminUpdateIdentity
      parameters:
      - description: ID must be set to the ID of identity you want to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateIdentityBody'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
          description: identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Update an Identity
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/identities/{id}/sessions:
    delete:
      description: |-
        This endpoint is useful for:

        To forcefully logout Identity from all devices and sessions
      operationId: adminDeleteIdentitySessions
      parameters:
      - description: ID is the identity's ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Calling this endpoint irrecoverably and permanently deletes and invalidates
        all sessions that belong to the given Identity.
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        This endpoint is useful for:

        Listing all sessions that belong to an Identity in an administrative context.
      operationId: adminListIdentitySessions
      parameters:
      - description: ID is the identity's ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Items per Page

          This is the number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 250
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |-
          Pagination Page

          This value is currently an integer, but it is not sequential. The value is not the page number, but a
          reference. The next page can be any number and some numbers might return an empty list.

          For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Active is a boolean flag that filters out sessions based on the
          state. If no value is provided, all sessions are returned.
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionList'
          description: sessionList
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: This endpoint returns all sessions that belong to the given Identity.
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/keys/{set}:
    delete:
      description: |-
        Use this endpoint to delete a complete JSON Web Key Set and all the keys in that set.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminDeleteJsonWebKeySet
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Delete a JSON Web Key Set
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        This endpoint can be used to retrieve JWK Sets stored in ORY Hydra.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminGetJsonWebKeySet
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Retrieve a JSON Web Key Set
      tags:
      - v0alpha2
      x-accepts: application/json
    post:
      description: |-
        This endpoint is capable of generating JSON Web Key Sets for you. There a different strategies available, such as symmetric cryptographic keys (HS256, HS512) and asymetric cryptographic keys (RS256, ECDSA). If the specified JSON Web Key Set does not exist, it will be created.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminCreateJsonWebKeySet
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adminCreateJsonWebKeySetBody'
        required: true
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Generate a New JSON Web Key
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        Use this method if you do not want to let Hydra generate the JWKs for you, but instead save your own.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminUpdateJsonWebKeySet
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonWebKeySet'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Update a JSON Web Key Set
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/keys/{set}/{kid}:
    delete:
      description: |-
        Use this endpoint to delete a single JSON Web Key.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminDeleteJsonWebKey
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - description: The JSON Web Key ID (kid)
        explode: false
        in: path
        name: kid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Delete a JSON Web Key
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: This endpoint returns a singular JSON Web Key. It is identified
        by the set and the specific key ID (kid).
      operationId: adminGetJsonWebKey
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - description: The JSON Web Key ID (kid)
        explode: false
        in: path
        name: kid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKeySet'
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Fetch a JSON Web Key
      tags:
      - v0alpha2
      x-accepts: application/json
    put:
      description: |-
        Use this method if you do not want to let Hydra generate the JWKs for you, but instead save your own.

        A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key. A JWK Set is a JSON data structure that represents a set of JWKs. A JSON Web Key is identified by its set and key id. ORY Hydra uses this functionality to store cryptographic keys used for TLS and JSON Web Tokens (such as OpenID Connect ID tokens), and allows storing user-defined keys as well.
      operationId: adminUpdateJsonWebKey
      parameters:
      - description: The JSON Web Key Set
        explode: false
        in: path
        name: set
        required: true
        schema:
          type: string
        style: simple
      - description: The JSON Web Key ID (kid)
        explode: false
        in: path
        name: kid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jsonWebKey'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonWebKey'
          description: jsonWebKey
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Update a JSON Web Key
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/requests/consent:
    get:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, ORY Hydra asks the login provider
        to authenticate the subject and then tell ORY Hydra now about it. If the subject authenticated, he/she must now be asked if
        the OAuth 2.0 Client which initiated the flow should be allowed to access the resources on the subject's behalf.

        The consent provider which handles this request and is a web app implemented and hosted by you. It shows a subject interface which asks the subject to
        grant or deny the client access to the requested scope ("Application my-dropbox-app wants write access to all your private files").

        The consent challenge is appended to the consent provider's URL to which the subject's user-agent (browser) is redirected to. The consent
        provider uses that challenge to fetch information on the OAuth2 request and then tells ORY Hydra if the subject accepted
        or rejected the request.
      operationId: adminGetOAuth2ConsentRequest
      parameters:
      - explode: true
        in: query
        name: consent_challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ConsentRequest'
          description: oAuth2ConsentRequest
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handledOAuth2ConsentRequest'
          description: handledOAuth2ConsentRequest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Get OAuth 2.0 Consent Request Information
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/auth/requests/consent/accept:
    put:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, ORY Hydra asks the login provider
        to authenticate the subject and then tell ORY Hydra now about it. If the subject authenticated, he/she must now be asked if
        the OAuth 2.0 Client which initiated the flow should be allowed to access the resources on the subject's behalf.

        The consent provider which handles this request and is a web app implemented and hosted by you. It shows a subject interface which asks the subject to
        grant or deny the client access to the requested scope ("Application my-dropbox-app wants write access to all your private files").

        The consent challenge is appended to the consent provider's URL to which the subject's user-agent (browser) is redirected to. The consent
        provider uses that challenge to fetch information on the OAuth2 request and then tells ORY Hydra if the subject accepted
        or rejected the request.

        This endpoint tells ORY Hydra that the subject has authorized the OAuth 2.0 client to access resources on his/her behalf.
        The consent provider includes additional information, such as session data for access and ID tokens, and if the
        consent request should be used as basis for future requests.

        The response contains a redirect URL which the consent provider should redirect the user-agent to.
      operationId: adminAcceptOAuth2ConsentRequest
      parameters:
      - explode: true
        in: query
        name: consent_challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acceptOAuth2ConsentRequest'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulOAuth2RequestResponse'
          description: successfulOAuth2RequestResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Accept an OAuth 2.0 Consent Request
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/requests/consent/reject:
    put:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, ORY Hydra asks the login provider
        to authenticate the subject and then tell ORY Hydra now about it. If the subject authenticated, he/she must now be asked if
        the OAuth 2.0 Client which initiated the flow should be allowed to access the resources on the subject's behalf.

        The consent provider which handles this request and is a web app implemented and hosted by you. It shows a subject interface which asks the subject to
        grant or deny the client access to the requested scope ("Application my-dropbox-app wants write access to all your private files").

        The consent challenge is appended to the consent provider's URL to which the subject's user-agent (browser) is redirected to. The consent
        provider uses that challenge to fetch information on the OAuth2 request and then tells ORY Hydra if the subject accepted
        or rejected the request.

        This endpoint tells ORY Hydra that the subject has not authorized the OAuth 2.0 client to access resources on his/her behalf.
        The consent provider must include a reason why the consent was not granted.

        The response contains a redirect URL which the consent provider should redirect the user-agent to.
      operationId: adminRejectOAuth2ConsentRequest
      parameters:
      - explode: true
        in: query
        name: consent_challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rejectOAuth2Request'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulOAuth2RequestResponse'
          description: successfulOAuth2RequestResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Reject an OAuth 2.0 Consent Request
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/requests/login:
    get:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, ORY Hydra asks the login provider
        (sometimes called "identity provider") to authenticate the subject and then tell ORY Hydra now about it. The login
        provider is an web-app you write and host, and it must be able to authenticate ("show the subject a login screen")
        a subject (in OAuth2 the proper name for subject is "resource owner").

        The authentication challenge is appended to the login provider URL to which the subject's user-agent (browser) is redirected to. The login
        provider uses that challenge to fetch information on the OAuth2 request and then accept or reject the requested authentication process.
      operationId: adminGetOAuth2LoginRequest
      parameters:
      - explode: true
        in: query
        name: login_challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2LoginRequest'
          description: oAuth2LoginRequest
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handledOAuth2LoginRequest'
          description: handledOAuth2LoginRequest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Get an OAuth 2.0 Login Request
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/auth/requests/login/accept:
    put:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, Ory Hydra asks the login provider
        (sometimes called "identity provider") to authenticate the subject and then tell Ory Hydra now about it. The login
        provider is an web-app you write and host, and it must be able to authenticate ("show the subject a login screen")
        a subject (in OAuth2 the proper name for subject is "resource owner").

        The authentication challenge is appended to the login provider URL to which the subject's user-agent (browser) is redirected to. The login
        provider uses that challenge to fetch information on the OAuth2 request and then accept or reject the requested authentication process.

        This endpoint tells ORY Hydra that the subject has successfully authenticated and includes additional information such as
        the subject's ID and if ORY Hydra should remember the subject's subject agent for future authentication attempts by setting
        a cookie.

        The response contains a redirect URL which the login provider should redirect the user-agent to.
      operationId: adminAcceptOAuth2LoginRequest
      parameters:
      - explode: true
        in: query
        name: login_challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acceptOAuth2LoginRequest'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulOAuth2RequestResponse'
          description: successfulOAuth2RequestResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Accept an OAuth 2.0 Login Request
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/requests/login/reject:
    put:
      description: |-
        When an authorization code, hybrid, or implicit OAuth 2.0 Flow is initiated, ORY Hydra asks the login provider
        (sometimes called "identity provider") to authenticate the subject and then tell ORY Hydra now about it. The login
        provider is an web-app you write and host, and it must be able to authenticate ("show the subject a login screen")
        a subject (in OAuth2 the proper name for subject is "resource owner").

        The authentication challenge is appended to the login provider URL to which the subject's user-agent (browser) is redirected to. The login
        provider uses that challenge to fetch information on the OAuth2 request and then accept or reject the requested authentication process.

        This endpoint tells ORY Hydra that the subject has not authenticated and includes a reason why the authentication
        was denied.

        The response contains a redirect URL which the login provider should redirect the user-agent to.
      operationId: adminRejectOAuth2LoginRequest
      parameters:
      - explode: true
        in: query
        name: login_challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rejectOAuth2Request'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulOAuth2RequestResponse'
          description: successfulOAuth2RequestResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Reject an OAuth 2.0 Login Request
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/requests/logout:
    get:
      description: Use this endpoint to fetch a logout request.
      operationId: adminGetOAuth2LogoutRequest
      parameters:
      - explode: true
        in: query
        name: logout_challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2LogoutRequest'
          description: oAuth2LogoutRequest
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handledOAuth2LogoutRequest'
          description: handledOAuth2LogoutRequest
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Get an OAuth 2.0 Logout Request
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/auth/requests/logout/accept:
    put:
      description: |-
        When a user or an application requests ORY Hydra to log out a user, this endpoint is used to confirm that logout request.

        The response contains a redirect URL which the consent provider should redirect the user-agent to.
      operationId: adminAcceptOAuth2LogoutRequest
      parameters:
      - explode: true
        in: query
        name: logout_challenge
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulOAuth2RequestResponse'
          description: successfulOAuth2RequestResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Accept an OAuth 2.0 Logout Request
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/auth/requests/logout/reject:
    put:
      description: |-
        When a user or an application requests ORY Hydra to log out a user, this endpoint is used to deny that logout request.
        No body is required.

        The response is empty as the logout provider has to chose what action to perform next.
      operationId: adminRejectOAuth2LogoutRequest
      parameters:
      - explode: true
        in: query
        name: logout_challenge
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rejectOAuth2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/rejectOAuth2Request'
        x-originalParamName: Body
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Reject an OAuth 2.0 Logout Request
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/oauth2/auth/sessions/consent:
    delete:
      description: |-
        This endpoint revokes a subject's granted consent sessions for a specific OAuth 2.0 Client and invalidates all
        associated OAuth 2.0 Access Tokens.
      operationId: adminRevokeOAuth2ConsentSessions
      parameters:
      - description: The subject (Subject) whose consent sessions should be deleted.
        explode: true
        in: query
        name: subject
        required: true
        schema:
          type: string
        style: form
      - description: If set, deletes only those consent sessions by the Subject that
          have been granted to the specified OAuth 2.0 Client ID
        explode: true
        in: query
        name: client
        required: false
        schema:
          type: string
        style: form
      - description: If set to `true` deletes all consent sessions by the Subject
          that have been granted.
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Revokes OAuth 2.0 Consent Sessions of a Subject for a Specific OAuth
        2.0 Client
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        This endpoint lists all subject's granted consent sessions, including client and granted scope.
        If the subject is unknown or has not granted any consent sessions yet, the endpoint returns an
        empty JSON array with status code 200 OK.

        The "Link" header is also included in successful responses, which contains one or more links for pagination, formatted like so: '<https://hydra-url/admin/oauth2/auth/sessions/consent?subject={user}&limit={limit}&offset={offset}>; rel="{page}"', where page is one of the following applicable pages: 'first', 'next', 'last', and 'previous'.
        Multiple links can be included in this header, and will be separated by a comma.
      operationId: adminListOAuth2SubjectConsentSessions
      parameters:
      - description: |-
          The link header contains pagination links.

          For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
        explode: false
        in: header
        name: link
        required: false
        schema:
          type: string
        style: simple
      - description: The total number of clients.
        explode: false
        in: header
        name: x-total-count
        required: false
        schema:
          type: string
        style: simple
      - description: The subject to list the consent sessions for.
        explode: true
        in: query
        name: subject
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previousOAuth2ConsentSessions'
          description: previousOAuth2ConsentSessions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: List OAuth 2.0 Consent Sessions of a Subject
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/auth/sessions/login:
    delete:
      description: |-
        This endpoint invalidates a subject's authentication session. After revoking the authentication session, the subject
        has to re-authenticate at ORY Hydra. This endpoint does not invalidate any tokens and does not work with OpenID Connect
        Front- or Back-channel logout.
      operationId: adminRevokeOAuth2LoginSessions
      parameters:
      - description: The subject to revoke authentication sessions for.
        explode: true
        in: query
        name: subject
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Invalidates All OAuth 2.0 Login Sessions of a Certain User
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/oauth2/introspect:
    post:
      description: |-
        The introspection endpoint allows to check if a token (both refresh and access) is active or not. An active token
        is neither expired nor revoked. If a token is active, additional information on the token will be included. You can
        set additional data for a token by setting `accessTokenExtra` during the consent flow.

        For more information [read this blog post](https://www.oauth.com/oauth2-servers/token-introspection-endpoint/).
      operationId: adminIntrospectOAuth2Token
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                scope:
                  description: |-
                    An optional, space separated list of required scopes. If the access token was not granted one of the
                    scopes, the result of active will be false.
                  type: string
                  x-formData-name: scope
                token:
                  description: |-
                    The string value of the token. For access tokens, this
                    is the "access_token" value returned from the token endpoint
                    defined in OAuth 2.0. For refresh tokens, this is the "refresh_token"
                    value returned.
                  required:
                  - token
                  type: string
                  x-formData-name: token
              required:
              - token
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/introspectedOAuth2Token'
          description: introspectedOAuth2Token
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Introspect OAuth2 Access or Refresh Tokens
      tags:
      - v0alpha2
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /admin/oauth2/tokens:
    delete:
      description: This endpoint deletes OAuth2 access tokens issued for a client
        from the database
      operationId: adminDeleteOAuth2Token
      parameters:
      - explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oryAccessToken: []
      summary: Delete OAuth2 Access Tokens from a Client
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/recovery/link:
    post:
      description: |-
        This endpoint creates a recovery link which should be given to the user in order for them to recover
        (or activate) their account.
      operationId: adminCreateSelfServiceRecoveryLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adminCreateSelfServiceRecoveryLinkBody'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryLink'
          description: selfServiceRecoveryLink
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: Create a Recovery Link
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/relation-tuples:
    delete:
      description: Use this endpoint to delete relation tuples
      operationId: deleteRelationTuples
      parameters:
      - description: Namespace of the Relation Tuple
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Relation Tuple
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Relation Tuple
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: SubjectID of the Relation Tuple
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: Namespace of the Subject Set
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Subject Set
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Subject Set
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Delete Relation Tuples'
      tags:
      - write
      x-accepts: application/json
    patch:
      description: Use this endpoint to patch one or more relation tuples.
      operationId: patchRelationTuples
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/patchDelta'
              type: array
        x-originalParamName: Payload
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Patch Multiple Relation Tuples'
      tags:
      - write
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Use this endpoint to create a relation tuple.
      operationId: createRelationTuple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relationQuery'
        x-originalParamName: Payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationQuery'
          description: relationQuery
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Create a Relation Tuple'
      tags:
      - write
      x-contentType: application/json
      x-accepts: application/json
  /admin/sessions/{id}/extend:
    patch:
      description: Retrieve the session ID from the `/sessions/whoami` endpoint /
        `toSession` SDK method.
      operationId: adminExtendSession
      parameters:
      - description: ID is the session's ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - oryAccessToken: []
      summary: |-
        Calling this endpoint extends the given session ID. If `session.earliest_possible_extend` is set it
        will only extend the session after the specified time has passed.
      tags:
      - v0alpha2
      x-accepts: application/json
  /admin/trust/grants/jwt-bearer/issuers:
    get:
      description: Use this endpoint to list all trusted JWT Bearer Grant Type Issuers.
      operationId: adminListTrustedOAuth2JwtGrantIssuers
      parameters:
      - explode: true
        in: query
        name: MaxItems
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: DefaultItems
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: If optional "issuer" is supplied, only jwt-bearer grants with
          this issuer will be returned.
        explode: true
        in: query
        name: issuer
        required: false
        schema:
          type: string
        style: form
      - description: The maximum amount of policies returned, upper bound is 500 policies
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The offset from where to start looking.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trustedOAuth2JwtGrantIssuers'
          description: trustedOAuth2JwtGrantIssuers
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: List Trusted OAuth2 JWT Bearer Grant Type Issuers
      tags:
      - v0alpha2
      x-accepts: application/json
    post:
      description: |-
        Use this endpoint to establish a trust relationship for a JWT issuer
        to perform JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication
        and Authorization Grants [RFC7523](https://datatracker.ietf.org/doc/html/rfc7523).
      operationId: adminTrustOAuth2JwtGrantIssuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adminTrustOAuth2JwtGrantIssuerBody'
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trustedOAuth2JwtGrantIssuer'
          description: trustedOAuth2JwtGrantIssuer
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Trust an OAuth2 JWT Bearer Grant Type Issuer
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /admin/trust/grants/jwt-bearer/issuers/{id}:
    delete:
      description: |-
        Use this endpoint to delete trusted JWT Bearer Grant Type Issuer. The ID is the one returned when you
        created the trust relationship.

        Once deleted, the associated issuer will no longer be able to perform the JSON Web Token (JWT) Profile
        for OAuth 2.0 Client Authentication and Authorization Grant.
      operationId: adminDeleteTrustedOAuth2JwtGrantIssuer
      parameters:
      - description: The id of the desired grant
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Delete a Trusted OAuth2 JWT Bearer Grant Type Issuer
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        Use this endpoint to get a trusted JWT Bearer Grant Type Issuer. The ID is the one returned when you
        created the trust relationship.
      operationId: adminGetTrustedOAuth2JwtGrantIssuer
      parameters:
      - description: The id of the desired grant
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trustedOAuth2JwtGrantIssuer'
          description: trustedOAuth2JwtGrantIssuer
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Get a Trusted OAuth2 JWT Bearer Grant Type Issuer
      tags:
      - v0alpha2
      x-accepts: application/json
  /health/alive:
    get:
      description: |-
        This endpoint returns a HTTP 200 status code when Ory Kratos is accepting incoming
        HTTP requests. This status does currently not include checks whether the database connection is working.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isAlive
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthStatus'
          description: Ory Kratos is ready to accept connections.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Check HTTP Server Status
      tags:
      - metadata
      x-accepts: application/json
  /health/ready:
    get:
      description: |-
        This endpoint returns a HTTP 200 status code when Ory Kratos is up running and the environment dependencies (e.g.
        the database) are responsive as well.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of Ory Kratos, the health status will never
        refer to the cluster state, only to a single instance.
      operationId: isReady
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Ory Kratos is ready to accept requests.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_503'
          description: Ory Kratos is not yet ready to accept requests.
      security:
      - oryAccessToken: []
      summary: Check HTTP Server and Database Status
      tags:
      - metadata
      x-accepts: application/json
  /oauth2/auth:
    get:
      description: |-
        This endpoint is not documented here because you should never use your own implementation to perform OAuth2 flows.
        OAuth2 is a very popular protocol and a library for your programming language will exists.

        To learn more about this flow please refer to the specification: https://tools.ietf.org/html/rfc6749
      operationId: performOAuth2AuthorizationFlow
      responses:
        "302":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      summary: The OAuth 2.0 Authorize Endpoint
      tags:
      - v0alpha2
      x-accepts: application/json
  /oauth2/register:
    post:
      description: |-
        This endpoint behaves like the administrative counterpart (`createOAuth2Client`) but is capable of facing the
        public internet directly and can be used in self-service. It implements the OpenID Connect
        Dynamic Client Registration Protocol. This feature needs to be enabled in the configuration. This endpoint
        is disabled by default. It can be enabled by an administrator.

        Please note that using this endpoint you are not able to choose the `client_secret` nor the `client_id` as those
        values will be server generated when specifying `token_endpoint_auth_method` as `client_secret_basic` or
        `client_secret_post`.

        The `client_secret` will be returned in the response and you will not be able to retrieve it later on.
        Write the secret down and keep it somewhere safe.
      operationId: dynamicClientRegistrationCreateOAuth2Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oAuth2Client'
        required: true
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      summary: Register an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client
        Registration Management Protocol
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /oauth2/register/{id}:
    delete:
      description: |-
        This endpoint behaves like the administrative counterpart (`deleteOAuth2Client`) but is capable of facing the
        public internet directly and can be used in self-service. It implements the OpenID Connect
        Dynamic Client Registration Protocol. This feature needs to be enabled in the configuration. This endpoint
        is disabled by default. It can be enabled by an administrator.

        To use this endpoint, you will need to present the client's authentication credentials. If the OAuth2 Client
        uses the Token Endpoint Authentication Method `client_secret_post`, you need to present the client secret in the URL query.
        If it uses `client_secret_basic`, present the Client ID and the Client Secret in the Authorization header.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: dynamicClientRegistrationDeleteOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - bearer: []
      summary: Deletes an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client
        Registration Management Protocol
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        This endpoint behaves like the administrative counterpart (`getOAuth2Client`) but is capable of facing the
        public internet directly and can be used in self-service. It implements the OpenID Connect
        Dynamic Client Registration Protocol. This feature needs to be enabled in the configuration. This endpoint
        is disabled by default. It can be enabled by an administrator.

        To use this endpoint, you will need to present the client's authentication credentials. If the OAuth2 Client
        uses the Token Endpoint Authentication Method `client_secret_post`, you need to present the client secret in the URL query.
        If it uses `client_secret_basic`, present the Client ID and the Client Secret in the Authorization header.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: dynamicClientRegistrationGetOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - bearer: []
      summary: Get an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration
        Management Protocol
      tags:
      - v0alpha2
      x-accepts: application/json
    put:
      description: |-
        This endpoint behaves like the administrative counterpart (`updateOAuth2Client`) but is capable of facing the
        public internet directly and can be used in self-service. It implements the OpenID Connect
        Dynamic Client Registration Protocol. This feature needs to be enabled in the configuration. This endpoint
        is disabled by default. It can be enabled by an administrator.

        If you pass `client_secret` the secret is used, otherwise a random secret
        is generated. The secret is echoed in the response. It is not possible to retrieve it later on.

        To use this endpoint, you will need to present the client's authentication credentials. If the OAuth2 Client
        uses the Token Endpoint Authentication Method `client_secret_post`, you need to present the client secret in the URL query.
        If it uses `client_secret_basic`, present the Client ID and the Client Secret in the Authorization header.

        OAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are
        generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
      operationId: dynamicClientRegistrationUpdateOAuth2Client
      parameters:
      - description: The id of the OAuth 2.0 Client.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oAuth2Client'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2Client'
          description: oAuth2Client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - bearer: []
      summary: Update an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client
        Registration Management Protocol
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /oauth2/revoke:
    post:
      description: |-
        Revoking a token (both access and refresh) means that the tokens will be invalid. A revoked access token can no
        longer be used to make access requests, and a revoked refresh token can no longer be used to refresh an access token.
        Revoking a refresh token also invalidates the access token that was created with it. A token may only be revoked by
        the client the token was generated for.
      operationId: revokeOAuth2Token
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  required:
                  - token
                  type: string
                  x-formData-name: token
              required:
              - token
              type: object
      responses:
        "200":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - basic: []
      - oauth2: []
      summary: Revoke an OAuth2 Access or Refresh Token
      tags:
      - v0alpha2
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /oauth2/sessions/logout:
    get:
      description: |-
        This endpoint initiates and completes user logout at Ory Hydra and initiates OpenID Connect Front- / Back-channel logout:

        https://openid.net/specs/openid-connect-frontchannel-1_0.html
        https://openid.net/specs/openid-connect-backchannel-1_0.html

        Back-channel logout is performed asynchronously and does not affect logout flow.
      operationId: performOidcFrontOrBackChannelLogout
      responses:
        "302":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
      summary: OpenID Connect Front- or Back-channel Enabled Logout
      tags:
      - v0alpha2
      x-accepts: application/json
  /oauth2/token:
    post:
      description: |-
        The client makes a request to the token endpoint by sending the
        following parameters using the "application/x-www-form-urlencoded" HTTP
        request entity-body.

        > Do not implement a client for this endpoint yourself. Use a library. There are many libraries
        > available for any programming language. You can find a list of libraries here: https://oauth.net/code/
        >
        > Do note that Hydra SDK does not implement this endpoint properly. Use one of the libraries listed above
      operationId: performOAuth2TokenFlow
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                client_id:
                  type: string
                  x-formData-name: client_id
                code:
                  type: string
                  x-formData-name: code
                grant_type:
                  required:
                  - grant_type
                  type: string
                  x-formData-name: grant_type
                redirect_uri:
                  type: string
                  x-formData-name: redirect_uri
                refresh_token:
                  type: string
                  x-formData-name: refresh_token
              required:
              - grant_type
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2TokenResponse'
          description: oAuth2TokenResponse
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - basic: []
      - oauth2: []
      summary: The OAuth 2.0 Token Endpoint
      tags:
      - v0alpha2
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /projects:
    get:
      description: Lists all projects you have access to.
      operationId: listProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectMetadataList'
          description: projectMetadataList
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: List All Projects
      tags:
      - v0alpha2
      x-accepts: application/json
    post:
      description: Creates a new project.
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProjectBody'
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Create a Project
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /projects/{project_id}:
    delete:
      description: |-
        !! Use with extreme caution !!

        Using this API endpoint you can purge (completely delete) a project and its data.
        This action can not be undone and will delete ALL your data.

        !! Use with extreme caution !!
      operationId: purgeProject
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Irrecoverably Purge a Project
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: Get a projects you have access to by its ID.
      operationId: getProject
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: project
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Get a Project
      tags:
      - v0alpha2
      x-accepts: application/json
    patch:
      description: |-
        Deprecated: Use the `patchProjectWithRevision` endpoint instead to specify the exact revision the patch was generated for.

        This endpoints allows you to patch individual Ory Cloud Project configuration keys for
        Ory's services (identity, permission, ...). The configuration format is fully compatible
        with the open source projects for the respective services (e.g. Ory Kratos for Identity, Ory Keto for Permissions).

        This endpoint expects the `version` key to be set in the payload. If it is unset, it
        will try to import the config as if it is from the most recent version.

        If you have an older version of a configuration, you should set the version key in the payload!

        While this endpoint is able to process all configuration items related to features (e.g. password reset),
        it does not support operational configuration items (e.g. port, tracing, logging) otherwise available in the
        open source.

        For configuration items that can not be translated to Ory Cloud, this endpoint will return a list of warnings
        to help you understand which parts of your config could not be processed.
      operationId: patchProject
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/jsonPatch'
              type: array
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulProjectUpdate'
          description: successfulProjectUpdate
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Patch an Ory Cloud Project Configuration`
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        This endpoints allows you to update the Ory Cloud Project configuration for
        individual services (identity, permission, ...). The configuration is fully compatible
        with the open source projects for the respective services (e.g. Ory Kratos for Identity, Ory Keto for Permissions).

        This endpoint expects the `version` key to be set in the payload. If it is unset, it
        will try to import the config as if it is from the most recent version.

        If you have an older version of a configuration, you should set the version key in the payload!

        While this endpoint is able to process all configuration items related to features (e.g. password reset),
        it does not support operational configuration items (e.g. port, tracing, logging) otherwise available in the
        open source.

        For configuration items that can not be translated to Ory Cloud, this endpoint will return a list of warnings
        to help you understand which parts of your config could not be processed.

        Be aware that updating any service's configuration will completely override your current configuration for that
        service!
      operationId: updateProject
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProject'
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulProjectUpdate'
          description: successfulProjectUpdate
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Update an Ory Cloud Project Configuration
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /projects/{project_id}/members:
    get:
      description: This endpoint requires the user to be a member of the project with
        the role `OWNER` or `DEVELOPER`.
      operationId: getProjectMembers
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projectMembers'
          description: projectMembers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Get all members associated with this project.
      tags:
      - v0alpha2
      x-accepts: application/json
  /projects/{project_id}/members/{member_id}:
    delete:
      description: This endpoint requires the user to be a member of the project with
        the role `OWNER`.
      operationId: removeProjectMember
      parameters:
      - description: |-
          Project ID

          The project's ID.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Member ID
        explode: false
        in: path
        name: member_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: Remove a member associated with this project. This also sets their
        invite status to `REMOVED`.
      tags:
      - v0alpha2
      x-accepts: application/json
  /relation-tuples:
    get:
      description: Get all relation tuples that match the query. Only the namespace
        field is required.
      operationId: getRelationTuples
      parameters:
      - explode: true
        in: query
        name: page_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Namespace of the Relation Tuple
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Relation Tuple
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Relation Tuple
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: SubjectID of the Relation Tuple
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: Namespace of the Subject Set
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Subject Set
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Subject Set
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRelationTuplesResponse'
          description: getRelationTuplesResponse
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Query relation tuples'
      tags:
      - read
      x-accepts: application/json
  /relation-tuples/check:
    get:
      description: To learn how relation tuples and the check works, head over to
        [the documentation](../concepts/relation-tuples.mdx).
      operationId: getCheckMirrorStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Check a relation tuple'
      tags:
      - read
      x-accepts: application/json
    post:
      description: To learn how relation tuples and the check works, head over to
        [the documentation](../concepts/relation-tuples.mdx).
      operationId: postCheckMirrorStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Check a relation tuple'
      tags:
      - read
      x-accepts: application/json
  /relation-tuples/check/openapi:
    get:
      description: To learn how relation tuples and the check works, head over to
        [the documentation](../concepts/relation-tuples.mdx).
      operationId: getCheck
      parameters:
      - description: Namespace of the Relation Tuple
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Relation Tuple
        explode: true
        in: query
        name: object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Relation Tuple
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: SubjectID of the Relation Tuple
        explode: true
        in: query
        name: subject_id
        required: false
        schema:
          type: string
        style: form
      - description: Namespace of the Subject Set
        explode: true
        in: query
        name: subject_set.namespace
        required: false
        schema:
          type: string
        style: form
      - description: Object of the Subject Set
        explode: true
        in: query
        name: subject_set.object
        required: false
        schema:
          type: string
        style: form
      - description: Relation of the Subject Set
        explode: true
        in: query
        name: subject_set.relation
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Check a relation tuple'
      tags:
      - read
      x-accepts: application/json
    post:
      description: To learn how relation tuples and the check works, head over to
        [the documentation](../concepts/relation-tuples.mdx).
      operationId: postCheck
      parameters:
      - explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relationQuery'
        x-originalParamName: Payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCheckResponse'
          description: getCheckResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Check a relation tuple'
      tags:
      - read
      x-contentType: application/json
      x-accepts: application/json
  /relation-tuples/expand:
    get:
      description: Use this endpoint to expand a relation tuple.
      operationId: getExpand
      parameters:
      - description: Namespace of the Subject Set
        explode: true
        in: query
        name: namespace
        required: true
        schema:
          type: string
        style: form
      - description: Object of the Subject Set
        explode: true
        in: query
        name: object
        required: true
        schema:
          type: string
        style: form
      - description: Relation of the Subject Set
        explode: true
        in: query
        name: relation
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max-depth
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expandTree'
          description: expandTree
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericError'
          description: genericError
      security:
      - oryAccessToken: []
      summary: '# Expand a Relation Tuple'
      tags:
      - read
      x-accepts: application/json
  /schemas:
    get:
      description: Get all Identity Schemas
      operationId: listIdentitySchemas
      parameters:
      - description: |-
          Items per Page

          This is the number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 250
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |-
          Pagination Page

          This value is currently an integer, but it is not sequential. The value is not the page number, but a
          reference. The next page can be any number and some numbers might return an empty list.

          For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identitySchemas'
          description: identitySchemas
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      tags:
      - v0alpha2
      x-accepts: application/json
  /schemas/{id}:
    get:
      description: Get a JSON Schema
      operationId: getIdentitySchema
      parameters:
      - description: ID must be set to the ID of schema you want to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identitySchema'
          description: identitySchema
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/errors:
    get:
      description: |-
        This endpoint returns the error associated with a user-facing self service errors.

        This endpoint supports stub values to help you implement the error UI:

        `?id=stub:500` - returns a stub 500 (Internal Server Error) error.

        More information can be found at [Ory Kratos User User Facing Error Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-facing-errors).
      operationId: getSelfServiceError
      parameters:
      - description: Error is the error's ID
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceError'
          description: selfServiceError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Self-Service Errors
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/login:
    post:
      description: |-
        :::info

        This endpoint is EXPERIMENTAL and subject to potential breaking changes in the future.

        :::

        Use this endpoint to complete a login flow. This endpoint
        behaves differently for API and browser flows.

        API flows expect `application/json` to be sent in the body and responds with
        HTTP 200 and a application/json body with the session token on success;
        HTTP 410 if the original flow expired with the appropriate error messages set and optionally a `use_flow_id` parameter in the body;
        HTTP 400 on form validation errors.

        Browser flows expect a Content-Type of `application/x-www-form-urlencoded` or `application/json` to be sent in the body and respond with
        a HTTP 303 redirect to the post/after login URL or the `return_to` value if it was set and if the login succeeded;
        a HTTP 303 redirect to the login UI URL with the flow ID containing the validation errors otherwise.

        Browser flows with an accept header of `application/json` will not redirect but instead respond with
        HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
        HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
        HTTP 400 on form validation errors.

        If this endpoint is called with `Accept: application/json` in the header, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
        `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
        Most likely used in Social Sign In flows.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: submitSelfServiceLoginFlow
      parameters:
      - description: |-
          The Login Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/login?flow=abcde`).
        explode: true
        in: query
        name: flow
        required: true
        schema:
          type: string
        style: form
      - description: The Session Token of the Identity performing the settings flow.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceLoginFlowBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/submitSelfServiceLoginFlowBody'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulSelfServiceLoginWithoutBrowser'
          description: successfulSelfServiceLoginWithoutBrowser
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceLoginFlow'
          description: selfServiceLoginFlow
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceBrowserLocationChangeRequiredError'
          description: selfServiceBrowserLocationChangeRequiredError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Submit a Login Flow
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/login/api:
    get:
      description: |-
        This endpoint initiates a login flow for API clients that do not use a browser, such as mobile devices, smart TVs, and so on.

        If a valid provided session cookie or session token is provided, a 400 Bad Request error
        will be returned unless the URL query parameter `?refresh=true` is set.

        To fetch an existing login flow call `/self-service/login/flows?flow=<flow_id>`.

        You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
        Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
        you vulnerable to a variety of CSRF attacks, including CSRF login attacks.

        In the case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `session_aal1_required`: Multi-factor auth (e.g. 2fa) was requested but the user has no session yet.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.

        This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: initializeSelfServiceLoginFlowWithoutBrowser
      parameters:
      - description: |-
          Refresh a login session

          If set to true, this will refresh an existing login session by
          asking the user to sign in again. This will reset the
          authenticated_at time of the session.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Request a Specific AuthenticationMethod Assurance Level

          Use this parameter to upgrade an existing session's authenticator assurance level (AAL). This
          allows you to ask for multi-factor authentication. When an identity sign in using e.g. username+password,
          the AAL is 1. If you wish to "upgrade" the session's security by asking the user to perform TOTP / WebAuth/ ...
          you would set this to "aal2".
        explode: true
        in: query
        name: aal
        required: false
        schema:
          type: string
        style: form
      - description: The Session Token of the Identity performing the settings flow.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceLoginFlow'
          description: selfServiceLoginFlow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Login Flow for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/login/browser:
    get:
      description: |-
        This endpoint initializes a browser-based user login flow. This endpoint will set the appropriate
        cookies and anti-CSRF measures required for browser-based flows.

        If this endpoint is opened as a link in the browser, it will be redirected to
        `selfservice.flows.login.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
        exists already, the browser will be redirected to `urls.default_redirect_url` unless the query parameter
        `?refresh=true` was set.

        If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `session_aal1_required`: Multi-factor auth (e.g. 2fa) was requested but the user has no session yet.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!

        This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: initializeSelfServiceLoginFlowForBrowsers
      parameters:
      - description: |-
          Refresh a login session

          If set to true, this will refresh an existing login session by
          asking the user to sign in again. This will reset the
          authenticated_at time of the session.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Request a Specific AuthenticationMethod Assurance Level

          Use this parameter to upgrade an existing session's authenticator assurance level (AAL). This
          allows you to ask for multi-factor authentication. When an identity sign in using e.g. username+password,
          the AAL is 1. If you wish to "upgrade" the session's security by asking the user to perform TOTP / WebAuth/ ...
          you would set this to "aal2".
        explode: true
        in: query
        name: aal
        required: false
        schema:
          type: string
        style: form
      - description: The URL to return the browser to after the flow was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceLoginFlow'
          description: selfServiceLoginFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Login Flow for Browsers
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/login/flows:
    get:
      description: |-
        This endpoint returns a login flow's context with, for example, error details and other information.

        Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
        For AJAX requests you must ensure that cookies are included in the request or requests will fail.

        If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
        and you need to forward the incoming HTTP Cookie header to this endpoint:

        ```js
        pseudo-code example
        router.get('/login', async function (req, res) {
        const flow = await client.getSelfServiceLoginFlow(req.header('cookie'), req.query['flow'])

        res.render('login', flow)
        })
        ```

        This request may fail due to several reasons. The `error.id` can be one of:

        `session_already_available`: The user is already signed in.
        `self_service_flow_expired`: The flow is expired and you should request a new one.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: getSelfServiceLoginFlow
      parameters:
      - description: |-
          The Login Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/login?flow=abcde`).
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceLoginFlow'
          description: selfServiceLoginFlow
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Login Flow
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/logout:
    get:
      description: |-
        This endpoint logs out an identity in a self-service manner.

        If the `Accept` HTTP header is not set to `application/json`, the browser will be redirected (HTTP 303 See Other)
        to the `return_to` parameter of the initial request or fall back to `urls.default_return_to`.

        If the `Accept` HTTP header is set to `application/json`, a 204 No Content response
        will be sent on successful logout instead.

        This endpoint is NOT INTENDED for API clients and only works
        with browsers (Chrome, Firefox, ...). For API clients you can
        call the `/self-service/logout/api` URL directly with the Ory Session Token.

        More information can be found at [Ory Kratos User Logout Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-logout).
      operationId: submitSelfServiceLogoutFlow
      parameters:
      - description: |-
          A Valid Logout Token

          If you do not have a logout token because you only have a session cookie,
          call `/self-service/logout/browser` to generate a URL for this endpoint.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The URL to return to after the logout was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Complete Self-Service Logout
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/logout/api:
    delete:
      description: |-
        Use this endpoint to log out an identity using an Ory Session Token. If the Ory Session Token was successfully
        revoked, the server returns a 204 No Content response. A 204 No Content response is also sent when
        the Ory Session Token has been revoked already before.

        If the Ory Session Token is malformed or does not exist a 403 Forbidden response will be returned.

        This endpoint does not remove any HTTP
        Cookies - use the Browser-Based Self-Service Logout Flow instead.
      operationId: submitSelfServiceLogoutFlowWithoutBrowser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceLogoutFlowWithoutBrowserBody'
        required: true
        x-originalParamName: Body
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Perform Logout for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/logout/browser:
    get:
      description: |-
        This endpoint initializes a browser-based user logout flow and a URL which can be used to log out the user.

        This endpoint is NOT INTENDED for API clients and only works
        with browsers (Chrome, Firefox, ...). For API clients you can
        call the `/self-service/logout/api` URL directly with the Ory Session Token.

        The URL is only valid for the currently signed in user. If no user is signed in, this endpoint returns
        a 401 error.

        When calling this endpoint from a backend, please ensure to properly forward the HTTP cookies.
      operationId: createSelfServiceLogoutFlowUrlForBrowsers
      parameters:
      - description: |-
          HTTP Cookies

          If you call this endpoint from a backend, please include the
          original Cookie header in the request.
        explode: false
        in: header
        name: cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceLogoutUrl'
          description: selfServiceLogoutUrl
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Create a Logout URL for Browsers
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/recovery:
    post:
      description: |-
        Use this endpoint to complete a recovery flow. This endpoint
        behaves differently for API and browser flows and has several states:

        `choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent
        and works with API- and Browser-initiated flows.
        For API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid.
        and a HTTP 303 See Other redirect with a fresh recovery flow if the flow was otherwise invalid (e.g. expired).
        For Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Recovery UI URL with the Recovery Flow ID appended.
        `sent_email` is the success state after `choose_method` for the `link` method and allows the user to request another recovery email. It
        works for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.
        `passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow ("sending a recovery link")
        does not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL
        (if the link was valid) and instructs the user to update their password, or a redirect to the Recover UI URL with
        a new Recovery Flow ID which contains an error message that the recovery link was invalid.

        More information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).
      operationId: submitSelfServiceRecoveryFlow
      parameters:
      - description: |-
          The Recovery Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/recovery?flow=abcde`).
        explode: true
        in: query
        name: flow
        required: true
        schema:
          type: string
        style: form
      - description: |-
          Recovery Token

          The recovery token which completes the recovery request. If the token
          is invalid (e.g. expired) an error will be shown to the end-user.

          This parameter is usually set in a link and not used by any direct API call.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceRecoveryFlowBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/submitSelfServiceRecoveryFlowBody'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryFlow'
          description: selfServiceRecoveryFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryFlow'
          description: selfServiceRecoveryFlow
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Complete Recovery Flow
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/recovery/api:
    get:
      description: |-
        This endpoint initiates a recovery flow for API clients such as mobile devices, smart TVs, and so on.

        If a valid provided session cookie or session token is provided, a 400 Bad Request error.

        To fetch an existing recovery flow call `/self-service/recovery/flows?flow=<flow_id>`.

        You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
        Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
        you vulnerable to a variety of CSRF attacks.

        This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).


        More information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).
      operationId: initializeSelfServiceRecoveryFlowWithoutBrowser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryFlow'
          description: selfServiceRecoveryFlow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Recovery Flow for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/recovery/browser:
    get:
      description: |-
        This endpoint initializes a browser-based account recovery flow. Once initialized, the browser will be redirected to
        `selfservice.flows.recovery.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
        exists, the browser is returned to the configured return URL.

        If this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects
        or a 400 bad request error if the user is already authenticated.

        This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.

        More information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).
      operationId: initializeSelfServiceRecoveryFlowForBrowsers
      parameters:
      - description: The URL to return the browser to after the flow was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryFlow'
          description: selfServiceRecoveryFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Recovery Flow for Browsers
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/recovery/flows:
    get:
      description: |-
        This endpoint returns a recovery flow's context with, for example, error details and other information.

        Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
        For AJAX requests you must ensure that cookies are included in the request or requests will fail.

        If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
        and you need to forward the incoming HTTP Cookie header to this endpoint:

        ```js
        pseudo-code example
        router.get('/recovery', async function (req, res) {
        const flow = await client.getSelfServiceRecoveryFlow(req.header('Cookie'), req.query['flow'])

        res.render('recovery', flow)
        })
        ```

        More information can be found at [Ory Kratos Account Recovery Documentation](../self-service/flows/account-recovery).
      operationId: getSelfServiceRecoveryFlow
      parameters:
      - description: |-
          The Flow ID

          The value for this parameter comes from `request` URL Query parameter sent to your
          application (e.g. `/recovery?flow=abcde`).
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRecoveryFlow'
          description: selfServiceRecoveryFlow
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Recovery Flow
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/registration:
    post:
      description: |-
        Use this endpoint to complete a registration flow by sending an identity's traits and password. This endpoint
        behaves differently for API and browser flows.

        API flows expect `application/json` to be sent in the body and respond with
        HTTP 200 and a application/json body with the created identity success - if the session hook is configured the
        `session` and `session_token` will also be included;
        HTTP 410 if the original flow expired with the appropriate error messages set and optionally a `use_flow_id` parameter in the body;
        HTTP 400 on form validation errors.

        Browser flows expect a Content-Type of `application/x-www-form-urlencoded` or `application/json` to be sent in the body and respond with
        a HTTP 303 redirect to the post/after registration URL or the `return_to` value if it was set and if the registration succeeded;
        a HTTP 303 redirect to the registration UI URL with the flow ID containing the validation errors otherwise.

        Browser flows with an accept header of `application/json` will not redirect but instead respond with
        HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
        HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
        HTTP 400 on form validation errors.

        If this endpoint is called with `Accept: application/json` in the header, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
        `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
        Most likely used in Social Sign In flows.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: submitSelfServiceRegistrationFlow
      parameters:
      - description: |-
          The Registration Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/registration?flow=abcde`).
        explode: true
        in: query
        name: flow
        required: true
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceRegistrationFlowBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/submitSelfServiceRegistrationFlowBody'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulSelfServiceRegistrationWithoutBrowser'
          description: successfulSelfServiceRegistrationWithoutBrowser
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRegistrationFlow'
          description: selfServiceRegistrationFlow
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceBrowserLocationChangeRequiredError'
          description: selfServiceBrowserLocationChangeRequiredError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Submit a Registration Flow
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/registration/api:
    get:
      description: |-
        This endpoint initiates a registration flow for API clients such as mobile devices, smart TVs, and so on.

        If a valid provided session cookie or session token is provided, a 400 Bad Request error
        will be returned unless the URL query parameter `?refresh=true` is set.

        To fetch an existing registration flow call `/self-service/registration/flows?flow=<flow_id>`.

        You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
        Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
        you vulnerable to a variety of CSRF attacks.

        In the case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.

        This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: initializeSelfServiceRegistrationFlowWithoutBrowser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRegistrationFlow'
          description: selfServiceRegistrationFlow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Registration Flow for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/registration/browser:
    get:
      description: |-
        This endpoint initializes a browser-based user registration flow. This endpoint will set the appropriate
        cookies and anti-CSRF measures required for browser-based flows.

        :::info

        This endpoint is EXPERIMENTAL and subject to potential breaking changes in the future.

        :::

        If this endpoint is opened as a link in the browser, it will be redirected to
        `selfservice.flows.registration.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
        exists already, the browser will be redirected to `urls.default_redirect_url`.

        If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `session_already_available`: The user is already signed in.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!

        If this endpoint is called via an AJAX request, the response contains the registration flow without a redirect.

        This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: initializeSelfServiceRegistrationFlowForBrowsers
      parameters:
      - description: The URL to return the browser to after the flow was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRegistrationFlow'
          description: selfServiceRegistrationFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Registration Flow for Browsers
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/registration/flows:
    get:
      description: |-
        This endpoint returns a registration flow's context with, for example, error details and other information.

        Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
        For AJAX requests you must ensure that cookies are included in the request or requests will fail.

        If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
        and you need to forward the incoming HTTP Cookie header to this endpoint:

        ```js
        pseudo-code example
        router.get('/registration', async function (req, res) {
        const flow = await client.getSelfServiceRegistrationFlow(req.header('cookie'), req.query['flow'])

        res.render('registration', flow)
        })
        ```

        This request may fail due to several reasons. The `error.id` can be one of:

        `session_already_available`: The user is already signed in.
        `self_service_flow_expired`: The flow is expired and you should request a new one.

        More information can be found at [Ory Kratos User Login](https://www.ory.sh/docs/kratos/self-service/flows/user-login) and [User Registration Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-registration).
      operationId: getSelfServiceRegistrationFlow
      parameters:
      - description: |-
          The Registration Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/registration?flow=abcde`).
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceRegistrationFlow'
          description: selfServiceRegistrationFlow
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Registration Flow
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/settings:
    post:
      description: |-
        Use this endpoint to complete a settings flow by sending an identity's updated password. This endpoint
        behaves differently for API and browser flows.

        API-initiated flows expect `application/json` to be sent in the body and respond with
        HTTP 200 and an application/json body with the session token on success;
        HTTP 303 redirect to a fresh settings flow if the original flow expired with the appropriate error messages set;
        HTTP 400 on form validation errors.
        HTTP 401 when the endpoint is called without a valid session token.
        HTTP 403 when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.
        Implies that the user needs to re-authenticate.

        Browser flows without HTTP Header `Accept` or with `Accept: text/*` respond with
        a HTTP 303 redirect to the post/after settings URL or the `return_to` value if it was set and if the flow succeeded;
        a HTTP 303 redirect to the Settings UI URL with the flow ID containing the validation errors otherwise.
        a HTTP 303 redirect to the login endpoint when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.

        Browser flows with HTTP Header `Accept: application/json` respond with
        HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
        HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
        HTTP 401 when the endpoint is called without a valid session cookie.
        HTTP 403 when the page is accessed without a session cookie or the session's AAL is too low.
        HTTP 400 on form validation errors.

        Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
        Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
        credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
        to sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.

        If this endpoint is called with a `Accept: application/json` HTTP header, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `session_refresh_required`: The identity requested to change something that needs a privileged session. Redirect
        the identity to the login init endpoint with query parameters `?refresh=true&return_to=<the-current-browser-url>`,
        or initiate a refresh login flow otherwise.
        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `session_inactive`: No Ory Session was found - sign in a user first.
        `security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other
        identity logged in instead.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
        `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
        Most likely used in Social Sign In flows.

        More information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).
      operationId: submitSelfServiceSettingsFlow
      parameters:
      - description: |-
          The Settings Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/settings?flow=abcde`).
        explode: true
        in: query
        name: flow
        required: true
        schema:
          type: string
        style: form
      - description: The Session Token of the Identity performing the settings flow.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceSettingsFlowBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/submitSelfServiceSettingsFlowBody'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceSettingsFlow'
          description: selfServiceSettingsFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceSettingsFlow'
          description: selfServiceSettingsFlow
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceBrowserLocationChangeRequiredError'
          description: selfServiceBrowserLocationChangeRequiredError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      security:
      - sessionToken: []
      summary: Complete Settings Flow
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/settings/api:
    get:
      description: |-
        This endpoint initiates a settings flow for API clients such as mobile devices, smart TVs, and so on.
        You must provide a valid Ory Kratos Session Token for this endpoint to respond with HTTP 200 OK.

        To fetch an existing settings flow call `/self-service/settings/flows?flow=<flow_id>`.

        You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
        Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
        you vulnerable to a variety of CSRF attacks.

        Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
        Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
        credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
        to sign in with the second factor or change the configuration.

        In the case of an error, the `error.id` of the JSON response body can be one of:

        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `session_inactive`: No Ory Session was found - sign in a user first.

        This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).

        More information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).
      operationId: initializeSelfServiceSettingsFlowWithoutBrowser
      parameters:
      - description: The Session Token of the Identity performing the settings flow.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceSettingsFlow'
          description: selfServiceSettingsFlow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Settings Flow for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/settings/browser:
    get:
      description: |-
        This endpoint initializes a browser-based user settings flow. Once initialized, the browser will be redirected to
        `selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid
        Ory Kratos Session Cookie is included in the request, a login flow will be initialized.

        If this endpoint is opened as a link in the browser, it will be redirected to
        `selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid user session
        was set, the browser will be redirected to the login endpoint.

        If this endpoint is called via an AJAX request, the response contains the settings flow without any redirects
        or a 401 forbidden error if no valid session was set.

        Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
        Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
        credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
        to sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.

        If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `session_inactive`: No Ory Session was found - sign in a user first.
        `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!

        This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.

        More information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).
      operationId: initializeSelfServiceSettingsFlowForBrowsers
      parameters:
      - description: The URL to return the browser to after the flow was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceSettingsFlow'
          description: selfServiceSettingsFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Settings Flow for Browsers
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/settings/flows:
    get:
      description: |-
        When accessing this endpoint through Ory Kratos' Public API you must ensure that either the Ory Kratos Session Cookie
        or the Ory Kratos Session Token are set.

        Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
        Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
        credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
        to sign in with the second factor or change the configuration.

        You can access this endpoint without credentials when using Ory Kratos' Admin API.

        If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
        case of an error, the `error.id` of the JSON response body can be one of:

        `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
        `session_inactive`: No Ory Session was found - sign in a user first.
        `security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other
        identity logged in instead.

        More information can be found at [Ory Kratos User Settings & Profile Management Documentation](../self-service/flows/user-settings).
      operationId: getSelfServiceSettingsFlow
      parameters:
      - description: |-
          ID is the Settings Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/settings?flow=abcde`).
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: |-
          The Session Token

          When using the SDK in an app without a browser, please include the
          session token here.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceSettingsFlow'
          description: selfServiceSettingsFlow
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Settings Flow
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/verification:
    post:
      description: |-
        Use this endpoint to complete a verification flow. This endpoint
        behaves differently for API and browser flows and has several states:

        `choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent
        and works with API- and Browser-initiated flows.
        For API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid
        and a HTTP 303 See Other redirect with a fresh verification flow if the flow was otherwise invalid (e.g. expired).
        For Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Verification UI URL with the Verification Flow ID appended.
        `sent_email` is the success state after `choose_method` when using the `link` method and allows the user to request another verification email. It
        works for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.
        `passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow ("sending a verification link")
        does not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL
        (if the link was valid) and instructs the user to update their password, or a redirect to the Verification UI URL with
        a new Verification Flow ID which contains an error message that the verification link was invalid.

        More information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).
      operationId: submitSelfServiceVerificationFlow
      parameters:
      - description: |-
          The Verification Flow ID

          The value for this parameter comes from `flow` URL Query parameter sent to your
          application (e.g. `/verification?flow=abcde`).
        explode: true
        in: query
        name: flow
        required: true
        schema:
          type: string
        style: form
      - description: |-
          Verification Token

          The verification token which completes the verification request. If the token
          is invalid (e.g. expired) an error will be shown to the end-user.

          This parameter is usually set in a link and not used by any direct API call.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
          sent by the client to your server here. This ensures that CSRF and session cookies are respected.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSelfServiceVerificationFlowBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/submitSelfServiceVerificationFlowBody'
        required: true
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceVerificationFlow'
          description: selfServiceVerificationFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceVerificationFlow'
          description: selfServiceVerificationFlow
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Complete Verification Flow
      tags:
      - v0alpha2
      x-contentType: application/json
      x-accepts: application/json
  /self-service/verification/api:
    get:
      description: |-
        This endpoint initiates a verification flow for API clients such as mobile devices, smart TVs, and so on.

        To fetch an existing verification flow call `/self-service/verification/flows?flow=<flow_id>`.

        You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
        Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
        you vulnerable to a variety of CSRF attacks.

        This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).

        More information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation).
      operationId: initializeSelfServiceVerificationFlowWithoutBrowser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceVerificationFlow'
          description: selfServiceVerificationFlow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Verification Flow for APIs, Services, Apps, ...
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/verification/browser:
    get:
      description: |-
        This endpoint initializes a browser-based account verification flow. Once initialized, the browser will be redirected to
        `selfservice.flows.verification.ui_url` with the flow ID set as the query parameter `?flow=`.

        If this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects.

        This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...).

        More information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).
      operationId: initializeSelfServiceVerificationFlowForBrowsers
      parameters:
      - description: The URL to return the browser to after the flow was completed.
        explode: true
        in: query
        name: return_to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceVerificationFlow'
          description: selfServiceVerificationFlow
        "303":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Initialize Verification Flow for Browser Clients
      tags:
      - v0alpha2
      x-accepts: application/json
  /self-service/verification/flows:
    get:
      description: |-
        This endpoint returns a verification flow's context with, for example, error details and other information.

        Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
        For AJAX requests you must ensure that cookies are included in the request or requests will fail.

        If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
        and you need to forward the incoming HTTP Cookie header to this endpoint:

        ```js
        pseudo-code example
        router.get('/recovery', async function (req, res) {
        const flow = await client.getSelfServiceVerificationFlow(req.header('cookie'), req.query['flow'])

        res.render('verification', flow)
        })

        More information can be found at [Ory Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).
      operationId: getSelfServiceVerificationFlow
      parameters:
      - description: |-
          The Flow ID

          The value for this parameter comes from `request` URL Query parameter sent to your
          application (e.g. `/verification?flow=abcde`).
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: |-
          HTTP Cookies

          When using the SDK on the server side you must include the HTTP Cookie Header
          originally sent to your HTTP handler here.
        explode: false
        in: header
        name: cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selfServiceVerificationFlow'
          description: selfServiceVerificationFlow
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Get Verification Flow
      tags:
      - v0alpha2
      x-accepts: application/json
  /sessions:
    delete:
      description: |-
        This endpoint is useful for:

        To forcefully logout the current user from all other devices and sessions
      operationId: revokeSessions
      parameters:
      - description: Set the Session Token when calling from non-browser clients.
          A session token has a format of `MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj`.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
          scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
          An example of a session in the HTTP Cookie Header is: `ory_kratos_session=a19iOVAbdzdgl70Rq1QZmrKmcjDtdsviCTZx7m9a9yHIUS8Wa9T7hvqyGTsLHi6Qifn2WUfpAKx9DWp0SJGleIn9vh2YF4A16id93kXFTgIgmwIOvbVAScyrx7yVl6bPZnCx27ec4WQDtaTewC1CpgudeDV2jQQnSaCP6ny3xa8qLH-QUgYqdQuoA_LF1phxgRCUfIrCLQOkolX5nv3ze_f==`.

          It is ok if more than one cookie are included here as all other cookies will be ignored.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/revokedSessions'
          description: revokedSessions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: |-
        Calling this endpoint invalidates all except the current session that belong to the logged-in user.
        Session data are not deleted.
      tags:
      - v0alpha2
      x-accepts: application/json
    get:
      description: |-
        This endpoint is useful for:

        Displaying all other sessions that belong to the logged-in user
      operationId: listSessions
      parameters:
      - description: Set the Session Token when calling from non-browser clients.
          A session token has a format of `MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj`.
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
          scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
          An example of a session in the HTTP Cookie Header is: `ory_kratos_session=a19iOVAbdzdgl70Rq1QZmrKmcjDtdsviCTZx7m9a9yHIUS8Wa9T7hvqyGTsLHi6Qifn2WUfpAKx9DWp0SJGleIn9vh2YF4A16id93kXFTgIgmwIOvbVAScyrx7yVl6bPZnCx27ec4WQDtaTewC1CpgudeDV2jQQnSaCP6ny3xa8qLH-QUgYqdQuoA_LF1phxgRCUfIrCLQOkolX5nv3ze_f==`.

          It is ok if more than one cookie are included here as all other cookies will be ignored.
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Items per Page

          This is the number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 250
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |-
          Pagination Page

          This value is currently an integer, but it is not sequential. The value is not the page number, but a
          reference. The next page can be any number and some numbers might return an empty list.

          For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionList'
          description: sessionList
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: |-
        This endpoints returns all other active sessions that belong to the logged-in user.
        The current session can be retrieved by calling the `/sessions/whoami` endpoint.
      tags:
      - v0alpha2
      x-accepts: application/json
  /sessions/whoami:
    get:
      description: |-
        Uses the HTTP Headers in the GET request to determine (e.g. by using checking the cookies) who is authenticated.
        Returns a session object in the body or 401 if the credentials are invalid or no credentials were sent.
        Additionally when the request it successful it adds the user ID to the 'X-Kratos-Authenticated-Identity-Id' header
        in the response.

        If you call this endpoint from a server-side application, you must forward the HTTP Cookie Header to this endpoint:

        ```js
        pseudo-code example
        router.get('/protected-endpoint', async function (req, res) {
        const session = await client.toSession(undefined, req.header('cookie'))

        console.log(session)
        })
        ```

        When calling this endpoint from a non-browser application (e.g. mobile app) you must include the session token:

        ```js
        pseudo-code example
        ...
        const session = await client.toSession("the-session-token")

        console.log(session)
        ```

        Depending on your configuration this endpoint might return a 403 status code if the session has a lower Authenticator
        Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
        credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
        to sign in with the second factor or change the configuration.

        This endpoint is useful for:

        AJAX calls. Remember to send credentials and set up CORS correctly!
        Reverse proxies and API Gateways
        Server-side calls - use the `X-Session-Token` header!

        This endpoint authenticates users by checking

        if the `Cookie` HTTP header was set containing an Ory Kratos Session Cookie;
        if the `Authorization: bearer <ory-session-token>` HTTP header was set with a valid Ory Kratos Session Token;
        if the `X-Session-Token` HTTP header was set with a valid Ory Kratos Session Token.

        If none of these headers are set or the cooke or token are invalid, the endpoint returns a HTTP 401 status code.

        As explained above, this request may fail due to several reasons. The `error.id` can be one of:

        `session_inactive`: No active session was found in the request (e.g. no Ory Session Cookie / Ory Session Token).
        `session_aal2_required`: An active session was found but it does not fulfil the Authenticator Assurance Level, implying that the session must (e.g.) authenticate the second factor.
      operationId: toSession
      parameters:
      - description: Set the Session Token when calling from non-browser clients.
          A session token has a format of `MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj`.
        example: MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj
        explode: false
        in: header
        name: X-Session-Token
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
          scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
          An example of a session in the HTTP Cookie Header is: `ory_kratos_session=a19iOVAbdzdgl70Rq1QZmrKmcjDtdsviCTZx7m9a9yHIUS8Wa9T7hvqyGTsLHi6Qifn2WUfpAKx9DWp0SJGleIn9vh2YF4A16id93kXFTgIgmwIOvbVAScyrx7yVl6bPZnCx27ec4WQDtaTewC1CpgudeDV2jQQnSaCP6ny3xa8qLH-QUgYqdQuoA_LF1phxgRCUfIrCLQOkolX5nv3ze_f==`.

          It is ok if more than one cookie are included here as all other cookies will be ignored.
        example: ory_kratos_session=a19iOVAbdzdgl70Rq1QZmrKmcjDtdsviCTZx7m9a9yHIUS8Wa9T7hvqyGTsLHi6Qifn2WUfpAKx9DWp0SJGleIn9vh2YF4A16id93kXFTgIgmwIOvbVAScyrx7yVl6bPZnCx27ec4WQDtaTewC1CpgudeDV2jQQnSaCP6ny3xa8qLH-QUgYqdQuoA_LF1phxgRCUfIrCLQOkolX5nv3ze_f==
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: session
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: Check Who the Current HTTP Session Belongs To
      tags:
      - v0alpha2
      x-accepts: application/json
  /sessions/{id}:
    delete:
      description: |-
        This endpoint is useful for:

        To forcefully logout the current user from another device or session
      operationId: revokeSession
      parameters:
      - description: ID is the session's ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |-
            Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
            typically 201.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jsonError'
          description: jsonError
      summary: |-
        Calling this endpoint invalidates the specified session. The current session cannot be revoked.
        Session data are not deleted.
      tags:
      - v0alpha2
      x-accepts: application/json
  /userinfo:
    get:
      description: |-
        This endpoint returns the payload of the ID Token, including the idTokenExtra values, of
        the provided OAuth 2.0 Access Token.

        For more information please [refer to the spec](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).

        In the case of authentication error, a WWW-Authenticate header might be set in the response
        with more information about the error. See [the spec](https://datatracker.ietf.org/doc/html/rfc6750#section-3)
        for more details about header format.
      operationId: getOidcUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcUserInfo'
          description: oidcUserInfo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oAuth2ApiError'
          description: oAuth2ApiError
      security:
      - oauth2: []
      summary: OpenID Connect Userinfo
      tags:
      - v0alpha2
      x-accepts: application/json
  /version:
    get:
      description: |-
        This endpoint returns the version of Ory Kratos.

        If the service supports TLS Edge Termination, this endpoint does not require the
        `X-Forwarded-Proto` header to be set.

        Be aware that if you are running multiple nodes of this service, the version will never
        refer to the cluster state, only to a single instance.
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Returns the Ory Kratos version.
      security:
      - oryAccessToken: []
      summary: Return Running Software Version.
      tags:
      - metadata
      x-accepts: application/json
components:
  requestBodies:
    inline_object_1:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_2:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  responses:
    adminListOAuth2ClientsResponse:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/oAuth2Client'
            type: array
      description: The list of clients and pagination information.
    emptyResponse:
      description: |-
        Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
        typically 201.
  schemas:
    AdminUpdateIdentityBody:
      example:
        metadata_admin: ""
        traits: '{}'
        credentials:
          password:
            config:
              hashed_password: hashed_password
              password: password
          oidc:
            config:
              config:
                hashed_password: hashed_password
                password: password
              providers:
              - provider: provider
                subject: subject
              - provider: provider
                subject: subject
        schema_id: schema_id
        metadata_public: ""
      properties:
        credentials:
          $ref: '#/components/schemas/adminIdentityImportCredentials'
        metadata_admin:
          description: Store metadata about the user which is only accessible through
            admin APIs such as `GET /admin/identities/<id>`.
        metadata_public:
          description: |-
            Store metadata about the identity which the identity itself can see when calling for example the
            session endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field.
        schema_id:
          description: |-
            SchemaID is the ID of the JSON Schema to be used for validating the identity's traits. If set
            will update the Identity's SchemaID.
          type: string
        state:
          $ref: '#/components/schemas/identityState'
        traits:
          description: |-
            Traits represent an identity's traits. The identity is able to create, modify, and delete traits
            in a self-service manner. The input will always be validated against the JSON Schema defined
            in `schema_id`.
          type: object
      required:
      - schema_id
      - state
      - traits
      type: object
    CreateSubscriptionPayload:
      properties:
        plan_or_price:
          type: string
        provision_first_project:
          $ref: '#/components/schemas/UUID'
        return_to:
          type: string
      required:
      - plan_or_price
      - provision_first_project
      type: object
    CustomHostnameStatus:
      description: CustomHostnameStatus is the enumeration of valid state values in
        the CustomHostnameSSL
      type: string
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
    Headers:
      description: Headers is the jwt headers
      properties:
        extra:
          additionalProperties: true
          type: object
      type: object
    ID:
      format: int64
      type: integer
    IDTokenClaims:
      description: IDTokenClaims represent the claims used in open id connect requests
      properties:
        acr:
          type: string
        amr:
          items:
            type: string
          type: array
        at_hash:
          type: string
        aud:
          items:
            type: string
          type: array
        auth_time:
          format: date-time
          type: string
        c_hash:
          type: string
        exp:
          format: date-time
          type: string
        ext:
          additionalProperties: true
          type: object
        iat:
          format: date-time
          type: string
        iss:
          type: string
        jti:
          type: string
        nonce:
          type: string
        rat:
          format: date-time
          type: string
        sub:
          type: string
      type: object
    InvitePayload:
      properties:
        invitee_email:
          type: string
      type: object
    JSONRawMessage:
      title: JSONRawMessage represents a json.RawMessage that works well with JSON,
        SQL, and Swagger.
      type: object
    JoseJSONWebKeySet:
      type: object
    KetoNamespace:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    KetoNamespaces:
      items:
        $ref: '#/components/schemas/KetoNamespace'
      type: array
    NullBool:
      nullable: true
      type: boolean
    NullDuration:
      nullable: true
      pattern: ^[0-9]+(ns|us|ms|s|m|h)$
      type: string
    NullInt:
      nullable: true
      type: integer
    NullPlan:
      description: |2-

        unknown Unknown
        free Free
        start_up_monthly StartUpMonthly
        start_up_yearly StartUpYearly
        business_monthly BusinessMonthly
        business_yearly BusinessYearly
        custom Custom
      enum:
      - unknown
      - free
      - start_up_monthly
      - start_up_yearly
      - business_monthly
      - business_yearly
      - custom
      type: string
      x-go-enum-desc: |-
        unknown Unknown
        free Free
        start_up_monthly StartUpMonthly
        start_up_yearly StartUpYearly
        business_monthly BusinessMonthly
        business_yearly BusinessYearly
        custom Custom
    NullString:
      nullable: true
      type: string
    NullTime:
      format: date-time
      nullable: true
      type: string
    NullUUID:
      format: uuid4
      nullable: true
      type: string
    QuotaCustomDomains:
      properties:
        available_domains:
          format: int64
          type: integer
        can_use:
          type: boolean
        used_domains:
          format: int64
          type: integer
      type: object
    QuotaProjectMemberSeats:
      properties:
        project_id:
          $ref: '#/components/schemas/UUID'
        remaining_seats:
          format: int64
          type: integer
        total_seats:
          format: int64
          type: integer
      type: object
    RecoveryAddress:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        value: value
        via: via
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        value:
          type: string
        via:
          type: string
      required:
      - id
      - value
      - via
      type: object
    RecoveryAddressType:
      type: string
    String:
      $ref: '#/components/schemas/NullString'
    StringSliceJSONFormat:
      items:
        type: string
      title: StringSliceJSONFormat represents []string{} which is encoded to/from
        JSON for SQL storage.
      type: array
    SubscriptionStatus:
      description: |-
        For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated.

        A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over.

        If subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts.

        If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
      title: Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`,
        `past_due`, `canceled`, or `unpaid`.
      type: string
    Time:
      format: date-time
      type: string
    UUID:
      format: uuid4
      type: string
    UpdateOAuth2ClientLifespans:
      description: The OIDC Hybrid grant type inherits token lifespan configuration
        from the implicit grant.
      example:
        authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
        authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
        refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
        authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
        client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
        implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
        jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
        password_grant_access_token_lifespan: password_grant_access_token_lifespan
        implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
        refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
        password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
        refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
      properties:
        authorization_code_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        authorization_code_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        authorization_code_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        client_credentials_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        implicit_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        implicit_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        jwt_bearer_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        password_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        password_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        refresh_token_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        refresh_token_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        refresh_token_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
      title: |-
        UpdateOAuth2ClientLifespans holds default lifespan configuration for the different
        token types that may be issued for the client. This configuration takes
        precedence over fosite's instance-wide default lifespan, but it may be
        overridden by a session's expires_at claim.
      type: object
    UpdateSubscriptionPayload:
      properties:
        plan_or_price:
          type: string
        return_to:
          type: string
      required:
      - plan_or_price
      type: object
    Warning:
      example:
        code: 0
        message: message
      properties:
        code:
          format: int64
          type: integer
        message:
          type: string
      type: object
    acceptOAuth2ConsentRequest:
      properties:
        grant_access_token_audience:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        grant_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        handled_at:
          format: date-time
          title: NullTime implements sql.NullTime functionality.
          type: string
        remember:
          description: |-
            Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same
            client asks the same user for the same, or a subset of, scope.
          type: boolean
        remember_for:
          description: |-
            RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the
            authorization will be remembered indefinitely.
          format: int64
          type: integer
        session:
          $ref: '#/components/schemas/acceptOAuth2ConsentRequestSession'
      title: The request payload used to accept a consent request.
      type: object
    acceptOAuth2ConsentRequestSession:
      example:
        access_token: ""
        id_token: ""
      properties:
        access_token:
          description: |-
            AccessToken sets session data for the access and refresh token, as well as any future tokens issued by the
            refresh grant. Keep in mind that this data will be available to anyone performing OAuth 2.0 Challenge Introspection.
            If only your services can perform OAuth 2.0 Challenge Introspection, this is usually fine. But if third parties
            can access that endpoint as well, sensitive data from the session might be exposed to them. Use with care!
        id_token:
          description: |-
            IDToken sets session data for the OpenID Connect ID token. Keep in mind that the session'id payloads are readable
            by anyone that has access to the ID Challenge. Use with care!
      title: Pass session data to a consent request.
      type: object
    acceptOAuth2LoginRequest:
      properties:
        acr:
          description: |-
            ACR sets the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it
            to express that, for example, a user authenticated using two factor authentication.
          type: string
        amr:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        context:
          title: JSONRawMessage represents a json.RawMessage that works well with
            JSON, SQL, and Swagger.
          type: object
        force_subject_identifier:
          description: |-
            ForceSubjectIdentifier forces the "pairwise" user ID of the end-user that authenticated. The "pairwise" user ID refers to the
            (Pairwise Identifier Algorithm)[http://openid.net/specs/openid-connect-core-1_0.html#PairwiseAlg] of the OpenID
            Connect specification. It allows you to set an obfuscated subject ("user") identifier that is unique to the client.

            Please note that this changes the user ID on endpoint /userinfo and sub claim of the ID Token. It does not change the
            sub claim in the OAuth 2.0 Introspection.

            Per default, ORY Hydra handles this value with its own algorithm. In case you want to set this yourself
            you can use this field. Please note that setting this field has no effect if `pairwise` is not configured in
            ORY Hydra or the OAuth 2.0 Client does not expect a pairwise identifier (set via `subject_type` key in the client's
            configuration).

            Please also be aware that ORY Hydra is unable to properly compute this value during authentication. This implies
            that you have to compute this value on every authentication process (probably depending on the client ID or some
            other unique value).

            If you fail to compute the proper value, then authentication processes which have id_token_hint set might fail.
          type: string
        remember:
          description: |-
            Remember, if set to true, tells ORY Hydra to remember this user by telling the user agent (browser) to store
            a cookie with authentication data. If the same user performs another OAuth 2.0 Authorization Request, he/she
            will not be asked to log in again.
          type: boolean
        remember_for:
          description: |-
            RememberFor sets how long the authentication should be remembered for in seconds. If set to `0`, the
            authorization will be remembered for the duration of the browser session (using a session cookie).
          format: int64
          type: integer
        subject:
          description: Subject is the user ID of the end-user that authenticated.
          type: string
      required:
      - subject
      title: HandledLoginRequest is the request payload used to accept a login request.
      type: object
    activeProject:
      description: The Active Project ID
      properties:
        project_id:
          description: |-
            The Active Project ID

            format: uuid
          type: string
      type: object
    adminCreateIdentityBody:
      properties:
        credentials:
          $ref: '#/components/schemas/adminIdentityImportCredentials'
        metadata_admin:
          description: Store metadata about the user which is only accessible through
            admin APIs such as `GET /admin/identities/<id>`.
        metadata_public:
          description: |-
            Store metadata about the identity which the identity itself can see when calling for example the
            session endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field.
        recovery_addresses:
          description: |-
            RecoveryAddresses contains all the addresses that can be used to recover an identity.

            Use this structure to import recovery addresses for an identity. Please keep in mind
            that the address needs to be represented in the Identity Schema or this field will be overwritten
            on the next identity update.
          items:
            $ref: '#/components/schemas/RecoveryAddress'
          type: array
        schema_id:
          description: SchemaID is the ID of the JSON Schema to be used for validating
            the identity's traits.
          type: string
        state:
          $ref: '#/components/schemas/identityState'
        traits:
          description: |-
            Traits represent an identity's traits. The identity is able to create, modify, and delete traits
            in a self-service manner. The input will always be validated against the JSON Schema defined
            in `schema_url`.
          type: object
        verifiable_addresses:
          description: |-
            VerifiableAddresses contains all the addresses that can be verified by the user.

            Use this structure to import verified addresses for an identity. Please keep in mind
            that the address needs to be represented in the Identity Schema or this field will be overwritten
            on the next identity update.
          items:
            $ref: '#/components/schemas/verifiableIdentityAddress'
          type: array
      required:
      - schema_id
      - traits
      type: object
    adminCreateIdentityImportCredentialsOidc:
      example:
        config:
          config:
            hashed_password: hashed_password
            password: password
          providers:
          - provider: provider
            subject: subject
          - provider: provider
            subject: subject
      properties:
        config:
          $ref: '#/components/schemas/adminCreateIdentityImportCredentialsOidcConfig'
      type: object
    adminCreateIdentityImportCredentialsOidcConfig:
      example:
        config:
          hashed_password: hashed_password
          password: password
        providers:
        - provider: provider
          subject: subject
        - provider: provider
          subject: subject
      properties:
        config:
          $ref: '#/components/schemas/adminCreateIdentityImportCredentialsPasswordConfig'
        providers:
          description: A list of OpenID Connect Providers
          items:
            $ref: '#/components/schemas/adminCreateIdentityImportCredentialsOidcProvider'
          type: array
      type: object
    adminCreateIdentityImportCredentialsOidcProvider:
      example:
        provider: provider
        subject: subject
      properties:
        provider:
          description: The OpenID Connect provider to link the subject to. Usually
            something like `google` or `github`.
          type: string
        subject:
          description: The subject (`sub`) of the OpenID Connect connection. Usually
            the `sub` field of the ID Token.
          type: string
      required:
      - provider
      - subject
      type: object
    adminCreateIdentityImportCredentialsPassword:
      example:
        config:
          hashed_password: hashed_password
          password: password
      properties:
        config:
          $ref: '#/components/schemas/adminCreateIdentityImportCredentialsPasswordConfig'
      type: object
    adminCreateIdentityImportCredentialsPasswordConfig:
      example:
        hashed_password: hashed_password
        password: password
      properties:
        hashed_password:
          description: The hashed password in [PHC format]( https://www.ory.sh/docs/kratos/concepts/credentials/username-email-password#hashed-password-format)
          type: string
        password:
          description: The password in plain text if no hash is available.
          type: string
      type: object
    adminCreateJsonWebKeySetBody:
      properties:
        alg:
          description: The algorithm to be used for creating the key. Supports "RS256",
            "ES256", "ES512", "HS512", and "HS256"
          type: string
        kid:
          description: The kid of the key to be created
          type: string
        use:
          description: |-
            The "use" (public key use) parameter identifies the intended use of
            the public key. The "use" parameter is employed to indicate whether
            a public key is used for encrypting data or verifying the signature
            on data. Valid values are "enc" and "sig".
          type: string
      required:
      - alg
      - kid
      - use
      type: object
    adminCreateSelfServiceRecoveryLinkBody:
      properties:
        expires_in:
          description: |-
            Link Expires In

            The recovery link will expire at that point in time. Defaults to the configuration value of
            `selfservice.flows.recovery.request_lifespan`.
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        identity_id:
          $ref: '#/components/schemas/UUID'
      required:
      - identity_id
      type: object
    adminIdentityImportCredentials:
      example:
        password:
          config:
            hashed_password: hashed_password
            password: password
        oidc:
          config:
            config:
              hashed_password: hashed_password
              password: password
            providers:
            - provider: provider
              subject: subject
            - provider: provider
              subject: subject
      properties:
        oidc:
          $ref: '#/components/schemas/adminCreateIdentityImportCredentialsOidc'
        password:
          $ref: '#/components/schemas/adminCreateIdentityImportCredentialsPassword'
      type: object
    adminTrustOAuth2JwtGrantIssuerBody:
      properties:
        allow_any_subject:
          description: The "allow_any_subject" indicates that the issuer is allowed
            to have any principal as the subject of the JWT.
          type: boolean
        expires_at:
          description: The "expires_at" indicates, when grant will expire, so we will
            reject assertion from "issuer" targeting "subject".
          format: date-time
          type: string
        issuer:
          description: The "issuer" identifies the principal that issued the JWT assertion
            (same as "iss" claim in JWT).
          example: https://jwt-idp.example.com
          type: string
        jwk:
          $ref: '#/components/schemas/jsonWebKey'
        scope:
          description: The "scope" contains list of scope values (as described in
            Section 3.3 of OAuth 2.0 [RFC6749])
          example:
          - openid
          - offline
          items:
            type: string
          type: array
        subject:
          description: The "subject" identifies the principal that is the subject
            of the JWT.
          example: mike@example.com
          type: string
      required:
      - expires_at
      - issuer
      - jwk
      - scope
      type: object
    apiToken:
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: |-
            The Token's Name

            Set this to help you remember, for example, where you use the token.
          type: string
        owner_id:
          $ref: '#/components/schemas/UUID'
        project_id:
          $ref: '#/components/schemas/UUID'
        value:
          description: The token's value
          readOnly: true
          type: string
      required:
      - id
      - name
      - owner_id
      type: object
    apiTokens:
      items:
        $ref: '#/components/schemas/apiToken'
      type: array
    authenticatorAssuranceLevel:
      description: |-
        The authenticator assurance level can be one of "aal1", "aal2", or "aal3". A higher number means that it is harder
        for an attacker to compromise the account.

        Generally, "aal1" implies that one authentication factor was used while AAL2 implies that two factors (e.g.
        password + TOTP) have been used.

        To learn more about these levels please head over to: https://www.ory.sh/kratos/docs/concepts/credentials
      enum:
      - aal0
      - aal1
      - aal2
      - aal3
      title: Authenticator Assurance Level (AAL)
      type: string
    cloudAccount:
      properties:
        email:
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
      type: object
    cnameSettings:
      properties:
        cookie_domain:
          type: string
        cors_allowed_origins:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        cors_enabled:
          type: boolean
        created_at:
          format: date-time
          type: string
        hostname:
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          format: date-time
          type: string
        verification_errors:
          items:
            type: string
          type: array
        verification_status:
          description: CustomHostnameStatus is the enumeration of valid state values
            in the CustomHostnameSSL
          type: string
      type: object
    createCustomHostnameBody:
      properties:
        cookie_domain:
          description: The domain where cookies will be set. Has to be a parent domain
            of the custom hostname to work.
          type: string
        cors_allowed_origins:
          description: CORS Allowed origins for the custom hostname.
          items:
            type: string
          type: array
        cors_enabled:
          description: CORS Enabled for the custom hostname.
          type: boolean
        hostname:
          description: The custom hostname where the API will be exposed.
          type: string
      type: object
    createProjectBody:
      properties:
        name:
          description: The name of the project to be created
          type: string
      required:
      - name
      type: object
    errorAuthenticatorAssuranceLevelNotSatisfied:
      properties:
        code:
          description: The status code
          example: 404
          format: int64
          type: integer
        debug:
          description: |-
            Debug information

            This field is often not exposed to protect against leaking
            sensitive information.
          example: SQL field "foo" is not a bool.
          type: string
        details:
          additionalProperties: true
          description: Further error details
          type: object
        id:
          description: |-
            The error ID

            Useful when trying to identify various errors in application logic.
          type: string
        message:
          description: |-
            Error message

            The error's message.
          example: The resource could not be found
          type: string
        reason:
          description: A human-readable reason for the error
          example: User with ID 1234 does not exist.
          type: string
        redirect_browser_to:
          type: string
        request:
          description: |-
            The request ID

            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          type: string
        status:
          description: The status description
          example: Not Found
          type: string
      required:
      - message
      title: ErrAALNotSatisfied is returned when an active session was found but the
        requested AAL is not satisfied.
      type: object
    expandTree:
      example:
        tuple:
          subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
        children:
        - null
        - null
        type: union
      properties:
        children:
          description: The children of the node, possibly none.
          items:
            $ref: '#/components/schemas/expandTree'
          type: array
        tuple:
          $ref: '#/components/schemas/relationTuple'
        type:
          description: |-
            The type of the node.
            union TreeNodeUnion
            exclusion TreeNodeExclusion
            intersection TreeNodeIntersection
            leaf TreeNodeLeaf
            tuple_to_subject_set TreeNodeTupleToSubjectSet
            computed_subject_set TreeNodeComputedSubjectSet
            not TreeNodeNot
            unspecified TreeNodeUnspecified
          enum:
          - union
          - exclusion
          - intersection
          - leaf
          - tuple_to_subject_set
          - computed_subject_set
          - not
          - unspecified
          type: string
          x-go-enum-desc: |-
            union TreeNodeUnion
            exclusion TreeNodeExclusion
            intersection TreeNodeIntersection
            leaf TreeNodeLeaf
            tuple_to_subject_set TreeNodeTupleToSubjectSet
            computed_subject_set TreeNodeComputedSubjectSet
            not TreeNodeNot
            unspecified TreeNodeUnspecified
      required:
      - type
      type: object
    genericError:
      description: Error responses are sent when an error (e.g. unauthorized, bad
        request, ...) occurred.
      properties:
        code:
          description: The status code
          example: 404
          format: int64
          type: integer
        debug:
          description: |-
            Debug information

            This field is often not exposed to protect against leaking
            sensitive information.
          example: SQL field "foo" is not a bool.
          type: string
        details:
          additionalProperties: false
          description: Further error details
          items:
            additionalProperties: true
            type: object
          type: array
        error:
          $ref: '#/components/schemas/genericErrorContent'
        id:
          description: |-
            The error ID

            Useful when trying to identify various errors in application logic.
          type: string
        message:
          description: |-
            Error message

            The error's message.
          example: The resource could not be found
          type: string
        reason:
          description: A human-readable reason for the error
          example: User with ID 1234 does not exist.
          type: string
        request:
          description: |-
            The request ID

            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          type: string
        status:
          description: The status description
          example: Not Found
          type: string
      required:
      - message
      title: Error response
      type: object
    genericErrorContent:
      description: Error response
      properties:
        debug:
          description: Debug contains debug information. This is usually not available
            and has to be enabled.
          example: The database adapter was unable to find the element
          type: string
        error:
          description: Name is the error name.
          example: The requested resource could not be found
          type: string
        error_description:
          description: Description contains further information on the nature of the
            error.
          example: Object with ID 12345 does not exist
          type: string
        message:
          description: Message contains the error message.
          type: string
        status_code:
          description: Code represents the error status code (404, 403, 401, ...).
          example: 404
          format: int64
          type: integer
      type: object
    getCheckResponse:
      description: The content of the allowed field is mirrored in the HTTP status
        code.
      example:
        allowed: true
      properties:
        allowed:
          description: whether the relation tuple is allowed
          type: boolean
      required:
      - allowed
      title: RESTResponse represents the response for a check request.
      type: object
    getManagedIdentitySchemaLocation:
      properties:
        location:
          type: string
      type: object
    getProjectAccessResponse:
      additionalProperties:
        type: boolean
      type: object
    getRelationTuplesResponse:
      example:
        next_page_token: next_page_token
        relation_tuples:
        - subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
        - subject_id: subject_id
          namespace: namespace
          object: object
          relation: relation
          subject_set:
            namespace: namespace
            object: object
            relation: relation
      properties:
        next_page_token:
          description: |-
            The opaque token to provide in a subsequent request
            to get the next page. It is the empty string iff this is
            the last page.
          type: string
        relation_tuples:
          items:
            $ref: '#/components/schemas/relationTuple'
          type: array
      type: object
    handledOAuth2ConsentRequest:
      properties:
        redirect_to:
          description: Original request URL to which you should redirect the user
            if request was already handled.
          type: string
      required:
      - redirect_to
      title: The response payload sent when there is an attempt to access an already
        handled consent request.
      type: object
    handledOAuth2LoginRequest:
      properties:
        redirect_to:
          description: Original request URL to which you should redirect the user
            if request was already handled.
          type: string
      required:
      - redirect_to
      title: The response payload sent when there is an attempt to access an already
        handled login request.
      type: object
    handledOAuth2LogoutRequest:
      properties:
        redirect_to:
          description: Original request URL to which you should redirect the user
            if request was already handled.
          type: string
      required:
      - redirect_to
      title: The response payload sent when there is an attempt to access an already
        handled logout request.
      type: object
    healthNotReadyStatus:
      properties:
        errors:
          additionalProperties:
            type: string
          description: Errors contains a list of errors that caused the not ready
            status.
          type: object
      type: object
    healthStatus:
      example:
        status: status
      properties:
        status:
          description: Status always contains "ok".
          type: string
      type: object
    identity:
      description: |-
        An identity can be a real human, a service, an IoT device - everything that
        can be described as an "actor" in a system.
      example:
        traits: ""
        credentials:
          key:
            updated_at: 2000-01-23T04:56:07.000+00:00
            identifiers:
            - identifiers
            - identifiers
            created_at: 2000-01-23T04:56:07.000+00:00
            config: '{}'
            version: 0
        state_changed_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        recovery_addresses:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          value: value
          via: via
        - updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          value: value
          via: via
        metadata_admin: '{}'
        updated_at: 2000-01-23T04:56:07.000+00:00
        verifiable_addresses:
        - updated_at: 2014-01-01T23:28:56.782Z
          verified_at: 2000-01-23T04:56:07.000+00:00
          verified: true
          created_at: 2014-01-01T23:28:56.782Z
          value: value
          status: status
          via: via
        - updated_at: 2014-01-01T23:28:56.782Z
          verified_at: 2000-01-23T04:56:07.000+00:00
          verified: true
          created_at: 2014-01-01T23:28:56.782Z
          value: value
          status: status
          via: via
        schema_id: schema_id
        schema_url: schema_url
        metadata_public: '{}'
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        credentials:
          additionalProperties:
            $ref: '#/components/schemas/identityCredentials'
          description: Credentials represents all credentials that can be used for
            authenticating this identity.
          type: object
        id:
          $ref: '#/components/schemas/UUID'
        metadata_admin:
          description: NullJSONRawMessage represents a json.RawMessage that works
            well with JSON, SQL, and Swagger and is NULLable-
          type: object
        metadata_public:
          description: NullJSONRawMessage represents a json.RawMessage that works
            well with JSON, SQL, and Swagger and is NULLable-
          type: object
        recovery_addresses:
          description: RecoveryAddresses contains all the addresses that can be used
            to recover an identity.
          items:
            $ref: '#/components/schemas/RecoveryAddress'
          type: array
          x-omitempty: true
        schema_id:
          description: SchemaID is the ID of the JSON Schema to be used for validating
            the identity's traits.
          type: string
        schema_url:
          description: |-
            SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.

            format: url
          type: string
        state:
          $ref: '#/components/schemas/identityState'
        state_changed_at:
          format: date-time
          title: NullTime implements sql.NullTime functionality.
          type: string
        traits:
          description: |-
            Traits represent an identity's traits. The identity is able to create, modify, and delete traits
            in a self-service manner. The input will always be validated against the JSON Schema defined
            in `schema_url`.
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        verifiable_addresses:
          description: VerifiableAddresses contains all the addresses that can be
            verified by the user.
          items:
            $ref: '#/components/schemas/verifiableIdentityAddress'
          type: array
          x-omitempty: true
      required:
      - id
      - schema_id
      - schema_url
      - traits
      title: Identity represents an Ory Kratos identity
      type: object
    identityCredentials:
      description: Credentials represents a specific credential type
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - identifiers
        - identifiers
        created_at: 2000-01-23T04:56:07.000+00:00
        config: '{}'
        version: 0
      properties:
        config:
          title: JSONRawMessage represents a json.RawMessage that works well with
            JSON, SQL, and Swagger.
          type: object
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        identifiers:
          description: Identifiers represents a list of unique identifiers this credential
            type matches.
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/identityCredentialsType'
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        version:
          description: Version refers to the version of the credential. Useful when
            changing the config schema.
          format: int64
          type: integer
      type: object
    identityCredentialsOidc:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/identityCredentialsOidcProvider'
          type: array
      title: CredentialsOIDC is contains the configuration for credentials of the
        type oidc.
      type: object
    identityCredentialsOidcProvider:
      properties:
        initial_access_token:
          type: string
        initial_id_token:
          type: string
        initial_refresh_token:
          type: string
        provider:
          type: string
        subject:
          type: string
      title: CredentialsOIDCProvider is contains a specific OpenID COnnect credential
        for a particular connection (e.g. Google).
      type: object
    identityCredentialsPassword:
      properties:
        hashed_password:
          description: HashedPassword is a hash-representation of the password.
          type: string
      title: CredentialsPassword is contains the configuration for credentials of
        the type password.
      type: object
    identityCredentialsType:
      description: and so on.
      enum:
      - password
      - totp
      - oidc
      - webauthn
      - lookup_secret
      title: CredentialsType  represents several different credential types, like
        password credentials, passwordless credentials,
      type: string
    identityList:
      items:
        $ref: '#/components/schemas/identity'
      title: A list of identities.
      type: array
    identityMetaSchema:
      type: object
    identitySchema:
      description: Raw JSON Schema
      type: object
    identitySchemaContainer:
      example:
        schema: '{}'
        id: id
      properties:
        id:
          description: The ID of the Identity JSON Schema
          type: string
        schema:
          description: Raw JSON Schema
          type: object
      type: object
    identitySchemaPreset:
      properties:
        schema:
          description: Schema is the Identity JSON Schema
          type: object
        url:
          description: URL is the preset identifier
          type: string
      required:
      - schema
      - url
      type: object
    identitySchemaPresets:
      items:
        $ref: '#/components/schemas/identitySchemaPreset'
      type: array
    identitySchemas:
      description: Raw identity Schema list
      items:
        $ref: '#/components/schemas/identitySchemaContainer'
      type: array
    identityState:
      description: The state can either be `active` or `inactive`.
      enum:
      - active
      - inactive
      title: An Identity's State
      type: string
    identityTraits:
      description: |-
        Traits represent an identity's traits. The identity is able to create, modify, and delete traits
        in a self-service manner. The input will always be validated against the JSON Schema defined
        in `schema_url`.
    identityVerifiableAddressStatus:
      description: VerifiableAddressStatus must not exceed 16 characters as that is
        the limitation in the SQL Schema
      type: string
    identityVerifiableAddressType:
      description: VerifiableAddressType must not exceed 16 characters as that is
        the limitation in the SQL Schema
      type: string
    introspectedOAuth2Token:
      description: |-
        Introspection contains an access token's session data as specified by
        [IETF RFC 7662](https://tools.ietf.org/html/rfc7662)
      example:
        ext:
          key: '{}'
        sub: sub
        iss: iss
        active: true
        obfuscated_subject: obfuscated_subject
        token_type: token_type
        client_id: client_id
        aud:
        - aud
        - aud
        nbf: 1
        token_use: token_use
        scope: scope
        exp: 0
        iat: 6
        username: username
      properties:
        active:
          description: |-
            Active is a boolean indicator of whether or not the presented token
            is currently active.  The specifics of a token's "active" state
            will vary depending on the implementation of the authorization
            server and the information it keeps about its tokens, but a "true"
            value return for the "active" property will generally indicate
            that a given token has been issued by this authorization server,
            has not been revoked by the resource owner, and is within its
            given time window of validity (e.g., after its issuance time and
            before its expiration time).
          type: boolean
        aud:
          description: Audience contains a list of the token's intended audiences.
          items:
            type: string
          type: array
        client_id:
          description: |-
            ID is aclient identifier for the OAuth 2.0 client that
            requested this token.
          type: string
        exp:
          description: |-
            Expires at is an integer timestamp, measured in the number of seconds
            since January 1 1970 UTC, indicating when this token will expire.
          format: int64
          type: integer
        ext:
          additionalProperties: true
          description: Extra is arbitrary data set by the session.
          type: object
        iat:
          description: |-
            Issued at is an integer timestamp, measured in the number of seconds
            since January 1 1970 UTC, indicating when this token was
            originally issued.
          format: int64
          type: integer
        iss:
          description: IssuerURL is a string representing the issuer of this token
          type: string
        nbf:
          description: |-
            NotBefore is an integer timestamp, measured in the number of seconds
            since January 1 1970 UTC, indicating when this token is not to be
            used before.
          format: int64
          type: integer
        obfuscated_subject:
          description: |-
            ObfuscatedSubject is set when the subject identifier algorithm was set to "pairwise" during authorization.
            It is the `sub` value of the ID Token that was issued.
          type: string
        scope:
          description: |-
            Scope is a JSON string containing a space-separated list of
            scopes associated with this token.
          type: string
        sub:
          description: |-
            Subject of the token, as defined in JWT [RFC7519].
            Usually a machine-readable identifier of the resource owner who
            authorized this token.
          type: string
        token_type:
          description: TokenType is the introspected token's type, typically `Bearer`.
          type: string
        token_use:
          description: TokenUse is the introspected token's use, for example `access_token`
            or `refresh_token`.
          type: string
        username:
          description: |-
            Username is a human-readable identifier for the resource owner who
            authorized this token.
          type: string
      required:
      - active
      type: object
    isOwnerForProjectBySlug:
      properties:
        ProjectSlug:
          description: ProjectSlug is the project's slug.
          type: string
        Subject:
          description: Subject is the subject from the API Token.
          type: string
      required:
      - ProjectSlug
      - Subject
      type: object
    isOwnerForProjectBySlugPayload:
      properties:
        project_scope:
          description: |-
            ProjectScope is the project_id resolved from the
            API Token.
          type: string
        project_slug:
          description: ProjectSlug is the project's slug.
          type: string
        subject:
          description: Subject is the subject from the API Token.
          type: string
      required:
      - project_slug
      - subject
      type: object
    jsonError:
      description: The standard Ory JSON API error format.
      properties:
        error:
          $ref: '#/components/schemas/genericError'
      required:
      - error
      title: JSON API Error Response
      type: object
    jsonPatch:
      description: |-
        JSON Patch allows you to target individual keys in a JSON document for updates.

        For more examples see: https://jsonpatch.com
      properties:
        from:
          description: |-
            This field is used together with operation "move" and uses JSON Pointer notation.

            Learn more [about JSON Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).
          example: /name
          type: string
        op:
          description: The JSON Patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          example: replace
          type: string
        path:
          description: The JSON Pointer to the target key
          example: /services/identity/config/smtp/from_name
          type: string
        value:
          description: The value to be used. Only available for `add` and `replace`
            operations.
          example: foobar
      required:
      - op
      - path
      title: A JSON Patch
      type: object
    jsonPatchDocument:
      description: A JSONPatchDocument request
      items:
        $ref: '#/components/schemas/jsonPatch'
      type: array
    jsonWebKey:
      example:
        d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        e: AQAB
        crv: P-256
        use: sig
        kid: 1603dfe0af8f4596
        x5c:
        - x5c
        - x5c
        k: GawgguFyGrWKav7AX4VKUg
        dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        n: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        kty: RSA
        q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        y: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        alg: RS256
      properties:
        alg:
          description: |-
            The "alg" (algorithm) parameter identifies the algorithm intended for
            use with the key.  The values used should either be registered in the
            IANA "JSON Web Signature and Encryption Algorithms" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.
          example: RS256
          type: string
        crv:
          example: P-256
          type: string
        d:
          example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
          type: string
        dp:
          example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
          type: string
        dq:
          example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
          type: string
        e:
          example: AQAB
          type: string
        k:
          example: GawgguFyGrWKav7AX4VKUg
          type: string
        kid:
          description: |-
            The "kid" (key ID) parameter is used to match a specific key.  This
            is used, for instance, to choose among a set of keys within a JWK Set
            during key rollover.  The structure of the "kid" value is
            unspecified.  When "kid" values are used within a JWK Set, different
            keys within the JWK Set SHOULD use distinct "kid" values.  (One
            example in which different keys might use the same "kid" value is if
            they have different "kty" (key type) values but are considered to be
            equivalent alternatives by the application using them.)  The "kid"
            value is a case-sensitive string.
          example: 1603dfe0af8f4596
          type: string
        kty:
          description: |-
            The "kty" (key type) parameter identifies the cryptographic algorithm
            family used with the key, such as "RSA" or "EC". "kty" values should
            either be registered in the IANA "JSON Web Key Types" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.  The "kty" value is a case-sensitive string.
          example: RSA
          type: string
        n:
          example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
          type: string
        p:
          example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
          type: string
        q:
          example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
          type: string
        qi:
          example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
          type: string
        use:
          description: |-
            Use ("public key use") identifies the intended use of
            the public key. The "use" parameter is employed to indicate whether
            a public key is used for encrypting data or verifying the signature
            on data. Values are commonly "sig" (signature) or "enc" (encryption).
          example: sig
          type: string
        x:
          example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
          type: string
        x5c:
          description: |-
            The "x5c" (X.509 certificate chain) parameter contains a chain of one
            or more PKIX certificates [RFC5280].  The certificate chain is
            represented as a JSON array of certificate value strings.  Each
            string in the array is a base64-encoded (Section 4 of [RFC4648] --
            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
            The PKIX certificate containing the key value MUST be the first
            certificate.
          items:
            type: string
          type: array
        y:
          example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
          type: string
      required:
      - alg
      - kid
      - kty
      - use
      type: object
    jsonWebKeySet:
      description: |-
        It is important that this model object is named JSONWebKeySet for
        "swagger generate spec" to generate only on definition of a
        JSONWebKeySet. Since one with the same name is previously defined as
        client.Client.JSONWebKeys and this one is last, this one will be
        effectively written in the swagger spec.
      example:
        keys:
        - d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
          e: AQAB
          crv: P-256
          use: sig
          kid: 1603dfe0af8f4596
          x5c:
          - x5c
          - x5c
          k: GawgguFyGrWKav7AX4VKUg
          dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
          dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
          n: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
          p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
          kty: RSA
          q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
          qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
          x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
          y: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
          alg: RS256
        - d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
          e: AQAB
          crv: P-256
          use: sig
          kid: 1603dfe0af8f4596
          x5c:
          - x5c
          - x5c
          k: GawgguFyGrWKav7AX4VKUg
          dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
          dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
          n: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
          p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
          kty: RSA
          q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
          qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
          x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
          y: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
          alg: RS256
      properties:
        keys:
          description: |-
            The value of the "keys" parameter is an array of JSON Web Key (JWK)
            values. By default, the order of the JWK values within the array does
            not imply an order of preference among them, although applications
            of JWK Sets can choose to assign a meaning to the order for their
            purposes, if desired.
          items:
            $ref: '#/components/schemas/jsonWebKey'
          type: array
      type: object
    listCustomHostnamesResponse:
      items:
        $ref: '#/components/schemas/cnameSettings'
      type: array
    managedIdentitySchema:
      description: |-
        Together the name and identity uuid are a unique index constraint.
        This prevents a user from having schemas with the same name.
        This also allows schemas to have the same name across the system.
      properties:
        blob_name:
          description: |-
            The gcs file name

            This is a randomly generated name which is used to uniquely identify the file on the blob storage
          type: string
        blob_url:
          description: The publicly accessible url of the schema
          type: string
        content_hash:
          description: |-
            The Content Hash

            Contains a hash of the schema's content.
          type: string
        created_at:
          description: The Schema's Creation Date
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: |-
            The schema name

            This is set by the user and is for them to easily recognise their schema
          example: CustomerIdentity
          type: string
        updated_at:
          description: Last Time Schema was Updated
          format: date-time
          readOnly: true
          type: string
      required:
      - blob_name
      - blob_url
      - created_at
      - id
      - name
      - updated_at
      title: Schema represents an Ory Kratos Identity Schema
      type: object
    managedIdentitySchemaValidationResult:
      properties:
        message:
          type: string
        valid:
          type: boolean
      type: object
    managedIdentitySchemas:
      items:
        $ref: '#/components/schemas/managedIdentitySchema'
      type: array
    needsPrivilegedSessionError:
      properties:
        code:
          description: The status code
          example: 404
          format: int64
          type: integer
        debug:
          description: |-
            Debug information

            This field is often not exposed to protect against leaking
            sensitive information.
          example: SQL field "foo" is not a bool.
          type: string
        details:
          additionalProperties: true
          description: Further error details
          type: object
        id:
          description: |-
            The error ID

            Useful when trying to identify various errors in application logic.
          type: string
        message:
          description: |-
            Error message

            The error's message.
          example: The resource could not be found
          type: string
        reason:
          description: A human-readable reason for the error
          example: User with ID 1234 does not exist.
          type: string
        redirect_browser_to:
          description: Points to where to redirect the user to next.
          type: string
        request:
          description: |-
            The request ID

            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          type: string
        status:
          description: The status description
          example: Not Found
          type: string
      required:
      - message
      - redirect_browser_to
      title: Is sent when a privileged session is required to perform the settings
        update.
      type: object
    normalizedProject:
      properties:
        created_at:
          description: The Project's Creation Date
          format: date-time
          readOnly: true
          type: string
        current_revision:
          $ref: '#/components/schemas/normalizedProjectRevision'
        hosts:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        id:
          $ref: '#/components/schemas/UUID'
        revisions:
          items:
            $ref: '#/components/schemas/normalizedProjectRevision'
          type: array
        slug:
          description: The project's slug
          readOnly: true
          type: string
        state:
          description: |-
            The state of the project.
            running Running
            halted Halted
          enum:
          - running
          - halted
          readOnly: true
          type: string
          x-go-enum-desc: |-
            running Running
            halted Halted
        subscription_id:
          format: uuid4
          nullable: true
          type: string
        updated_at:
          description: Last Time Project was Updated
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - current_revision
      - hosts
      - id
      - revisions
      - slug
      - state
      - updated_at
      type: object
    normalizedProjectRevision:
      properties:
        created_at:
          description: The Project's Revision Creation Date
          format: date-time
          readOnly: true
          type: string
        hydra_oauth2_client_credentials_default_grant_allowed_scope:
          description: |-
            Automatically grant authorized OAuth2 Scope in OAuth2 Client Credentials Flow.

            Each OAuth2 Client is allowed to request a predefined OAuth2 Scope (for example `read write`). If this option is enabled, the full
            scope is automatically granted when performing the OAuth2 Client Credentials flow.

            If disabled, the OAuth2 Client has to request the scope in the OAuth2 request by providing the `scope` query parameter.

            Setting this option to true is common if you need compatibility with MITREid.

            This governs the "oauth2.client_credentials.default_grant_allowed_scope" setting.
          type: boolean
        hydra_oauth2_grant_jwt_iat_optional:
          description: |-
            Configures if the issued at (`iat`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).

            If set to `false`, the `iat` claim is required. Set this value to `true` only after careful consideration.

            This governs the "oauth2.grant.jwt.iat_optional" setting.
          type: boolean
        hydra_oauth2_grant_jwt_jti_optional:
          description: |-
            Configures if the JSON Web Token ID (`jti`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).

            If set to `false`, the `jti` claim is required. Set this value to `true` only after careful consideration.

            This governs the "oauth2.grant.jwt.jti_optional" setting.
          type: boolean
        hydra_oauth2_grant_jwt_max_ttl:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_oauth2_pkce_enforced:
          description: |-
            Configures whether PKCE should be enforced for all OAuth2 Clients.

            This governs the "oauth2.pkce.enforced" setting.
          type: boolean
        hydra_oauth2_pkce_enforced_for_public_clients:
          description: |-
            Configures whether PKCE should be enforced for OAuth2 Clients without a client secret (public clients).

            This governs the "oauth2.pkce.enforced_for_public_clients" setting.
          type: boolean
        hydra_oauth2_refresh_token_hook:
          description: |-
            Sets the Refresh Token Hook Endpoint. If set this endpoint will be called during the OAuth2 Token Refresh grant update the OAuth2 Access Token claims.

            This governs the "oauth2.refresh_token_hook" setting.
          type: string
        hydra_oauth2_session_allowed_top_level_claims:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_oauth2_session_exclude_not_before_claim:
          description: |-
            Set to true if you want to exclude claim `nbf (not before)` part of access token.

            This governs the "oauth2.session.exclude_not_before_claim" setting.
          type: boolean
        hydra_oidc_dynamic_client_registration_default_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_oidc_dynamic_client_registration_enabled:
          description: |-
            Configures OpenID Connect Dynamic Client Registration.

            This governs the "oidc.dynamic_client_registration.enabled" setting.
          type: boolean
        hydra_oidc_subject_identifiers_pairwise_salt:
          description: |-
            Configures OpenID Connect Discovery and overwrites the pairwise algorithm

            This governs the "oidc.subject_identifiers.pairwise_salt" setting.
          type: string
        hydra_oidc_subject_identifiers_supported_types:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_secrets_cookie:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_secrets_system:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_serve_admin_cors_allowed_origins:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_serve_admin_cors_enabled:
          description: |-
            Configures the Ory Hydra CORS Settings

            This governs the "serve.admin.cors.enabled" setting.
          type: boolean
        hydra_serve_cookies_same_site_legacy_workaround:
          description: |-
            Configures the Ory Hydra Cookie Same Site Legacy Workaround

            This governs the "serve.cookies.same_site_legacy_workaround" setting.
          type: boolean
        hydra_serve_cookies_same_site_mode:
          description: |-
            Configures the Ory Hydra Cookie Same Site Mode

            This governs the "serve.cookies.same_site_mode" setting.
          type: string
        hydra_serve_public_cors_allowed_origins:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_serve_public_cors_enabled:
          description: |-
            Configures the Ory Hydra CORS Settings

            This governs the "serve.public.cors.enabled" setting.
          type: boolean
        hydra_strategies_access_token:
          description: |-
            Defines access token type. jwt is a bad idea, see https://www.ory.sh/docs/hydra/advanced#json-web-tokens

            This governs the "strategies.access_token" setting.
        hydra_strategies_scope:
          description: |-
            Defines how scopes are matched. For more details have a look at https://github.com/ory/fosite#scopes

            This governs the "strategies.scope" setting.
        hydra_ttl_access_token:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_ttl_auth_code:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_ttl_id_token:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_ttl_login_consent_request:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_ttl_refresh_token:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        hydra_urls_consent:
          description: |-
            Sets the OAuth2 Consent Endpoint URL of the OAuth2 User Login & Consent flow.

            Defaults to Ory Cloud's Managed UI if left empty.

            This governs the "urls.consent" setting.
          type: string
        hydra_urls_error:
          description: |-
            Sets the OAuth2 Error URL of the OAuth2 User Login & Consent flow.

            Defaults to Ory Cloud's Managed UI if left empty.

            This governs the "urls.error" setting.
          type: string
        hydra_urls_login:
          description: |-
            Sets the OAuth2 Login Endpoint URL of the OAuth2 User Login & Consent flow.

            Defaults to Ory Cloud's Managed UI if left empty.

            This governs the "urls.login" setting.
          type: string
        hydra_urls_logout:
          description: |-
            Sets the logout endpoint.

            Defaults to Ory Cloud's Managed UI if left empty.

            This governs the "urls.logout" setting.
          type: string
        hydra_urls_post_logout_redirect:
          description: |-
            When an OAuth2-related user agent requests to log out, they will be redirected to this url afterwards per default.

            Defaults to Ory Cloud's Managed UI in development and your application in production mode when a custom domain is connected.

            This governs the "urls.post_logout_redirect" setting.
          type: string
        hydra_urls_self_issuer:
          description: |-
            This value will be used as the issuer in access and ID tokens. It must be specified and using HTTPS protocol, unless the development mode is enabled.

            In Ory Cloud it will be very rare that you want to modify this value. If left empty, it will default to the correct value for Ory Cloud.

            This governs the "urls.self.issuer" setting.
          type: string
        hydra_webfinger_jwks_broadcast_keys:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_webfinger_oidc_discovery_auth_url:
          description: |-
            Configures OpenID Connect Discovery and overwrites the OAuth2 Authorization URL.

            This governs the "webfinger.oidc.discovery.auth_url" setting.
          type: string
        hydra_webfinger_oidc_discovery_client_registration_url:
          description: |-
            Configures OpenID Connect Discovery and overwrites the OpenID Connect Dynamic Client Registration Endpoint.

            This governs the "webfinger.oidc.discovery.client_registration_url" setting.
          type: string
        hydra_webfinger_oidc_discovery_jwks_url:
          description: |-
            Configures OpenID Connect Discovery and overwrites the JWKS URL.

            This governs the "webfinger.oidc.discovery.jwks_url" setting.
          type: string
        hydra_webfinger_oidc_discovery_supported_claims:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_webfinger_oidc_discovery_supported_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        hydra_webfinger_oidc_discovery_token_url:
          description: |-
            Configures OpenID Connect Discovery and overwrites the OAuth2 Token URL.

            This governs the "webfinger.oidc.discovery.token_url" setting.
          type: string
        hydra_webfinger_oidc_discovery_userinfo_url:
          description: |-
            Configures OpenID Connect Discovery and overwrites userinfo endpoint to be advertised at the OpenID Connect Discovery endpoint /.well-known/openid-configuration. Defaults to Ory Hydra's userinfo endpoint at /userinfo. Set this value if you want to handle this endpoint yourself.

            This governs the "webfinger.oidc.discovery.userinfo_url" setting.
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        keto_namespaces:
          items:
            $ref: '#/components/schemas/KetoNamespace'
          type: array
        keto_read_max_depth:
          nullable: true
          type: integer
        kratos_cookies_same_site:
          description: |-
            Configures the Ory Kratos Cookie SameSite Attribute

            This governs the "cookies.same_site" setting.
          type: string
        kratos_courier_smtp_connection_uri:
          description: |-
            Configures the Ory Kratos SMTP Connection URI

            This governs the "courier.smtp.connection_uri" setting.
          type: string
        kratos_courier_smtp_from_address:
          description: |-
            Configures the Ory Kratos SMTP From Address

            This governs the "courier.smtp.from_address" setting.
          type: string
        kratos_courier_smtp_from_name:
          description: |-
            Configures the Ory Kratos SMTP From Name

            This governs the "courier.smtp.from_name" setting.
          type: string
        kratos_courier_smtp_headers:
          description: NullJSONRawMessage represents a json.RawMessage that works
            well with JSON, SQL, and Swagger and is NULLable-
          type: object
        kratos_courier_templates_recovery_invalid_email_body_html:
          description: |-
            Configures the Ory Kratos Invalid Recovery Email Body HTML Template

            This governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.
          type: string
        kratos_courier_templates_recovery_invalid_email_body_plaintext:
          description: |-
            Configures the Ory Kratos Invalid Recovery Email Body Plaintext Template

            This governs the "courier.smtp.templates.recovery.invalid.email.body.plaintext" setting.
          type: string
        kratos_courier_templates_recovery_invalid_email_subject:
          description: |-
            Configures the Ory Kratos Invalid Recovery Email Subject Template

            This governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.
          type: string
        kratos_courier_templates_recovery_valid_email_body_html:
          description: |-
            Configures the Ory Kratos Valid Recovery Email Body HTML Template

            This governs the "courier.smtp.templates.recovery.valid.email.body.html" setting.
          type: string
        kratos_courier_templates_recovery_valid_email_body_plaintext:
          description: |-
            Configures the Ory Kratos Valid Recovery Email Body Plaintext Template

            This governs the "courier.smtp.templates.recovery.valid.email.body.plaintext" setting.
          type: string
        kratos_courier_templates_recovery_valid_email_subject:
          description: |-
            Configures the Ory Kratos Valid Recovery Email Subject Template

            This governs the "courier.smtp.templates.recovery.valid.email.subject" setting.
          type: string
        kratos_courier_templates_verification_invalid_email_body_html:
          description: |-
            Configures the Ory Kratos Invalid Verification Email Body HTML Template

            This governs the "courier.smtp.templates.verification.invalid.email.body.html" setting.
          type: string
        kratos_courier_templates_verification_invalid_email_body_plaintext:
          description: |-
            Configures the Ory Kratos Invalid Verification Email Body Plaintext Template

            This governs the "courier.smtp.templates.recovery.invalid.email.body.plaintext" setting.
          type: string
        kratos_courier_templates_verification_invalid_email_subject:
          description: |-
            Configures the Ory Kratos Invalid Verification Email Subject Template

            This governs the "courier.smtp.templates.verification.invalid.email.subject" setting.
          type: string
        kratos_courier_templates_verification_valid_email_body_html:
          description: |-
            Configures the Ory Kratos Valid Verification Email Body HTML Template

            This governs the "courier.smtp.templates.verification.valid.email.body.html" setting.
          type: string
        kratos_courier_templates_verification_valid_email_body_plaintext:
          description: |-
            Configures the Ory Kratos Valid Verification Email Body Plaintext Template

            This governs the "courier.smtp.templates.recovery.valid.email.body.plaintext" setting.
          type: string
        kratos_courier_templates_verification_valid_email_subject:
          description: |-
            Configures the Ory Kratos Valid Verification Email Subject Template

            This governs the "courier.smtp.templates.verification.valid.email.subject" setting.
          type: string
        kratos_identity_schemas:
          items:
            $ref: '#/components/schemas/normalizedProjectRevisionIdentitySchema'
          type: array
        kratos_secrets_cipher:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        kratos_secrets_cookie:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        kratos_secrets_default:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        kratos_selfservice_allowed_return_urls:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        kratos_selfservice_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Default Return URL

            This governs the "selfservice.allowed_return_urls" setting.
          type: string
        kratos_selfservice_flows_error_ui_url:
          description: |-
            Configures the Ory Kratos Error UI URL

            This governs the "selfservice.flows.error.ui_url" setting.
          type: string
        kratos_selfservice_flows_hooks:
          items:
            $ref: '#/components/schemas/normalizedProjectRevisionHook'
          type: array
        kratos_selfservice_flows_login_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Login Default Return URL

            This governs the "selfservice.flows.login.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_login_after_oidc_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Login After OIDC Default Return URL

            This governs the "selfservice.flows.login.after.oidc.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_login_after_password_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Login After Password Default Return URL

            This governs the "selfservice.flows.login.after.password.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_login_after_webauthn_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Login After WebAuthn Default Return URL

            This governs the "selfservice.flows.login.after.webauthn.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_login_lifespan:
          description: |-
            Configures the Ory Kratos Login Lifespan

            This governs the "selfservice.flows.login.lifespan" setting.
          type: string
        kratos_selfservice_flows_login_ui_url:
          description: |-
            Configures the Ory Kratos Login UI URL

            This governs the "selfservice.flows.login.ui_url" setting.
          type: string
        kratos_selfservice_flows_logout_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Logout Default Return URL

            This governs the "selfservice.flows.logout.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_recovery_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Recovery Default Return URL

            This governs the "selfservice.flows.recovery.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_recovery_enabled:
          description: |-
            Configures the Ory Kratos Recovery Enabled Setting

            This governs the "selfservice.flows.recovery.enabled" setting.
          type: boolean
        kratos_selfservice_flows_recovery_lifespan:
          description: |-
            Configures the Ory Kratos Recovery Lifespan

            This governs the "selfservice.flows.recovery.lifespan" setting.
          type: string
        kratos_selfservice_flows_recovery_ui_url:
          description: |-
            Configures the Ory Kratos Recovery UI URL

            This governs the "selfservice.flows.recovery.ui_url" setting.
          type: string
        kratos_selfservice_flows_registration_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Registration Default Return URL

            This governs the "selfservice.flows.registration.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_registration_after_oidc_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Registration After OIDC Default Return URL

            This governs the "selfservice.flows.registration.after.oidc.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_registration_after_password_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Registration After Password Default Return URL

            This governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_registration_after_webauthn_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Registration After Password Default Return URL

            This governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_registration_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_flows_registration_lifespan:
          description: |-
            Configures the Ory Kratos Registration Lifespan

            This governs the "selfservice.flows.registration.lifespan" setting.
          type: string
        kratos_selfservice_flows_registration_ui_url:
          description: |-
            Configures the Ory Kratos Registration UI URL

            This governs the "selfservice.flows.registration.ui_url" setting.
          type: string
        kratos_selfservice_flows_settings_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Settings Default Return URL

            This governs the "selfservice.flows.settings.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_settings_after_password_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Settings Default Return URL After Updating Passwords

            This governs the "selfservice.flows.settings.after.password.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_settings_after_profile_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Settings Default Return URL After Updating Profiles

            This governs the "selfservice.flows.settings.after.profile.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_settings_lifespan:
          description: |-
            Configures the Ory Kratos Settings Lifespan

            This governs the "selfservice.flows.settings.lifespan" setting.
          type: string
        kratos_selfservice_flows_settings_privileged_session_max_age:
          description: |-
            Configures the Ory Kratos Settings Privileged Session Max Age

            This governs the "selfservice.flows.settings.privileged_session_max_age" setting.
          type: string
        kratos_selfservice_flows_settings_required_aal:
          description: |-
            Configures the Ory Kratos Settings Required AAL

            This governs the "selfservice.flows.settings.required_aal" setting.
          type: string
        kratos_selfservice_flows_settings_ui_url:
          description: |-
            Configures the Ory Kratos Settings UI URL

            This governs the "selfservice.flows.settings.ui_url" setting.
          type: string
        kratos_selfservice_flows_verification_after_default_browser_return_url:
          description: |-
            Configures the Ory Kratos Verification Default Return URL

            This governs the "selfservice.flows.verification.after.default_browser_return_url" setting.
          type: string
        kratos_selfservice_flows_verification_enabled:
          description: |-
            Configures the Ory Kratos Verification Enabled Setting

            This governs the "selfservice.flows.verification.enabled" setting.
          type: boolean
        kratos_selfservice_flows_verification_lifespan:
          description: |-
            Configures the Ory Kratos Verification Lifespan

            This governs the "selfservice.flows.verification.lifespan" setting.
          type: string
        kratos_selfservice_flows_verification_ui_url:
          description: |-
            Configures the Ory Kratos Verification UI URL

            This governs the "selfservice.flows.verification.ui_url" setting.
          type: string
        kratos_selfservice_methods_link_config_base_url:
          description: |-
            Configures the Base URL which Recovery, Verification, and Login Links Point to

            It is recommended to leave this value empty. It will be appropriately configured to the best matching domain
            (e.g. when using custom domains) automatically.

            This governs the "selfservice.methods.link.config.base_url" setting.
          type: string
        kratos_selfservice_methods_link_config_lifespan:
          description: |-
            Configures whether Ory Kratos Link Method is enabled

            This governs the "selfservice.methods.link.config.lifespan" setting.
          type: string
        kratos_selfservice_methods_link_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_lookup_secret_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_oidc_config_base_redirect_uri:
          description: |-
            Configures the Ory Kratos Third Party / OpenID Connect base redirect URI

            This governs the "selfservice.methods.oidc.config.base_redirect_uri" setting.
          type: string
        kratos_selfservice_methods_oidc_config_providers:
          items:
            $ref: '#/components/schemas/normalizedProjectRevisionThirdPartyProvider'
          type: array
        kratos_selfservice_methods_oidc_enabled:
          description: |-
            Configures whether Ory Kratos Third Party / OpenID Connect Login is enabled

            This governs the "selfservice.methods.oidc.enabled" setting.
          type: boolean
        kratos_selfservice_methods_password_config_haveibeenpwned_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_password_config_identifier_similarity_check_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_password_config_ignore_network_errors:
          nullable: true
          type: boolean
        kratos_selfservice_methods_password_config_max_breaches:
          description: |-
            Configures Ory Kratos Password Max Breaches Detection

            This governs the "selfservice.methods.password.config.max_breaches" setting.
          format: int64
          type: integer
        kratos_selfservice_methods_password_config_min_password_length:
          description: |-
            Configures the minimum length of passwords.

            This governs the "selfservice.methods.password.config.min_password_length" setting.
          format: int64
          type: integer
        kratos_selfservice_methods_password_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_profile_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_totp_config_issuer:
          description: |-
            Configures Ory Kratos TOTP Issuer

            This governs the "selfservice.methods.totp.config.issuer" setting.
          type: string
        kratos_selfservice_methods_totp_enabled:
          nullable: true
          type: boolean
        kratos_selfservice_methods_webauthn_config_passwordless:
          description: |-
            Configures whether Ory Kratos Webauthn is used for passwordless flows

            This governs the "selfservice.methods.webauthn.config.passwordless" setting.
          type: boolean
        kratos_selfservice_methods_webauthn_config_rp_display_name:
          description: |-
            Configures the Ory Kratos Webauthn RP Display Name

            This governs the "selfservice.methods.webauthn.config.rp.display_name" setting.
          type: string
        kratos_selfservice_methods_webauthn_config_rp_icon:
          description: |-
            Configures the Ory Kratos Webauthn RP Icon

            This governs the "selfservice.methods.webauthn.config.rp.icon" setting.
          type: string
        kratos_selfservice_methods_webauthn_config_rp_id:
          description: |-
            Configures the Ory Kratos Webauthn RP ID

            This governs the "selfservice.methods.webauthn.config.rp.id" setting.
          type: string
        kratos_selfservice_methods_webauthn_config_rp_origin:
          description: |-
            Configures the Ory Kratos Webauthn RP Origin

            This governs the "selfservice.methods.webauthn.config.rp.origin" setting.
          type: string
        kratos_selfservice_methods_webauthn_enabled:
          nullable: true
          type: boolean
        kratos_session_cookie_persistent:
          nullable: true
          type: boolean
        kratos_session_cookie_same_site:
          description: |-
            Configures the Ory Kratos Session Cookie SameSite Attribute

            This governs the "session.cookie.same_site" setting.
          type: string
        kratos_session_lifespan:
          description: |-
            Configures the Ory Kratos Session Lifespan

            This governs the "session.lifespan" setting.
          type: string
        kratos_session_whoami_required_aal:
          description: |-
            Configures the Ory Kratos Session Whoami AAL requirement

            This governs the "session.whoami.required_aal" setting.
          type: string
        name:
          description: The project's name.
          type: string
        production:
          description: |-
            Whether this project is in production mode or not.

            In development mode, a low-security profile is used making it easier to develop against your, for example, local environment.
          type: boolean
        project_id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          description: Last Time Project's Revision was Updated
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    normalizedProjectRevisionHook:
      properties:
        config_key:
          description: The Hooks Config Key
          type: string
        created_at:
          description: The Project's Revision Creation Date
          format: date-time
          readOnly: true
          type: string
        hook:
          description: The Hook Type
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        project_revision_id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          description: Last Time Project's Revision was Updated
          format: date-time
          readOnly: true
          type: string
        web_hook_config_auth_api_key_in:
          description: Whether to send the API Key in the HTTP Header or as a HTTP
            Cookie
          example: header
          type: string
        web_hook_config_auth_api_key_name:
          description: The name of the api key
          example: X-API-Key
          type: string
        web_hook_config_auth_api_key_value:
          description: The value of the api key
          example: eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ
          type: string
        web_hook_config_auth_basic_auth_password:
          description: The password to be sent in the HTTP Basic Auth Header
          type: string
        web_hook_config_auth_basic_auth_user:
          description: The username to be sent in the HTTP Basic Auth Header
          type: string
        web_hook_config_auth_type:
          description: HTTP Auth Method to use for the Web-Hook
          type: string
        web_hook_config_body:
          description: URI pointing to the JsonNet template used for Web-Hook payload
            generation. Only used for those HTTP methods, which support HTTP body
            payloads.
          example: base64://ZnVuY3Rpb24oY3R4KSB7CiAgaWRlbnRpdHlfaWQ6IGlmIGN0eFsiaWRlbnRpdHkiXSAhPSBudWxsIHRoZW4gY3R4LmlkZW50aXR5LmlkLAp9=
          type: string
        web_hook_config_method:
          description: The HTTP method to use (GET, POST, etc) for the Web-Hook
          example: POST
          type: string
        web_hook_config_response_ignore:
          description: Whether to ignore the Web Hook response
          type: boolean
        web_hook_config_url:
          description: The URL the Web-Hook should call
          example: https://www.example.org/web-hook-listener
          type: string
      required:
      - config_key
      - hook
      type: object
    normalizedProjectRevisionIdentitySchema:
      properties:
        created_at:
          description: The Project's Revision Creation Date
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        identity_schema:
          $ref: '#/components/schemas/managedIdentitySchema'
        identity_schema_id:
          format: uuid4
          nullable: true
          type: string
        import_id:
          description: The imported (named) ID of the Identity Schema referenced in
            the Ory Kratos config.
          type: string
        import_url:
          description: |-
            The ImportURL can be used to import an Identity Schema from a bse64 encoded string.
            In the future, this key also support HTTPS and other sources!

            If you import an Ory Kratos configuration, this would be akin to the `identity.schemas.#.url` key.

            The configuration will always return the import URL when you fetch it from the API.
          example: base64://ey...
          type: string
        is_default:
          description: |-
            If true sets the default schema for identities

            Only one schema can ever be the default schema. If you
            try to add two schemas with default to true, the
            request will fail.
          type: boolean
        preset:
          description: Use a preset instead of a custom identity schema.
          type: string
        project_revision_id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          description: Last Time Project's Revision was Updated
          format: date-time
          readOnly: true
          type: string
      type: object
    normalizedProjectRevisionIdentitySchemas:
      items:
        $ref: '#/components/schemas/normalizedProjectRevisionIdentitySchema'
      type: array
    normalizedProjectRevisionThirdPartyProvider:
      properties:
        apple_private_key:
          nullable: true
          type: string
        apple_private_key_id:
          description: |-
            Apple Private Key Identifier

            Sign In with Apple Private Key Identifier needed for generating a JWT token for client secret
          example: UX56C66723
          type: string
        apple_team_id:
          description: |-
            Apple Developer Team ID

            Apple Developer Team ID needed for generating a JWT token for client secret
          example: KP76DQS54M
          type: string
        auth_url:
          description: |-
            AuthURL is the authorize url, typically something like: https://example.org/oauth2/auth
            Should only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when
            `provider` is set to `generic`.
          example: https://www.googleapis.com/oauth2/v2/auth
          type: string
        azure_tenant:
          description: |-
            Tenant is the Azure AD Tenant to use for authentication, and must be set when `provider` is set to `microsoft`.

            Can be either `common`, `organizations`, `consumers` for a multitenant application or a specific tenant like
            `8eaef023-2b34-4da1-9baa-8bc8c9d6a490` or `contoso.onmicrosoft.com`.
          example: contoso.onmicrosoft.com
          type: string
        client_id:
          description: ClientID is the application's Client ID.
          type: string
        client_secret:
          nullable: true
          type: string
        created_at:
          description: The Project's Revision Creation Date
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        issuer_url:
          description: |-
            IssuerURL is the OpenID Connect Server URL. You can leave this empty if `provider` is not set to `generic`.
            If set, neither `auth_url` nor `token_url` are required.
          example: https://accounts.google.com
          type: string
        label:
          description: Label represents an optional label which can be used in the
            UI generation.
          type: string
        mapper_url:
          description: |-
            Mapper specifies the JSONNet code snippet which uses the OpenID Connect Provider's data (e.g. GitHub or Google
            profile information) to hydrate the identity's data.

            It can be either a URL (file://, http(s)://, base64://) or an inline JSONNet code snippet.
          type: string
        project_revision_id:
          $ref: '#/components/schemas/UUID'
        provider:
          description: |-
            Provider is either "generic" for a generic OAuth 2.0 / OpenID Connect Provider or one of:
            generic
            google
            github
            gitlab
            microsoft
            discord
            slack
            facebook
            vk
            yandex
            apple
          example: google
          type: string
        provider_id:
          description: ID is the provider's ID
          type: string
        requested_claims:
          title: JSONRawMessage represents a json.RawMessage that works well with
            JSON, SQL, and Swagger.
          type: object
        scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        token_url:
          description: |-
            TokenURL is the token url, typically something like: https://example.org/oauth2/token

            Should only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when
            `provider` is set to `generic`.
          example: https://www.googleapis.com/oauth2/v4/token
          type: string
        updated_at:
          description: Last Time Project's Revision was Updated
          format: date-time
          readOnly: true
          type: string
      type: object
    normalizedProjects:
      items:
        $ref: '#/components/schemas/normalizedProject'
      type: array
    nullBool:
      nullable: true
      type: boolean
    nullDuration:
      nullable: true
      pattern: ^[0-9]+(ns|us|ms|s|m|h)$
      type: string
    nullInt64:
      nullable: true
      type: integer
    nullJsonRawMessage:
      description: NullJSONRawMessage represents a json.RawMessage that works well
        with JSON, SQL, and Swagger and is NULLable-
      type: object
    nullTime:
      format: date-time
      title: NullTime implements sql.NullTime functionality.
      type: string
    oAuth2AccessRequest:
      properties:
        client_id:
          description: ClientID is the identifier of the OAuth 2.0 client.
          type: string
        grant_types:
          description: GrantTypes is the requests grant types.
          items:
            type: string
          type: array
        granted_audience:
          description: GrantedAudience is the list of audiences granted to the OAuth
            2.0 client.
          items:
            type: string
          type: array
        granted_scopes:
          description: GrantedScopes is the list of scopes granted to the OAuth 2.0
            client.
          items:
            type: string
          type: array
      title: Requester is a token endpoint's request context.
      type: object
    oAuth2ApiError:
      description: An API error caused by Ory's OAuth 2.0 APIs.
      example:
        error_debug: The database adapter was unable to find the element
        status_code: 404
        error_description: Object with ID 12345 does not exist
        error: The requested resource could not be found
      properties:
        error:
          description: Name is the error name.
          example: The requested resource could not be found
          type: string
        error_debug:
          description: Debug contains debug information. This is usually not available
            and has to be enabled.
          example: The database adapter was unable to find the element
          type: string
        error_description:
          description: Description contains further information on the nature of the
            error.
          example: Object with ID 12345 does not exist
          type: string
        status_code:
          description: Code represents the error status code (404, 403, 401, ...).
          example: 404
          format: int64
          type: integer
      title: OAuth2 API Error
      type: object
    oAuth2Client:
      example:
        metadata: '{}'
        token_endpoint_auth_signing_alg: token_endpoint_auth_signing_alg
        client_uri: client_uri
        jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
        jwks: '{}'
        logo_uri: logo_uri
        created_at: 2000-01-23T04:56:07.000+00:00
        registration_client_uri: registration_client_uri
        allowed_cors_origins:
        - allowed_cors_origins
        - allowed_cors_origins
        refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
        registration_access_token: registration_access_token
        client_id: client_id
        token_endpoint_auth_method: token_endpoint_auth_method
        userinfo_signed_response_alg: userinfo_signed_response_alg
        authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
        authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
        client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
        updated_at: 2000-01-23T04:56:07.000+00:00
        scope: scope1 scope-2 scope.3 scope:4
        request_uris:
        - request_uris
        - request_uris
        client_secret: client_secret
        backchannel_logout_session_required: true
        backchannel_logout_uri: backchannel_logout_uri
        client_name: client_name
        policy_uri: policy_uri
        owner: owner
        audience:
        - audience
        - audience
        authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
        post_logout_redirect_uris:
        - post_logout_redirect_uris
        - post_logout_redirect_uris
        grant_types:
        - grant_types
        - grant_types
        subject_type: subject_type
        refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
        redirect_uris:
        - redirect_uris
        - redirect_uris
        sector_identifier_uri: sector_identifier_uri
        frontchannel_logout_session_required: true
        frontchannel_logout_uri: frontchannel_logout_uri
        refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
        implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
        password_grant_access_token_lifespan: password_grant_access_token_lifespan
        client_secret_expires_at: 0
        implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
        jwks_uri: jwks_uri
        password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
        request_object_signing_alg: request_object_signing_alg
        tos_uri: tos_uri
        contacts:
        - contacts
        - contacts
        response_types:
        - response_types
        - response_types
      properties:
        allowed_cors_origins:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        audience:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        authorization_code_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        authorization_code_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        authorization_code_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        backchannel_logout_session_required:
          description: |-
            Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout
            Token to identify the RP session with the OP when the backchannel_logout_uri is used.
            If omitted, the default value is false.
          type: boolean
        backchannel_logout_uri:
          description: RP URL that will cause the RP to log itself out when sent a
            Logout Token by the OP.
          type: string
        client_credentials_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        client_id:
          description: |-
            ID is the id for this client.

            The ID is autogenerated and immutable.
          type: string
        client_name:
          description: |-
            Name is the human-readable string name of the client to be presented to the
            end-user during authorization.
          type: string
        client_secret:
          description: |-
            Secret is the client's secret. The secret will be included in the create request as cleartext, and then
            never again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users
            that they need to write the secret down as it will not be made available again.
          type: string
        client_secret_expires_at:
          description: |-
            SecretExpiresAt is an integer holding the time at which the client
            secret will expire or 0 if it will not expire. The time is
            represented as the number of seconds from 1970-01-01T00:00:00Z as
            measured in UTC until the date/time of expiration.

            This feature is currently not supported and it's value will always
            be set to 0.
          format: int64
          type: integer
        client_uri:
          description: |-
            ClientURI is an URL string of a web page providing information about the client.
            If present, the server SHOULD display this URL to the end-user in
            a clickable fashion.
          type: string
        contacts:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        created_at:
          description: CreatedAt returns the timestamp of the client's creation.
          format: date-time
          type: string
        frontchannel_logout_session_required:
          description: |-
            Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be
            included to identify the RP session with the OP when the frontchannel_logout_uri is used.
            If omitted, the default value is false.
          type: boolean
        frontchannel_logout_uri:
          description: |-
            RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query
            parameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the
            request and to determine which of the potentially multiple sessions is to be logged out; if either is
            included, both MUST be.
          type: string
        grant_types:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        implicit_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        implicit_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        jwks:
          type: object
        jwks_uri:
          description: |-
            URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains
            the signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the
            Client's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing
            and encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced
            JWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both
            signatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used
            to provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST
            match those in the certificate.
          type: string
        jwt_bearer_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        logo_uri:
          description: LogoURI is an URL string that references a logo for the client.
          type: string
        metadata:
          title: JSONRawMessage represents a json.RawMessage that works well with
            JSON, SQL, and Swagger.
          type: object
        owner:
          description: Owner is a string identifying the owner of the OAuth 2.0 Client.
          type: string
        password_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        password_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        policy_uri:
          description: |-
            PolicyURI is a URL string that points to a human-readable privacy policy document
            that describes how the deployment organization collects, uses,
            retains, and discloses personal data.
          type: string
        post_logout_redirect_uris:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        redirect_uris:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        refresh_token_grant_access_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        refresh_token_grant_id_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        refresh_token_grant_refresh_token_lifespan:
          nullable: true
          pattern: ^[0-9]+(ns|us|ms|s|m|h)$
          type: string
        registration_access_token:
          description: RegistrationAccessToken can be used to update, get, or delete
            the OAuth2 Client.
          type: string
        registration_client_uri:
          description: RegistrationClientURI is the URL used to update, get, or delete
            the OAuth2 Client.
          type: string
        request_object_signing_alg:
          description: |-
            JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects
            from this Client MUST be rejected, if not signed with this algorithm.
          type: string
        request_uris:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        response_types:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        scope:
          description: |-
            Scope is a string containing a space-separated list of scope values (as
            described in Section 3.3 of OAuth 2.0 [RFC6749]) that the client
            can use when requesting access tokens.
          example: scope1 scope-2 scope.3 scope:4
          type: string
        sector_identifier_uri:
          description: |-
            URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
            file with a single JSON array of redirect_uri values.
          type: string
        subject_type:
          description: |-
            SubjectType requested for responses to this Client. The subject_types_supported Discovery parameter contains a
            list of the supported subject_type values for this server. Valid types include `pairwise` and `public`.
          type: string
        token_endpoint_auth_method:
          description: |-
            Requested Client Authentication method for the Token Endpoint. The options are client_secret_post,
            client_secret_basic, private_key_jwt, and none.
          type: string
        token_endpoint_auth_signing_alg:
          description: Requested Client Authentication signing algorithm for the Token
            Endpoint.
          type: string
        tos_uri:
          description: |-
            TermsOfServiceURI is a URL string that points to a human-readable terms of service
            document for the client that describes a contractual relationship
            between the end-user and the client that the end-user accepts when
            authorizing the client.
          type: string
        updated_at:
          description: UpdatedAt returns the timestamp of the last update.
          format: date-time
          type: string
        userinfo_signed_response_alg:
          description: |-
            JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
            [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
            as a UTF-8 encoded JSON object using the application/json content-type.
          type: string
      title: Client represents an OAuth 2.0 Client.
      type: object
    oAuth2ConsentRequest:
      example:
        requested_access_token_audience:
        - requested_access_token_audience
        - requested_access_token_audience
        login_challenge: login_challenge
        subject: subject
        amr:
        - amr
        - amr
        oidc_context:
          login_hint: login_hint
          ui_locales:
          - ui_locales
          - ui_locales
          id_token_hint_claims:
            key: '{}'
          acr_values:
          - acr_values
          - acr_values
          display: display
        skip: true
        request_url: request_url
        acr: acr
        context: '{}'
        challenge: challenge
        client:
          metadata: '{}'
          token_endpoint_auth_signing_alg: token_endpoint_auth_signing_alg
          client_uri: client_uri
          jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
          jwks: '{}'
          logo_uri: logo_uri
          created_at: 2000-01-23T04:56:07.000+00:00
          registration_client_uri: registration_client_uri
          allowed_cors_origins:
          - allowed_cors_origins
          - allowed_cors_origins
          refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
          registration_access_token: registration_access_token
          client_id: client_id
          token_endpoint_auth_method: token_endpoint_auth_method
          userinfo_signed_response_alg: userinfo_signed_response_alg
          authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
          authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
          client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
          updated_at: 2000-01-23T04:56:07.000+00:00
          scope: scope1 scope-2 scope.3 scope:4
          request_uris:
          - request_uris
          - request_uris
          client_secret: client_secret
          backchannel_logout_session_required: true
          backchannel_logout_uri: backchannel_logout_uri
          client_name: client_name
          policy_uri: policy_uri
          owner: owner
          audience:
          - audience
          - audience
          authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
          post_logout_redirect_uris:
          - post_logout_redirect_uris
          - post_logout_redirect_uris
          grant_types:
          - grant_types
          - grant_types
          subject_type: subject_type
          refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
          redirect_uris:
          - redirect_uris
          - redirect_uris
          sector_identifier_uri: sector_identifier_uri
          frontchannel_logout_session_required: true
          frontchannel_logout_uri: frontchannel_logout_uri
          refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
          implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
          password_grant_access_token_lifespan: password_grant_access_token_lifespan
          client_secret_expires_at: 0
          implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
          jwks_uri: jwks_uri
          password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
          request_object_signing_alg: request_object_signing_alg
          tos_uri: tos_uri
          contacts:
          - contacts
          - contacts
          response_types:
          - response_types
          - response_types
        login_session_id: login_session_id
        requested_scope:
        - requested_scope
        - requested_scope
      properties:
        acr:
          description: |-
            ACR represents the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it
            to express that, for example, a user authenticated using two factor authentication.
          type: string
        amr:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        challenge:
          description: |-
            ID is the identifier ("authorization challenge") of the consent authorization request. It is used to
            identify the session.
          type: string
        client:
          $ref: '#/components/schemas/oAuth2Client'
        context:
          title: JSONRawMessage represents a json.RawMessage that works well with
            JSON, SQL, and Swagger.
          type: object
        login_challenge:
          description: |-
            LoginChallenge is the login challenge this consent challenge belongs to. It can be used to associate
            a login and consent request in the login & consent app.
          type: string
        login_session_id:
          description: |-
            LoginSessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)
            this ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)
            this will be a new random value. This value is used as the "sid" parameter in the ID Token and in OIDC Front-/Back-
            channel logout. It's value can generally be used to associate consecutive login requests by a certain user.
          type: string
        oidc_context:
          $ref: '#/components/schemas/oAuth2ConsentRequestOpenIDConnectContext'
        request_url:
          description: |-
            RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which
            initiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but
            might come in handy if you want to deal with additional request parameters.
          type: string
        requested_access_token_audience:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        requested_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        skip:
          description: |-
            Skip, if true, implies that the client has requested the same scopes from the same user previously.
            If true, you must not ask the user to grant the requested scopes. You must however either allow or deny the
            consent request using the usual API call.
          type: boolean
        subject:
          description: |-
            Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope
            requested by the OAuth 2.0 client.
          type: string
      required:
      - challenge
      title: Contains information on an ongoing consent request.
      type: object
    oAuth2ConsentRequestOpenIDConnectContext:
      example:
        login_hint: login_hint
        ui_locales:
        - ui_locales
        - ui_locales
        id_token_hint_claims:
          key: '{}'
        acr_values:
        - acr_values
        - acr_values
        display: display
      properties:
        acr_values:
          description: |-
            ACRValues is the Authentication AuthorizationContext Class Reference requested in the OAuth 2.0 Authorization request.
            It is a parameter defined by OpenID Connect and expresses which level of authentication (e.g. 2FA) is required.

            OpenID Connect defines it as follows:
            > Requested Authentication AuthorizationContext Class Reference values. Space-separated string that specifies the acr values
            that the Authorization Server is being requested to use for processing this Authentication Request, with the
            values appearing in order of preference. The Authentication AuthorizationContext Class satisfied by the authentication
            performed is returned as the acr Claim Value, as specified in Section 2. The acr Claim is requested as a
            Voluntary Claim by this parameter.
          items:
            type: string
          type: array
        display:
          description: |-
            Display is a string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User.
            The defined values are:
            page: The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.
            popup: The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.
            touch: The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.
            wap: The Authorization Server SHOULD display the authentication and consent UI consistent with a "feature phone" type display.

            The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.
          type: string
        id_token_hint_claims:
          additionalProperties: true
          description: |-
            IDTokenHintClaims are the claims of the ID Token previously issued by the Authorization Server being passed as a hint about the
            End-User's current or past authenticated session with the Client.
          type: object
        login_hint:
          description: |-
            LoginHint hints about the login identifier the End-User might use to log in (if necessary).
            This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier)
            and then wants to pass that value as a hint to the discovered authorization service. This value MAY also be a
            phone number in the format specified for the phone_number Claim. The use of this parameter is optional.
          type: string
        ui_locales:
          description: |-
            UILocales is the End-User'id preferred languages and scripts for the user interface, represented as a
            space-separated list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value
            "fr-CA fr en" represents a preference for French as spoken in Canada, then French (without a region designation),
            followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested
            locales are not supported by the OpenID Provider.
          items:
            type: string
          type: array
      title: Contains optional information about the OpenID Connect request.
      type: object
    oAuth2ConsentSession:
      properties:
        allowed_top_level_claims:
          items:
            type: string
          type: array
        client_id:
          type: string
        consent_challenge:
          type: string
        exclude_not_before_claim:
          type: boolean
        expires_at:
          $ref: '#/components/schemas/oAuth2ConsentSession_expires_at'
        extra:
          additionalProperties: true
          type: object
        headers:
          $ref: '#/components/schemas/Headers'
        id_token_claims:
          $ref: '#/components/schemas/IDTokenClaims'
        kid:
          type: string
        subject:
          type: string
        username:
          type: string
      type: object
    oAuth2LoginRequest:
      example:
        requested_access_token_audience:
        - requested_access_token_audience
        - requested_access_token_audience
        subject: subject
        oidc_context:
          login_hint: login_hint
          ui_locales:
          - ui_locales
          - ui_locales
          id_token_hint_claims:
            key: '{}'
          acr_values:
          - acr_values
          - acr_values
          display: display
        challenge: challenge
        client:
          metadata: '{}'
          token_endpoint_auth_signing_alg: token_endpoint_auth_signing_alg
          client_uri: client_uri
          jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
          jwks: '{}'
          logo_uri: logo_uri
          created_at: 2000-01-23T04:56:07.000+00:00
          registration_client_uri: registration_client_uri
          allowed_cors_origins:
          - allowed_cors_origins
          - allowed_cors_origins
          refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
          registration_access_token: registration_access_token
          client_id: client_id
          token_endpoint_auth_method: token_endpoint_auth_method
          userinfo_signed_response_alg: userinfo_signed_response_alg
          authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
          authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
          client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
          updated_at: 2000-01-23T04:56:07.000+00:00
          scope: scope1 scope-2 scope.3 scope:4
          request_uris:
          - request_uris
          - request_uris
          client_secret: client_secret
          backchannel_logout_session_required: true
          backchannel_logout_uri: backchannel_logout_uri
          client_name: client_name
          policy_uri: policy_uri
          owner: owner
          audience:
          - audience
          - audience
          authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
          post_logout_redirect_uris:
          - post_logout_redirect_uris
          - post_logout_redirect_uris
          grant_types:
          - grant_types
          - grant_types
          subject_type: subject_type
          refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
          redirect_uris:
          - redirect_uris
          - redirect_uris
          sector_identifier_uri: sector_identifier_uri
          frontchannel_logout_session_required: true
          frontchannel_logout_uri: frontchannel_logout_uri
          refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
          implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
          password_grant_access_token_lifespan: password_grant_access_token_lifespan
          client_secret_expires_at: 0
          implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
          jwks_uri: jwks_uri
          password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
          request_object_signing_alg: request_object_signing_alg
          tos_uri: tos_uri
          contacts:
          - contacts
          - contacts
          response_types:
          - response_types
          - response_types
        session_id: session_id
        skip: true
        request_url: request_url
        requested_scope:
        - requested_scope
        - requested_scope
      properties:
        challenge:
          description: |-
            ID is the identifier ("login challenge") of the login request. It is used to
            identify the session.
          type: string
        client:
          $ref: '#/components/schemas/oAuth2Client'
        oidc_context:
          $ref: '#/components/schemas/oAuth2ConsentRequestOpenIDConnectContext'
        request_url:
          description: |-
            RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which
            initiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but
            might come in handy if you want to deal with additional request parameters.
          type: string
        requested_access_token_audience:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        requested_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        session_id:
          description: |-
            SessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)
            this ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)
            this will be a new random value. This value is used as the "sid" parameter in the ID Token and in OIDC Front-/Back-
            channel logout. It's value can generally be used to associate consecutive login requests by a certain user.
          type: string
        skip:
          description: |-
            Skip, if true, implies that the client has requested the same scopes from the same user previously.
            If true, you can skip asking the user to grant the requested scopes, and simply forward the user to the redirect URL.

            This feature allows you to update / set session information.
          type: boolean
        subject:
          description: |-
            Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope
            requested by the OAuth 2.0 client. If this value is set and `skip` is true, you MUST include this subject type
            when accepting the login request, or the request will fail.
          type: string
      required:
      - challenge
      - client
      - request_url
      - requested_access_token_audience
      - requested_scope
      - skip
      - subject
      title: Contains information on an ongoing login request.
      type: object
    oAuth2LogoutRequest:
      example:
        subject: subject
        challenge: challenge
        client:
          metadata: '{}'
          token_endpoint_auth_signing_alg: token_endpoint_auth_signing_alg
          client_uri: client_uri
          jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
          jwks: '{}'
          logo_uri: logo_uri
          created_at: 2000-01-23T04:56:07.000+00:00
          registration_client_uri: registration_client_uri
          allowed_cors_origins:
          - allowed_cors_origins
          - allowed_cors_origins
          refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
          registration_access_token: registration_access_token
          client_id: client_id
          token_endpoint_auth_method: token_endpoint_auth_method
          userinfo_signed_response_alg: userinfo_signed_response_alg
          authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
          authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
          client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
          updated_at: 2000-01-23T04:56:07.000+00:00
          scope: scope1 scope-2 scope.3 scope:4
          request_uris:
          - request_uris
          - request_uris
          client_secret: client_secret
          backchannel_logout_session_required: true
          backchannel_logout_uri: backchannel_logout_uri
          client_name: client_name
          policy_uri: policy_uri
          owner: owner
          audience:
          - audience
          - audience
          authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
          post_logout_redirect_uris:
          - post_logout_redirect_uris
          - post_logout_redirect_uris
          grant_types:
          - grant_types
          - grant_types
          subject_type: subject_type
          refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
          redirect_uris:
          - redirect_uris
          - redirect_uris
          sector_identifier_uri: sector_identifier_uri
          frontchannel_logout_session_required: true
          frontchannel_logout_uri: frontchannel_logout_uri
          refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
          implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
          password_grant_access_token_lifespan: password_grant_access_token_lifespan
          client_secret_expires_at: 0
          implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
          jwks_uri: jwks_uri
          password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
          request_object_signing_alg: request_object_signing_alg
          tos_uri: tos_uri
          contacts:
          - contacts
          - contacts
          response_types:
          - response_types
          - response_types
        rp_initiated: true
        request_url: request_url
        sid: sid
      properties:
        challenge:
          description: |-
            Challenge is the identifier ("logout challenge") of the logout authentication request. It is used to
            identify the session.
          type: string
        client:
          $ref: '#/components/schemas/oAuth2Client'
        request_url:
          description: RequestURL is the original Logout URL requested.
          type: string
        rp_initiated:
          description: RPInitiated is set to true if the request was initiated by
            a Relying Party (RP), also known as an OAuth 2.0 Client.
          type: boolean
        sid:
          description: SessionID is the login session ID that was requested to log
            out.
          type: string
        subject:
          description: Subject is the user for whom the logout was request.
          type: string
      title: Contains information about an ongoing logout request.
      type: object
    oAuth2TokenResponse:
      description: OAuth2 Token Response
      example:
        access_token: access_token
        refresh_token: refresh_token
        scope: 1
        id_token: 6
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: The access token issued by the authorization server.
          type: string
        expires_in:
          description: |-
            The lifetime in seconds of the access token.  For
            example, the value "3600" denotes that the access token will
            expire in one hour from the time the response was generated.
          format: int64
          type: integer
        id_token:
          description: To retrieve a refresh token request the id_token scope.
          format: int64
          type: integer
        refresh_token:
          description: |-
            The refresh token, which can be used to obtain new
            access tokens. To retrieve it add the scope "offline" to your access token request.
          type: string
        scope:
          description: The scope of the access token
          format: int64
          type: integer
        token_type:
          description: The type of the token issued
          type: string
      type: object
    oidcConfiguration:
      description: |-
        It includes links to several endpoints (for example `/oauth2/token`) and exposes information on supported signature algorithms
        among others.
      example:
        request_parameter_supported: true
        claims_parameter_supported: true
        backchannel_logout_supported: true
        scopes_supported:
        - scopes_supported
        - scopes_supported
        issuer: https://playground.ory.sh/ory-hydra/public/
        userinfo_signed_response_alg:
        - userinfo_signed_response_alg
        - userinfo_signed_response_alg
        authorization_endpoint: https://playground.ory.sh/ory-hydra/public/oauth2/auth
        claims_supported:
        - claims_supported
        - claims_supported
        userinfo_signing_alg_values_supported:
        - userinfo_signing_alg_values_supported
        - userinfo_signing_alg_values_supported
        token_endpoint_auth_methods_supported:
        - token_endpoint_auth_methods_supported
        - token_endpoint_auth_methods_supported
        backchannel_logout_session_supported: true
        response_modes_supported:
        - response_modes_supported
        - response_modes_supported
        id_token_signed_response_alg:
        - id_token_signed_response_alg
        - id_token_signed_response_alg
        token_endpoint: https://playground.ory.sh/ory-hydra/public/oauth2/token
        response_types_supported:
        - response_types_supported
        - response_types_supported
        request_uri_parameter_supported: true
        grant_types_supported:
        - grant_types_supported
        - grant_types_supported
        end_session_endpoint: end_session_endpoint
        revocation_endpoint: revocation_endpoint
        userinfo_endpoint: userinfo_endpoint
        frontchannel_logout_supported: true
        require_request_uri_registration: true
        code_challenge_methods_supported:
        - code_challenge_methods_supported
        - code_challenge_methods_supported
        frontchannel_logout_session_supported: true
        jwks_uri: https://playground.ory.sh/ory-hydra/public/.well-known/jwks.json
        subject_types_supported:
        - subject_types_supported
        - subject_types_supported
        id_token_signing_alg_values_supported:
        - id_token_signing_alg_values_supported
        - id_token_signing_alg_values_supported
        registration_endpoint: https://playground.ory.sh/ory-hydra/admin/client
        request_object_signing_alg_values_supported:
        - request_object_signing_alg_values_supported
        - request_object_signing_alg_values_supported
      properties:
        authorization_endpoint:
          description: URL of the OP's OAuth 2.0 Authorization Endpoint.
          example: https://playground.ory.sh/ory-hydra/public/oauth2/auth
          type: string
        backchannel_logout_session_supported:
          description: |-
            Boolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP
            session with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP
          type: boolean
        backchannel_logout_supported:
          description: Boolean value specifying whether the OP supports back-channel
            logout, with true indicating support.
          type: boolean
        claims_parameter_supported:
          description: Boolean value specifying whether the OP supports use of the
            claims parameter, with true indicating support.
          type: boolean
        claims_supported:
          description: |-
            JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply
            values for. Note that for privacy or other reasons, this might not be an exhaustive list.
          items:
            type: string
          type: array
        code_challenge_methods_supported:
          description: |-
            JSON array containing a list of Proof Key for Code Exchange (PKCE) [RFC7636] code challenge methods supported
            by this authorization server.
          items:
            type: string
          type: array
        end_session_endpoint:
          description: URL at the OP to which an RP can perform a redirect to request
            that the End-User be logged out at the OP.
          type: string
        frontchannel_logout_session_supported:
          description: |-
            Boolean value specifying whether the OP can pass iss (issuer) and sid (session ID) query parameters to identify
            the RP session with the OP when the frontchannel_logout_uri is used. If supported, the sid Claim is also
            included in ID Tokens issued by the OP.
          type: boolean
        frontchannel_logout_supported:
          description: Boolean value specifying whether the OP supports HTTP-based
            logout, with true indicating support.
          type: boolean
        grant_types_supported:
          description: JSON array containing a list of the OAuth 2.0 Grant Type values
            that this OP supports.
          items:
            type: string
          type: array
        id_token_signed_response_alg:
          description: Algorithm used to sign OpenID Connect ID Tokens.
          items:
            type: string
          type: array
        id_token_signing_alg_values_supported:
          description: |-
            JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token
            to encode the Claims in a JWT.
          items:
            type: string
          type: array
        issuer:
          description: |-
            URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier.
            If IssuerURL discovery is supported , this value MUST be identical to the issuer value returned
            by WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.
          example: https://playground.ory.sh/ory-hydra/public/
          type: string
        jwks_uri:
          description: |-
            URL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate
            signatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs
            to encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use)
            parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage.
            Although some algorithms allow the same key to be used for both signatures and encryption, doing so is
            NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of
            keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.
          example: https://playground.ory.sh/ory-hydra/public/.well-known/jwks.json
          type: string
        registration_endpoint:
          description: URL of the OP's Dynamic Client Registration Endpoint.
          example: https://playground.ory.sh/ory-hydra/admin/client
          type: string
        request_object_signing_alg_values_supported:
          description: |-
            JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects,
            which are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core]. These algorithms are used both when
            the Request Object is passed by value (using the request parameter) and when it is passed by reference
            (using the request_uri parameter).
          items:
            type: string
          type: array
        request_parameter_supported:
          description: Boolean value specifying whether the OP supports use of the
            request parameter, with true indicating support.
          type: boolean
        request_uri_parameter_supported:
          description: Boolean value specifying whether the OP supports use of the
            request_uri parameter, with true indicating support.
          type: boolean
        require_request_uri_registration:
          description: |-
            Boolean value specifying whether the OP requires any request_uri values used to be pre-registered
            using the request_uris registration parameter.
          type: boolean
        response_modes_supported:
          description: JSON array containing a list of the OAuth 2.0 response_mode
            values that this OP supports.
          items:
            type: string
          type: array
        response_types_supported:
          description: |-
            JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID
            Providers MUST support the code, id_token, and the token id_token Response Type values.
          items:
            type: string
          type: array
        revocation_endpoint:
          description: URL of the authorization server's OAuth 2.0 revocation endpoint.
          type: string
        scopes_supported:
          description: |-
            SON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST
            support the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used
          items:
            type: string
          type: array
        subject_types_supported:
          description: |-
            JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include
            pairwise and public.
          items:
            type: string
          type: array
        token_endpoint:
          description: URL of the OP's OAuth 2.0 Token Endpoint
          example: https://playground.ory.sh/ory-hydra/public/oauth2/token
          type: string
        token_endpoint_auth_methods_supported:
          description: |-
            JSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are
            client_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0
          items:
            type: string
          type: array
        userinfo_endpoint:
          description: URL of the OP's UserInfo Endpoint.
          type: string
        userinfo_signed_response_alg:
          description: Algorithm used to sign OpenID Connect Userinfo Responses.
          items:
            type: string
          type: array
        userinfo_signing_alg_values_supported:
          description: JSON array containing a list of the JWS [JWS] signing algorithms
            (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims
            in a JWT [JWT].
          items:
            type: string
          type: array
      required:
      - authorization_endpoint
      - id_token_signed_response_alg
      - id_token_signing_alg_values_supported
      - issuer
      - jwks_uri
      - response_types_supported
      - subject_types_supported
      - token_endpoint
      - userinfo_signed_response_alg
      title: OpenID Connect Discovery ;etadata
      type: object
    oidcUserInfo:
      description: The userinfo response
      example:
        sub: sub
        website: website
        zoneinfo: zoneinfo
        birthdate: birthdate
        email_verified: true
        gender: gender
        profile: profile
        phone_number_verified: true
        preferred_username: preferred_username
        given_name: given_name
        locale: locale
        middle_name: middle_name
        picture: picture
        updated_at: 0
        name: name
        nickname: nickname
        phone_number: phone_number
        family_name: family_name
        email: email
      properties:
        birthdate:
          description: End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004]
            YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted.
            To represent only the year, YYYY format is allowed. Note that depending
            on the underlying platform's date related function, providing just year
            can result in varying month and day, so the implementers need to take
            this factor into account to correctly process the dates.
          type: string
        email:
          description: End-User's preferred e-mail address. Its value MUST conform
            to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon
            this value being unique, as discussed in Section 5.7.
          type: string
        email_verified:
          description: True if the End-User's e-mail address has been verified; otherwise
            false. When this Claim Value is true, this means that the OP took affirmative
            steps to ensure that this e-mail address was controlled by the End-User
            at the time the verification was performed. The means by which an e-mail
            address is verified is context-specific, and dependent upon the trust
            framework or contractual agreements within which the parties are operating.
          type: boolean
        family_name:
          description: Surname(s) or last name(s) of the End-User. Note that in some
            cultures, people can have multiple family names or no family name; all
            can be present, with the names being separated by space characters.
          type: string
        gender:
          description: End-User's gender. Values defined by this specification are
            female and male. Other values MAY be used when neither of the defined
            values are applicable.
          type: string
        given_name:
          description: Given name(s) or first name(s) of the End-User. Note that in
            some cultures, people can have multiple given names; all can be present,
            with the names being separated by space characters.
          type: string
        locale:
          description: End-User's locale, represented as a BCP47 [RFC5646] language
            tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in
            lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase,
            separated by a dash. For example, en-US or fr-CA. As a compatibility note,
            some implementations have used an underscore as the separator rather than
            a dash, for example, en_US; Relying Parties MAY choose to accept this
            locale syntax as well.
          type: string
        middle_name:
          description: Middle name(s) of the End-User. Note that in some cultures,
            people can have multiple middle names; all can be present, with the names
            being separated by space characters. Also note that in some cultures,
            middle names are not used.
          type: string
        name:
          description: End-User's full name in displayable form including all name
            parts, possibly including titles and suffixes, ordered according to the
            End-User's locale and preferences.
          type: string
        nickname:
          description: Casual name of the End-User that may or may not be the same
            as the given_name. For instance, a nickname value of Mike might be returned
            alongside a given_name value of Michael.
          type: string
        phone_number:
          description: End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED
            as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2)
            687 2400. If the phone number contains an extension, it is RECOMMENDED
            that the extension be represented using the RFC 3966 [RFC3966] extension
            syntax, for example, +1 (604) 555-1234;ext=5678.
          type: string
        phone_number_verified:
          description: True if the End-User's phone number has been verified; otherwise
            false. When this Claim Value is true, this means that the OP took affirmative
            steps to ensure that this phone number was controlled by the End-User
            at the time the verification was performed. The means by which a phone
            number is verified is context-specific, and dependent upon the trust framework
            or contractual agreements within which the parties are operating. When
            true, the phone_number Claim MUST be in E.164 format and any extensions
            MUST be represented in RFC 3966 format.
          type: boolean
        picture:
          description: URL of the End-User's profile picture. This URL MUST refer
            to an image file (for example, a PNG, JPEG, or GIF image file), rather
            than to a Web page containing an image. Note that this URL SHOULD specifically
            reference a profile photo of the End-User suitable for displaying when
            describing the End-User, rather than an arbitrary photo taken by the End-User.
          type: string
        preferred_username:
          description: Non-unique shorthand name by which the End-User wishes to be
            referred to at the RP, such as janedoe or j.doe. This value MAY be any
            valid JSON string including special characters such as @, /, or whitespace.
          type: string
        profile:
          description: URL of the End-User's profile page. The contents of this Web
            page SHOULD be about the End-User.
          type: string
        sub:
          description: Subject - Identifier for the End-User at the IssuerURL.
          type: string
        updated_at:
          description: Time the End-User's information was last updated. Its value
            is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z
            as measured in UTC until the date/time.
          format: int64
          type: integer
        website:
          description: URL of the End-User's Web page or blog. This Web page SHOULD
            contain information published by the End-User or an organization that
            the End-User is affiliated with.
          type: string
        zoneinfo:
          description: String from zoneinfo [zoneinfo] time zone database representing
            the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.
          type: string
      type: object
    pagination:
      properties:
        page:
          default: 1
          description: |-
            Pagination Page

            This value is currently an integer, but it is not sequential. The value is not the page number, but a
            reference. The next page can be any number and some numbers might return an empty list.

            For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
          format: int64
          minimum: 1
          type: integer
        page_size:
          default: 250
          description: |-
            Items per page

            This is the number of items per page to return.
            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        page_token:
          default: "1"
          description: |-
            Next Page Token

            The next page token.
            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          minimum: 1
          type: string
        per_page:
          default: 250
          description: |-
            Items per Page

            This is the number of items per page.
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
      type: object
    paginationHeaders:
      properties:
        link:
          description: |-
            The link header contains pagination links.

            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).

            in: header
          type: string
        x-total-count:
          description: |-
            The total number of clients.

            in: header
          type: string
      type: object
    patchDelta:
      properties:
        action:
          enum:
          - insert
          - delete
          type: string
          x-go-enum-desc: |-
            insert ActionInsert
            delete ActionDelete
        relation_tuple:
          $ref: '#/components/schemas/relationTuple'
      type: object
    previousOAuth2ConsentSession:
      description: |-
        The response used to return used consent requests
        same as HandledLoginRequest, just with consent_request exposed as json
      example:
        remember: true
        consent_request:
          requested_access_token_audience:
          - requested_access_token_audience
          - requested_access_token_audience
          login_challenge: login_challenge
          subject: subject
          amr:
          - amr
          - amr
          oidc_context:
            login_hint: login_hint
            ui_locales:
            - ui_locales
            - ui_locales
            id_token_hint_claims:
              key: '{}'
            acr_values:
            - acr_values
            - acr_values
            display: display
          skip: true
          request_url: request_url
          acr: acr
          context: '{}'
          challenge: challenge
          client:
            metadata: '{}'
            token_endpoint_auth_signing_alg: token_endpoint_auth_signing_alg
            client_uri: client_uri
            jwt_bearer_grant_access_token_lifespan: jwt_bearer_grant_access_token_lifespan
            jwks: '{}'
            logo_uri: logo_uri
            created_at: 2000-01-23T04:56:07.000+00:00
            registration_client_uri: registration_client_uri
            allowed_cors_origins:
            - allowed_cors_origins
            - allowed_cors_origins
            refresh_token_grant_access_token_lifespan: refresh_token_grant_access_token_lifespan
            registration_access_token: registration_access_token
            client_id: client_id
            token_endpoint_auth_method: token_endpoint_auth_method
            userinfo_signed_response_alg: userinfo_signed_response_alg
            authorization_code_grant_id_token_lifespan: authorization_code_grant_id_token_lifespan
            authorization_code_grant_refresh_token_lifespan: authorization_code_grant_refresh_token_lifespan
            client_credentials_grant_access_token_lifespan: client_credentials_grant_access_token_lifespan
            updated_at: 2000-01-23T04:56:07.000+00:00
            scope: scope1 scope-2 scope.3 scope:4
            request_uris:
            - request_uris
            - request_uris
            client_secret: client_secret
            backchannel_logout_session_required: true
            backchannel_logout_uri: backchannel_logout_uri
            client_name: client_name
            policy_uri: policy_uri
            owner: owner
            audience:
            - audience
            - audience
            authorization_code_grant_access_token_lifespan: authorization_code_grant_access_token_lifespan
            post_logout_redirect_uris:
            - post_logout_redirect_uris
            - post_logout_redirect_uris
            grant_types:
            - grant_types
            - grant_types
            subject_type: subject_type
            refresh_token_grant_refresh_token_lifespan: refresh_token_grant_refresh_token_lifespan
            redirect_uris:
            - redirect_uris
            - redirect_uris
            sector_identifier_uri: sector_identifier_uri
            frontchannel_logout_session_required: true
            frontchannel_logout_uri: frontchannel_logout_uri
            refresh_token_grant_id_token_lifespan: refresh_token_grant_id_token_lifespan
            implicit_grant_id_token_lifespan: implicit_grant_id_token_lifespan
            password_grant_access_token_lifespan: password_grant_access_token_lifespan
            client_secret_expires_at: 0
            implicit_grant_access_token_lifespan: implicit_grant_access_token_lifespan
            jwks_uri: jwks_uri
            password_grant_refresh_token_lifespan: password_grant_refresh_token_lifespan
            request_object_signing_alg: request_object_signing_alg
            tos_uri: tos_uri
            contacts:
            - contacts
            - contacts
            response_types:
            - response_types
            - response_types
          login_session_id: login_session_id
          requested_scope:
          - requested_scope
          - requested_scope
        session:
          access_token: ""
          id_token: ""
        grant_access_token_audience:
        - grant_access_token_audience
        - grant_access_token_audience
        handled_at: 2000-01-23T04:56:07.000+00:00
        grant_scope:
        - grant_scope
        - grant_scope
        remember_for: 0
      properties:
        consent_request:
          $ref: '#/components/schemas/oAuth2ConsentRequest'
        grant_access_token_audience:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        grant_scope:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        handled_at:
          format: date-time
          title: NullTime implements sql.NullTime functionality.
          type: string
        remember:
          description: |-
            Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same
            client asks the same user for the same, or a subset of, scope.
          type: boolean
        remember_for:
          description: |-
            RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the
            authorization will be remembered indefinitely.
          format: int64
          type: integer
        session:
          $ref: '#/components/schemas/acceptOAuth2ConsentRequestSession'
      type: object
    previousOAuth2ConsentSessions:
      items:
        $ref: '#/components/schemas/previousOAuth2ConsentSession'
      type: array
    project:
      example:
        name: name
        services:
          identity:
            config: '{}'
          permission:
            config: '{}'
          oauth2:
            config: '{}'
        state: running
        slug: slug
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: The name of the project.
          type: string
        revision_id:
          $ref: '#/components/schemas/UUID'
        services:
          $ref: '#/components/schemas/projectServices'
        slug:
          description: The project's slug
          readOnly: true
          type: string
        state:
          description: |-
            The state of the project.
            running Running
            halted Halted
          enum:
          - running
          - halted
          readOnly: true
          type: string
          x-go-enum-desc: |-
            running Running
            halted Halted
      required:
      - id
      - name
      - revision_id
      - services
      - slug
      - state
      type: object
    projectHost:
      properties:
        host:
          description: The project's host.
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        project_id:
          $ref: '#/components/schemas/UUID'
      required:
      - host
      - id
      - project_id
      type: object
    projectInvite:
      properties:
        created_at:
          description: The Project's Revision Creation Date
          format: date-time
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        invitee_email:
          description: The invitee's email
          type: string
        invitee_id:
          format: uuid4
          nullable: true
          type: string
        owner_email:
          description: |-
            The invite owner's email
            Usually the project's owner email
          type: string
        owner_id:
          $ref: '#/components/schemas/UUID'
        project_id:
          $ref: '#/components/schemas/UUID'
        status:
          description: |-
            The invite's status
            Keeps track of the invites status such as pending, accepted, declined, expired
          type: string
        updated_at:
          description: Last Time Project's Revision was Updated
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - id
      - invitee_email
      - owner_email
      - owner_id
      - project_id
      - status
      - updated_at
      type: object
    projectInvites:
      items:
        $ref: '#/components/schemas/projectInvite'
      type: array
    projectMember:
      $ref: '#/components/schemas/cloudAccount'
    projectMembers:
      items:
        $ref: '#/components/schemas/projectMember'
      type: array
    projectMetadata:
      example:
        subscription_id: subscription_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        hosts:
        - hosts
        - hosts
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        state: running
        slug: slug
      properties:
        created_at:
          description: The Project's Creation Date
          format: date-time
          type: string
        hosts:
          items:
            type: string
          title: StringSliceJSONFormat represents []string{} which is encoded to/from
            JSON for SQL storage.
          type: array
        id:
          $ref: '#/components/schemas/UUID'
        name:
          description: The project's name if set
          type: string
        slug:
          description: The project's slug
          readOnly: true
          type: string
        state:
          description: |-
            The state of the project.
            running Running
            halted Halted
          enum:
          - running
          - halted
          type: string
          x-go-enum-desc: |-
            running Running
            halted Halted
        subscription_id:
          format: uuid4
          nullable: true
          type: string
        updated_at:
          description: Last Time Project was Updated
          format: date-time
          type: string
      required:
      - created_at
      - hosts
      - id
      - name
      - state
      - updated_at
      type: object
    projectMetadataList:
      items:
        $ref: '#/components/schemas/projectMetadata'
      type: array
    projectRevisionHooks:
      items:
        $ref: '#/components/schemas/normalizedProjectRevisionHook'
      type: array
    projectRevisionIdentitySchemas:
      items:
        $ref: '#/components/schemas/normalizedProjectRevisionIdentitySchema'
      type: array
    projectRevisionThirdPartyLoginProviders:
      items:
        $ref: '#/components/schemas/normalizedProjectRevisionThirdPartyProvider'
      type: array
    projectRevisions:
      items:
        $ref: '#/components/schemas/normalizedProjectRevision'
      type: array
    projectServiceIdentity:
      example:
        config: '{}'
      properties:
        config:
          type: object
      required:
      - config
      type: object
    projectServiceOAuth2:
      example:
        config: '{}'
      properties:
        config:
          type: object
      required:
      - config
      type: object
    projectServicePermission:
      example:
        config: '{}'
      properties:
        config:
          type: object
      required:
      - config
      type: object
    projectServices:
      example:
        identity:
          config: '{}'
        permission:
          config: '{}'
        oauth2:
          config: '{}'
      properties:
        identity:
          $ref: '#/components/schemas/projectServiceIdentity'
        oauth2:
          $ref: '#/components/schemas/projectServiceOAuth2'
        permission:
          $ref: '#/components/schemas/projectServicePermission'
      type: object
    projects:
      items:
        $ref: '#/components/schemas/project'
      type: array
    provisionMockSubscriptionPayload:
      properties:
        identity_id:
          $ref: '#/components/schemas/UUID'
        plan_or_price:
          type: string
      required:
      - identity_id
      - plan_or_price
      type: object
    refreshTokenHookRequest:
      properties:
        client_id:
          description: ClientID is the identifier of the OAuth 2.0 client.
          type: string
        granted_audience:
          description: GrantedAudience is the list of audiences granted to the OAuth
            2.0 client.
          items:
            type: string
          type: array
        granted_scopes:
          description: GrantedScopes is the list of scopes granted to the OAuth 2.0
            client.
          items:
            type: string
          type: array
        requester:
          $ref: '#/components/schemas/oAuth2AccessRequest'
        session:
          $ref: '#/components/schemas/oAuth2ConsentSession'
        subject:
          description: Subject is the identifier of the authenticated end-user.
          type: string
      title: RefreshTokenHookRequest is the request body sent to the refresh token
        hook.
      type: object
    refreshTokenHookResponse:
      properties:
        session:
          $ref: '#/components/schemas/acceptOAuth2ConsentRequestSession'
      title: RefreshTokenHookResponse is the response body received from the refresh
        token hook.
      type: object
    rejectOAuth2Request:
      properties:
        error:
          description: |-
            The error should follow the OAuth2 error format (e.g. `invalid_request`, `login_required`).

            Defaults to `request_denied`.
          type: string
        error_debug:
          description: |-
            Debug contains information to help resolve the problem as a developer. Usually not exposed
            to the public but only in the server logs.
          type: string
        error_description:
          description: Description of the error in a human readable format.
          type: string
        error_hint:
          description: Hint to help resolve the error.
          type: string
        status_code:
          description: |-
            Represents the HTTP status code of the error (e.g. 401 or 403)

            Defaults to 400
          format: int64
          type: integer
      title: The request payload used to accept a login or consent request.
      type: object
    relationQuery:
      example:
        subject_id: subject_id
        namespace: namespace
        object: object
        relation: relation
        subject_set:
          namespace: namespace
          object: object
          relation: relation
      properties:
        namespace:
          description: Namespace to query
          type: string
        object:
          description: Object to query
          type: string
        relation:
          description: Relation to query
          type: string
        subject_id:
          description: |-
            SubjectID to query

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: '#/components/schemas/subjectSet'
      type: object
    relationTuple:
      example:
        subject_id: subject_id
        namespace: namespace
        object: object
        relation: relation
        subject_set:
          namespace: namespace
          object: object
          relation: relation
      properties:
        namespace:
          description: Namespace of the Relation Tuple
          type: string
        object:
          description: Object of the Relation Tuple
          type: string
        relation:
          description: Relation of the Relation Tuple
          type: string
        subject_id:
          description: |-
            SubjectID of the Relation Tuple

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: '#/components/schemas/subjectSet'
      required:
      - namespace
      - object
      - relation
      type: object
    revokedSessions:
      example:
        count: 0
      properties:
        count:
          description: The number of sessions that were revoked.
          format: int64
          type: integer
      type: object
    schemaPatch:
      properties:
        data:
          description: The json schema
          type: object
        name:
          description: The user defined schema name
          type: string
      required:
      - data
      - name
      type: object
    selfServiceBrowserLocationChangeRequiredError:
      properties:
        code:
          description: The status code
          example: 404
          format: int64
          type: integer
        debug:
          description: |-
            Debug information

            This field is often not exposed to protect against leaking
            sensitive information.
          example: SQL field "foo" is not a bool.
          type: string
        details:
          additionalProperties: true
          description: Further error details
          type: object
        id:
          description: |-
            The error ID

            Useful when trying to identify various errors in application logic.
          type: string
        message:
          description: |-
            Error message

            The error's message.
          example: The resource could not be found
          type: string
        reason:
          description: A human-readable reason for the error
          example: User with ID 1234 does not exist.
          type: string
        redirect_browser_to:
          description: Since when the flow has expired
          type: string
        request:
          description: |-
            The request ID

            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          type: string
        status:
          description: The status description
          example: Not Found
          type: string
      required:
      - message
      title: Is sent when a flow requires a browser to change its location.
      type: object
    selfServiceError:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        error: '{}'
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        error:
          type: object
        id:
          $ref: '#/components/schemas/UUID'
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
      required:
      - id
      type: object
    selfServiceFlowExpiredError:
      description: Is sent when a flow is expired
      properties:
        code:
          description: The status code
          example: 404
          format: int64
          type: integer
        debug:
          description: |-
            Debug information

            This field is often not exposed to protect against leaking
            sensitive information.
          example: SQL field "foo" is not a bool.
          type: string
        details:
          additionalProperties: true
          description: Further error details
          type: object
        id:
          description: |-
            The error ID

            Useful when trying to identify various errors in application logic.
          type: string
        message:
          description: |-
            Error message

            The error's message.
          example: The resource could not be found
          type: string
        reason:
          description: A human-readable reason for the error
          example: User with ID 1234 does not exist.
          type: string
        request:
          description: |-
            The request ID

            The request ID is often exposed internally in order to trace
            errors across service architectures. This is often a UUID.
          example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
          type: string
        since:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
        status:
          description: The status description
          example: Not Found
          type: string
        use_flow_id:
          $ref: '#/components/schemas/UUID'
      required:
      - message
      type: object
    selfServiceFlowType:
      description: The flow type can either be `api` or `browser`.
      title: Type is the flow type.
      type: string
    selfServiceLoginFlow:
      description: |-
        This object represents a login flow. A login flow is initiated at the "Initiate Login API / Browser Flow"
        endpoint by a client.

        Once a login flow is completed successfully, a session cookie or session token will be issued.
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        ui:
          nodes:
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          method: method
          action: action
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        refresh: true
        return_to: return_to
        type: type
        issued_at: 2000-01-23T04:56:07.000+00:00
        request_url: request_url
      properties:
        active:
          $ref: '#/components/schemas/identityCredentialsType'
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        expires_at:
          description: |-
            ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,
            a new flow has to be initiated.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        issued_at:
          description: IssuedAt is the time (UTC) when the flow started.
          format: date-time
          type: string
        refresh:
          description: Refresh stores whether this login flow should enforce re-authentication.
          type: boolean
        request_url:
          description: |-
            RequestURL is the initial URL that was requested from Ory Kratos. It can be used
            to forward information contained in the URL's path or query for example.
          type: string
        requested_aal:
          $ref: '#/components/schemas/authenticatorAssuranceLevel'
        return_to:
          description: ReturnTo contains the requested return_to URL.
          type: string
        type:
          description: The flow type can either be `api` or `browser`.
          title: Type is the flow type.
          type: string
        ui:
          $ref: '#/components/schemas/uiContainer'
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
      required:
      - expires_at
      - id
      - issued_at
      - request_url
      - type
      - ui
      title: Login Flow
      type: object
    selfServiceLogoutUrl:
      example:
        logout_url: logout_url
        logout_token: logout_token
      properties:
        logout_token:
          description: LogoutToken can be used to perform logout using AJAX.
          type: string
        logout_url:
          description: |-
            LogoutURL can be opened in a browser to sign the user out.

            format: uri
          type: string
      required:
      - logout_token
      - logout_url
      type: object
    selfServiceRecoveryFlow:
      description: |-
        This request is used when an identity wants to recover their account.

        We recommend reading the [Account Recovery Documentation](../self-service/flows/password-reset-account-recovery)
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        ui:
          nodes:
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          method: method
          action: action
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
        active: active
        return_to: return_to
        type: type
        issued_at: 2000-01-23T04:56:07.000+00:00
        request_url: request_url
      properties:
        active:
          description: |-
            Active, if set, contains the registration method that is being used. It is initially
            not set.
          type: string
        expires_at:
          description: |-
            ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting,
            a new request has to be initiated.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        issued_at:
          description: IssuedAt is the time (UTC) when the request occurred.
          format: date-time
          type: string
        request_url:
          description: |-
            RequestURL is the initial URL that was requested from Ory Kratos. It can be used
            to forward information contained in the URL's path or query for example.
          type: string
        return_to:
          description: ReturnTo contains the requested return_to URL.
          type: string
        state:
          $ref: '#/components/schemas/selfServiceRecoveryFlowState'
        type:
          description: The flow type can either be `api` or `browser`.
          title: Type is the flow type.
          type: string
        ui:
          $ref: '#/components/schemas/uiContainer'
      required:
      - expires_at
      - id
      - issued_at
      - request_url
      - state
      - type
      - ui
      title: A Recovery Flow
      type: object
    selfServiceRecoveryFlowState:
      description: |-
        The state represents the state of the recovery flow.

        choose_method: ask the user to choose a method (e.g. recover account via email)
        sent_email: the email has been sent to the user
        passed_challenge: the request was successful and the recovery challenge was passed.
      enum:
      - choose_method
      - sent_email
      - passed_challenge
      title: Recovery Flow State
      type: string
    selfServiceRecoveryLink:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        recovery_link: recovery_link
      properties:
        expires_at:
          description: |-
            Recovery Link Expires At

            The timestamp when the recovery link expires.
          format: date-time
          type: string
        recovery_link:
          description: |-
            Recovery Link

            This link can be used to recover the account.
          type: string
      required:
      - recovery_link
      type: object
    selfServiceRegistrationFlow:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        ui:
          nodes:
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          method: method
          action: action
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
        return_to: return_to
        type: type
        issued_at: 2000-01-23T04:56:07.000+00:00
        request_url: request_url
      properties:
        active:
          $ref: '#/components/schemas/identityCredentialsType'
        expires_at:
          description: |-
            ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,
            a new flow has to be initiated.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        issued_at:
          description: IssuedAt is the time (UTC) when the flow occurred.
          format: date-time
          type: string
        request_url:
          description: |-
            RequestURL is the initial URL that was requested from Ory Kratos. It can be used
            to forward information contained in the URL's path or query for example.
          type: string
        return_to:
          description: ReturnTo contains the requested return_to URL.
          type: string
        type:
          description: The flow type can either be `api` or `browser`.
          title: Type is the flow type.
          type: string
        ui:
          $ref: '#/components/schemas/uiContainer'
      required:
      - expires_at
      - id
      - issued_at
      - request_url
      - type
      - ui
      type: object
    selfServiceSettingsFlow:
      description: |-
        This flow is used when an identity wants to update settings
        (e.g. profile data, passwords, ...) in a selfservice manner.

        We recommend reading the [User Settings Documentation](../self-service/flows/user-settings)
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        ui:
          nodes:
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          method: method
          action: action
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
        identity:
          traits: ""
          credentials:
            key:
              updated_at: 2000-01-23T04:56:07.000+00:00
              identifiers:
              - identifiers
              - identifiers
              created_at: 2000-01-23T04:56:07.000+00:00
              config: '{}'
              version: 0
          state_changed_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          recovery_addresses:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          metadata_admin: '{}'
          updated_at: 2000-01-23T04:56:07.000+00:00
          verifiable_addresses:
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          schema_id: schema_id
          schema_url: schema_url
          metadata_public: '{}'
        active: active
        return_to: return_to
        type: type
        issued_at: 2000-01-23T04:56:07.000+00:00
        request_url: request_url
      properties:
        active:
          description: |-
            Active, if set, contains the registration method that is being used. It is initially
            not set.
          type: string
        expires_at:
          description: |-
            ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to update the setting,
            a new flow has to be initiated.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        identity:
          $ref: '#/components/schemas/identity'
        issued_at:
          description: IssuedAt is the time (UTC) when the flow occurred.
          format: date-time
          type: string
        request_url:
          description: |-
            RequestURL is the initial URL that was requested from Ory Kratos. It can be used
            to forward information contained in the URL's path or query for example.
          type: string
        return_to:
          description: ReturnTo contains the requested return_to URL.
          type: string
        state:
          $ref: '#/components/schemas/selfServiceSettingsFlowState'
        type:
          description: The flow type can either be `api` or `browser`.
          title: Type is the flow type.
          type: string
        ui:
          $ref: '#/components/schemas/uiContainer'
      required:
      - expires_at
      - id
      - identity
      - issued_at
      - request_url
      - state
      - type
      - ui
      title: Flow represents a Settings Flow
      type: object
    selfServiceSettingsFlowState:
      description: |-
        show_form: No user data has been collected, or it is invalid, and thus the form should be shown.
        success: Indicates that the settings flow has been updated successfully with the provided data.
        Done will stay true when repeatedly checking. If set to true, done will revert back to false only
        when a flow with invalid (e.g. "please use a valid phone number") data was sent.
      enum:
      - show_form
      - success
      title: 'State represents the state of this flow. It knows two states:'
      type: string
    selfServiceVerificationFlow:
      description: |-
        Used to verify an out-of-band communication
        channel such as an email address or a phone number.

        For more information head over to: https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        ui:
          nodes:
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          - meta:
              label:
                context: '{}'
                id: 0
                text: text
                type: type
            messages:
            - context: '{}'
              id: 0
              text: text
              type: type
            - context: '{}'
              id: 0
              text: text
              type: type
            type: text
            group: default
          method: method
          action: action
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
        active: active
        return_to: return_to
        type: type
        issued_at: 2000-01-23T04:56:07.000+00:00
        request_url: request_url
      properties:
        active:
          description: |-
            Active, if set, contains the registration method that is being used. It is initially
            not set.
          type: string
        expires_at:
          description: |-
            ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address,
            a new request has to be initiated.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        issued_at:
          description: IssuedAt is the time (UTC) when the request occurred.
          format: date-time
          type: string
        request_url:
          description: |-
            RequestURL is the initial URL that was requested from Ory Kratos. It can be used
            to forward information contained in the URL's path or query for example.
          type: string
        return_to:
          description: ReturnTo contains the requested return_to URL.
          type: string
        state:
          $ref: '#/components/schemas/selfServiceVerificationFlowState'
        type:
          description: The flow type can either be `api` or `browser`.
          title: Type is the flow type.
          type: string
        ui:
          $ref: '#/components/schemas/uiContainer'
      required:
      - id
      - state
      - type
      - ui
      title: A Verification Flow
      type: object
    selfServiceVerificationFlowState:
      description: |-
        The state represents the state of the verification flow.

        choose_method: ask the user to choose a method (e.g. recover account via email)
        sent_email: the email has been sent to the user
        passed_challenge: the request was successful and the recovery challenge was passed.
      enum:
      - choose_method
      - sent_email
      - passed_challenge
      title: Verification Flow State
      type: string
    session:
      description: A Session
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        authentication_methods:
        - completed_at: 2000-01-23T04:56:07.000+00:00
          method: link_recovery
        - completed_at: 2000-01-23T04:56:07.000+00:00
          method: link_recovery
        identity:
          traits: ""
          credentials:
            key:
              updated_at: 2000-01-23T04:56:07.000+00:00
              identifiers:
              - identifiers
              - identifiers
              created_at: 2000-01-23T04:56:07.000+00:00
              config: '{}'
              version: 0
          state_changed_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          recovery_addresses:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          metadata_admin: '{}'
          updated_at: 2000-01-23T04:56:07.000+00:00
          verifiable_addresses:
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          schema_id: schema_id
          schema_url: schema_url
          metadata_public: '{}'
        authenticated_at: 2000-01-23T04:56:07.000+00:00
        active: true
        issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        active:
          description: Active state. If false the session is no longer active.
          type: boolean
        authenticated_at:
          description: |-
            The Session Authentication Timestamp

            When this session was authenticated at. If multi-factor authentication was used this
            is the time when the last factor was authenticated (e.g. the TOTP code challenge was completed).
          format: date-time
          type: string
        authentication_methods:
          description: A list of authenticators which were used to authenticate the
            session.
          items:
            $ref: '#/components/schemas/sessionAuthenticationMethod'
          title: List of (Used) AuthenticationMethods
          type: array
        authenticator_assurance_level:
          $ref: '#/components/schemas/authenticatorAssuranceLevel'
        expires_at:
          description: |-
            The Session Expiry

            When this session expires at.
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        identity:
          $ref: '#/components/schemas/identity'
        issued_at:
          description: |-
            The Session Issuance Timestamp

            When this session was issued at. Usually equal or close to `authenticated_at`.
          format: date-time
          type: string
      required:
      - id
      - identity
      type: object
    sessionAuthenticationMethod:
      description: A singular authenticator used during authentication / login.
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        method: link_recovery
      properties:
        aal:
          $ref: '#/components/schemas/authenticatorAssuranceLevel'
        completed_at:
          description: When the authentication challenge was completed.
          format: date-time
          type: string
        method:
          enum:
          - link_recovery
          - password
          - totp
          - oidc
          - webauthn
          - lookup_secret
          - v0.6_legacy_session
          title: The method used
          type: string
      title: AuthenticationMethod identifies an authentication method
      type: object
    sessionAuthenticationMethods:
      description: A list of authenticators which were used to authenticate the session.
      items:
        $ref: '#/components/schemas/sessionAuthenticationMethod'
      title: List of (Used) AuthenticationMethods
      type: array
    sessionDevice:
      properties:
        user_agent:
          description: UserAgent of this device
          type: string
      type: object
    sessionList:
      items:
        $ref: '#/components/schemas/session'
      type: array
    settingsProfileFormConfig:
      properties:
        action:
          description: Action should be used as the form action URL `<form action="{{
            .Action }}" method="post">`.
          type: string
        messages:
          items:
            $ref: '#/components/schemas/uiText'
          type: array
        method:
          description: Method is the form method (e.g. POST)
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/uiNode'
          type: array
      required:
      - action
      - method
      - nodes
      type: object
    stripeCustomerResponse:
      properties:
        id:
          type: string
      type: object
    subjectSet:
      example:
        namespace: namespace
        object: object
        relation: relation
      properties:
        namespace:
          description: Namespace of the Subject Set
          type: string
        object:
          description: Object of the Subject Set
          type: string
        relation:
          description: Relation of the Subject Set
          type: string
      required:
      - namespace
      - object
      - relation
      type: object
    submitSelfServiceFlowWithWebAuthnRegistrationMethod:
      properties:
        webauthn_register:
          description: |-
            Register a WebAuthn Security Key

            It is expected that the JSON returned by the WebAuthn registration process
            is included here.
          type: string
        webauthn_register_displayname:
          description: |-
            Name of the WebAuthn Security Key to be Added

            A human-readable name for the security key which will be added.
          type: string
      type: object
    submitSelfServiceLoginFlowBody:
      discriminator:
        mapping:
          lookup_secret: '#/components/schemas/submitSelfServiceLoginFlowWithLookupSecretMethodBody'
          oidc: '#/components/schemas/submitSelfServiceLoginFlowWithOidcMethodBody'
          password: '#/components/schemas/submitSelfServiceLoginFlowWithPasswordMethodBody'
          totp: '#/components/schemas/submitSelfServiceLoginFlowWithTotpMethodBody'
          webauthn: '#/components/schemas/submitSelfServiceLoginFlowWithWebAuthnMethodBody'
        propertyName: method
      oneOf:
      - $ref: '#/components/schemas/submitSelfServiceLoginFlowWithPasswordMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceLoginFlowWithOidcMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceLoginFlowWithTotpMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceLoginFlowWithWebAuthnMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceLoginFlowWithLookupSecretMethodBody'
    submitSelfServiceLoginFlowWithLookupSecretMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        lookup_secret:
          description: The lookup secret.
          type: string
        method:
          description: Method should be set to "lookup_secret" when logging in using
            the lookup_secret strategy.
          type: string
      required:
      - lookup_secret
      - method
      title: submitSelfServiceLoginFlowWithLookupSecretMethodBody is used to decode
        the login form payload.
      type: object
    submitSelfServiceLoginFlowWithOidcMethodBody:
      description: |-
        SubmitSelfServiceLoginFlowWithOidcMethodBody is used to decode the login form payload
        when using the oidc method.
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `oidc` when using the oidc method.
          type: string
        provider:
          description: The provider to register with
          type: string
        traits:
          description: The identity traits. This is a placeholder for the registration
            flow.
          type: object
      required:
      - method
      - provider
      type: object
    submitSelfServiceLoginFlowWithPasswordMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        identifier:
          description: Identifier is the email or username of the user trying to log
            in.
          type: string
        method:
          description: Method should be set to "password" when logging in using the
            identifier and password strategy.
          type: string
        password:
          description: The user's password.
          type: string
        password_identifier:
          description: |-
            Identifier is the email or username of the user trying to log in.
            This field is deprecated!
          type: string
      required:
      - identifier
      - method
      - password
      title: submitSelfServiceLoginFlowWithPasswordMethodBody is used to decode the
        login form payload.
      type: object
    submitSelfServiceLoginFlowWithTotpMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        method:
          description: Method should be set to "totp" when logging in using the TOTP
            strategy.
          type: string
        totp_code:
          description: The TOTP code.
          type: string
      required:
      - method
      - totp_code
      title: submitSelfServiceLoginFlowWithTotpMethodBody is used to decode the login
        form payload.
      type: object
    submitSelfServiceLoginFlowWithWebAuthnMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        identifier:
          description: Identifier is the email or username of the user trying to log
            in.
          type: string
        method:
          description: Method should be set to "webAuthn" when logging in using the
            WebAuthn strategy.
          type: string
        webauthn_login:
          description: |-
            Login a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
      required:
      - identifier
      - method
      title: submitSelfServiceLoginFlowWithWebAuthnMethodBody is used to decode the
        login form payload.
      type: object
    submitSelfServiceLogoutFlowWithoutBrowserBody:
      description: nolint:deadcode,unused
      properties:
        session_token:
          description: |-
            The Session Token

            Invalidate this session token.
          type: string
      required:
      - session_token
      type: object
    submitSelfServiceRecoveryFlowBody:
      discriminator:
        mapping:
          link: '#/components/schemas/submitSelfServiceRecoveryFlowWithLinkMethodBody'
        propertyName: method
      oneOf:
      - $ref: '#/components/schemas/submitSelfServiceRecoveryFlowWithLinkMethodBody'
    submitSelfServiceRecoveryFlowWithLinkMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        email:
          description: |-
            Email to Recover

            Needs to be set when initiating the flow. If the email is a registered
            recovery email, a recovery link will be sent. If the email is not known,
            a email with details on what happened will be sent instead.

            format: email
          type: string
        method:
          description: Method supports `link` only right now.
          type: string
      required:
      - email
      - method
      type: object
    submitSelfServiceRegistrationFlowBody:
      discriminator:
        mapping:
          oidc: '#/components/schemas/submitSelfServiceRegistrationFlowWithOidcMethodBody'
          password: '#/components/schemas/submitSelfServiceRegistrationFlowWithPasswordMethodBody'
          webauthn: '#/components/schemas/submitSelfServiceRegistrationFlowWithWebAuthnMethodBody'
        propertyName: method
      oneOf:
      - $ref: '#/components/schemas/submitSelfServiceRegistrationFlowWithPasswordMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceRegistrationFlowWithOidcMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceRegistrationFlowWithWebAuthnMethodBody'
    submitSelfServiceRegistrationFlowWithOidcMethodBody:
      description: |-
        SubmitSelfServiceRegistrationFlowWithOidcMethodBody is used to decode the registration form payload
        when using the oidc method.
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `oidc` when using the oidc method.
          type: string
        provider:
          description: The provider to register with
          type: string
        traits:
          description: The identity traits
          type: object
      required:
      - method
      - provider
      type: object
    submitSelfServiceRegistrationFlowWithPasswordMethodBody:
      description: |-
        SubmitSelfServiceRegistrationFlowWithPasswordMethodBody is used to decode the registration form payload
        when using the password method.
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `password` when using the password method.
          type: string
        password:
          description: Password to sign the user up with
          type: string
        traits:
          description: The identity's traits
          type: object
      required:
      - method
      - password
      - traits
      type: object
    submitSelfServiceRegistrationFlowWithWebAuthnMethodBody:
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: |-
            Method

            Should be set to "webauthn" when trying to add, update, or remove a webAuthn pairing.
          type: string
        traits:
          description: The identity's traits
          type: object
        webauthn_register:
          description: |-
            Register a WebAuthn Security Key

            It is expected that the JSON returned by the WebAuthn registration process
            is included here.
          type: string
        webauthn_register_displayname:
          description: |-
            Name of the WebAuthn Security Key to be Added

            A human-readable name for the security key which will be added.
          type: string
      required:
      - method
      - traits
      type: object
    submitSelfServiceSettingsFlowBody:
      discriminator:
        mapping:
          lookup_secret: '#/components/schemas/submitSelfServiceSettingsFlowWithLookupMethodBody'
          oidc: '#/components/schemas/submitSelfServiceSettingsFlowWithOidcMethodBody'
          password: '#/components/schemas/submitSelfServiceSettingsFlowWithPasswordMethodBody'
          profile: '#/components/schemas/submitSelfServiceSettingsFlowWithProfileMethodBody'
          totp: '#/components/schemas/submitSelfServiceSettingsFlowWithTotpMethodBody'
          webauthn: '#/components/schemas/submitSelfServiceSettingsFlowWithWebAuthnMethodBody'
        propertyName: method
      oneOf:
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithPasswordMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithProfileMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithOidcMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithOidcMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithTotpMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithWebAuthnMethodBody'
      - $ref: '#/components/schemas/submitSelfServiceSettingsFlowWithLookupMethodBody'
    submitSelfServiceSettingsFlowWithLookupMethodBody:
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        lookup_secret_confirm:
          description: If set to true will save the regenerated lookup secrets
          type: boolean
        lookup_secret_disable:
          description: Disables this method if true.
          type: boolean
        lookup_secret_regenerate:
          description: If set to true will regenerate the lookup secrets
          type: boolean
        lookup_secret_reveal:
          description: If set to true will reveal the lookup secrets
          type: boolean
        method:
          description: |-
            Method

            Should be set to "lookup" when trying to add, update, or remove a lookup pairing.
          type: string
      required:
      - method
      type: object
    submitSelfServiceSettingsFlowWithOidcMethodBody:
      description: nolint:deadcode,unused
      properties:
        flow:
          description: |-
            Flow ID is the flow's ID.

            in: query
          type: string
        link:
          description: |-
            Link this provider

            Either this or `unlink` must be set.

            type: string
            in: body
          type: string
        method:
          description: |-
            Method

            Should be set to profile when trying to update a profile.
          type: string
        traits:
          description: |-
            The identity's traits

            in: body
          type: object
        unlink:
          description: |-
            Unlink this provider

            Either this or `link` must be set.

            type: string
            in: body
          type: string
      required:
      - method
      type: object
    submitSelfServiceSettingsFlowWithPasswordMethodBody:
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: |-
            Method

            Should be set to password when trying to update a password.
          type: string
        password:
          description: Password is the updated password
          type: string
      required:
      - method
      - password
      type: object
    submitSelfServiceSettingsFlowWithProfileMethodBody:
      description: nolint:deadcode,unused
      properties:
        csrf_token:
          description: |-
            The Anti-CSRF Token

            This token is only required when performing browser flows.
          type: string
        method:
          description: |-
            Method

            Should be set to profile when trying to update a profile.
          type: string
        traits:
          description: Traits contains all of the identity's traits.
          type: object
      required:
      - method
      - traits
      type: object
    submitSelfServiceSettingsFlowWithTotpMethodBody:
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: |-
            Method

            Should be set to "totp" when trying to add, update, or remove a totp pairing.
          type: string
        totp_code:
          description: ValidationTOTP must contain a valid TOTP based on the
          type: string
        totp_unlink:
          description: |-
            UnlinkTOTP if true will remove the TOTP pairing,
            effectively removing the credential. This can be used
            to set up a new TOTP device.
          type: boolean
      required:
      - method
      type: object
    submitSelfServiceSettingsFlowWithWebAuthnMethodBody:
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: |-
            Method

            Should be set to "webauthn" when trying to add, update, or remove a webAuthn pairing.
          type: string
        webauthn_register:
          description: |-
            Register a WebAuthn Security Key

            It is expected that the JSON returned by the WebAuthn registration process
            is included here.
          type: string
        webauthn_register_displayname:
          description: |-
            Name of the WebAuthn Security Key to be Added

            A human-readable name for the security key which will be added.
          type: string
        webauthn_remove:
          description: |-
            Remove a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
      required:
      - method
      type: object
    submitSelfServiceVerificationFlowBody:
      description: nolint:deadcode,unused
      discriminator:
        mapping:
          link: '#/components/schemas/submitSelfServiceVerificationFlowWithLinkMethodBody'
        propertyName: method
      oneOf:
      - $ref: '#/components/schemas/submitSelfServiceVerificationFlowWithLinkMethodBody'
    submitSelfServiceVerificationFlowWithLinkMethodBody:
      properties:
        csrf_token:
          description: Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        email:
          description: |-
            Email to Verify

            Needs to be set when initiating the flow. If the email is a registered
            verification email, a verification link will be sent. If the email is not known,
            a email with details on what happened will be sent instead.

            format: email
          type: string
        method:
          description: Method supports `link` only right now.
          type: string
      required:
      - email
      - method
      type: object
    subscription:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        current_plan:
          description: |-
            The currently active plan of the subscription
            unknown Unknown
            free Free
            start_up_monthly StartUpMonthly
            start_up_yearly StartUpYearly
            business_monthly BusinessMonthly
            business_yearly BusinessYearly
            custom Custom
          enum:
          - unknown
          - free
          - start_up_monthly
          - start_up_yearly
          - business_monthly
          - business_yearly
          - custom
          readOnly: true
          type: string
          x-go-enum-desc: |-
            unknown Unknown
            free Free
            start_up_monthly StartUpMonthly
            start_up_yearly StartUpYearly
            business_monthly BusinessMonthly
            business_yearly BusinessYearly
            custom Custom
        customer_id:
          description: The ID of the stripe customer
          readOnly: true
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        ongoing_stripe_checkout_id:
          nullable: true
          type: string
        payed_until:
          description: Until when the subscription is payed
          format: date-time
          readOnly: true
          type: string
        plan_changes_at:
          format: date-time
          type: string
        plan_changes_to:
          $ref: '#/components/schemas/NullPlan'
        status:
          description: |-
            For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated.

            A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over.

            If subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts.

            If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
          title: Possible values are `incomplete`, `incomplete_expired`, `trialing`,
            `active`, `past_due`, `canceled`, or `unpaid`.
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - current_plan
      - customer_id
      - id
      - payed_until
      - plan_changes_to
      - status
      - updated_at
      type: object
    successfulOAuth2RequestResponse:
      example:
        redirect_to: redirect_to
      properties:
        redirect_to:
          description: RedirectURL is the URL which you should redirect the user to
            once the authentication process is completed.
          type: string
      required:
      - redirect_to
      title: The response payload sent when accepting or rejecting a login, consent,
        or logout request.
      type: object
    successfulProjectUpdate:
      example:
        warnings:
        - code: 0
          message: message
        - code: 0
          message: message
        project:
          name: name
          services:
            identity:
              config: '{}'
            permission:
              config: '{}'
            oauth2:
              config: '{}'
          state: running
          slug: slug
      properties:
        project:
          $ref: '#/components/schemas/project'
        warnings:
          description: |-
            Import Warnings

            Not all configuration items can be imported to Ory Cloud. For example,
            setting the port does not make sense because Ory Cloud provides the runtime
            and networking.

            This field contains warnings where configuration keys were found but can not
            be imported. These keys will be ignored by Ory Cloud. This field will help
            you understand why certain configuration keys might not be respected!
          items:
            $ref: '#/components/schemas/Warning'
          type: array
      required:
      - project
      - warnings
      type: object
    successfulSelfServiceLoginWithoutBrowser:
      description: The Response for Login Flows via API
      example:
        session_token: session_token
        session:
          expires_at: 2000-01-23T04:56:07.000+00:00
          authentication_methods:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            method: link_recovery
          - completed_at: 2000-01-23T04:56:07.000+00:00
            method: link_recovery
          identity:
            traits: ""
            credentials:
              key:
                updated_at: 2000-01-23T04:56:07.000+00:00
                identifiers:
                - identifiers
                - identifiers
                created_at: 2000-01-23T04:56:07.000+00:00
                config: '{}'
                version: 0
            state_changed_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            recovery_addresses:
            - updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              value: value
              via: via
            - updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              value: value
              via: via
            metadata_admin: '{}'
            updated_at: 2000-01-23T04:56:07.000+00:00
            verifiable_addresses:
            - updated_at: 2014-01-01T23:28:56.782Z
              verified_at: 2000-01-23T04:56:07.000+00:00
              verified: true
              created_at: 2014-01-01T23:28:56.782Z
              value: value
              status: status
              via: via
            - updated_at: 2014-01-01T23:28:56.782Z
              verified_at: 2000-01-23T04:56:07.000+00:00
              verified: true
              created_at: 2014-01-01T23:28:56.782Z
              value: value
              status: status
              via: via
            schema_id: schema_id
            schema_url: schema_url
            metadata_public: '{}'
          authenticated_at: 2000-01-23T04:56:07.000+00:00
          active: true
          issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        session:
          $ref: '#/components/schemas/session'
        session_token:
          description: |-
            The Session Token

            A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization
            Header:

            Authorization: bearer ${session-token}

            The session token is only issued for API flows, not for Browser flows!
          type: string
      required:
      - session
      type: object
    successfulSelfServiceRegistrationWithoutBrowser:
      description: The Response for Registration Flows via API
      example:
        session_token: session_token
        identity:
          traits: ""
          credentials:
            key:
              updated_at: 2000-01-23T04:56:07.000+00:00
              identifiers:
              - identifiers
              - identifiers
              created_at: 2000-01-23T04:56:07.000+00:00
              config: '{}'
              version: 0
          state_changed_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          recovery_addresses:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          - updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            value: value
            via: via
          metadata_admin: '{}'
          updated_at: 2000-01-23T04:56:07.000+00:00
          verifiable_addresses:
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          - updated_at: 2014-01-01T23:28:56.782Z
            verified_at: 2000-01-23T04:56:07.000+00:00
            verified: true
            created_at: 2014-01-01T23:28:56.782Z
            value: value
            status: status
            via: via
          schema_id: schema_id
          schema_url: schema_url
          metadata_public: '{}'
        session:
          expires_at: 2000-01-23T04:56:07.000+00:00
          authentication_methods:
          - completed_at: 2000-01-23T04:56:07.000+00:00
            method: link_recovery
          - completed_at: 2000-01-23T04:56:07.000+00:00
            method: link_recovery
          identity:
            traits: ""
            credentials:
              key:
                updated_at: 2000-01-23T04:56:07.000+00:00
                identifiers:
                - identifiers
                - identifiers
                created_at: 2000-01-23T04:56:07.000+00:00
                config: '{}'
                version: 0
            state_changed_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            recovery_addresses:
            - updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              value: value
              via: via
            - updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              value: value
              via: via
            metadata_admin: '{}'
            updated_at: 2000-01-23T04:56:07.000+00:00
            verifiable_addresses:
            - updated_at: 2014-01-01T23:28:56.782Z
              verified_at: 2000-01-23T04:56:07.000+00:00
              verified: true
              created_at: 2014-01-01T23:28:56.782Z
              value: value
              status: status
              via: via
            - updated_at: 2014-01-01T23:28:56.782Z
              verified_at: 2000-01-23T04:56:07.000+00:00
              verified: true
              created_at: 2014-01-01T23:28:56.782Z
              value: value
              status: status
              via: via
            schema_id: schema_id
            schema_url: schema_url
            metadata_public: '{}'
          authenticated_at: 2000-01-23T04:56:07.000+00:00
          active: true
          issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        identity:
          $ref: '#/components/schemas/identity'
        session:
          $ref: '#/components/schemas/session'
        session_token:
          description: |-
            The Session Token

            This field is only set when the session hook is configured as a post-registration hook.

            A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization
            Header:

            Authorization: bearer ${session-token}

            The session token is only issued for API flows, not for Browser flows!
          type: string
      required:
      - identity
      type: object
    tokenPagination:
      properties:
        page_size:
          default: 250
          description: |-
            Items per page

            This is the number of items per page to return.
            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        page_token:
          default: "1"
          description: |-
            Next Page Token

            The next page token.
            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          minimum: 1
          type: string
      type: object
    tokenPaginationHeaders:
      properties:
        link:
          description: |-
            The link header contains pagination links.

            For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).

            in: header
          type: string
        x-total-count:
          description: |-
            The total number of clients.

            in: header
          type: string
      type: object
    trustedOAuth2JwtGrantIssuer:
      example:
        public_key:
          set: https://jwt-idp.example.com
          kid: 123e4567-e89b-12d3-a456-426655440000
        expires_at: 2000-01-23T04:56:07.000+00:00
        subject: mike@example.com
        scope:
        - openid
        - offline
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 9edc811f-4e28-453c-9b46-4de65f00217f
        allow_any_subject: true
        issuer: https://jwt-idp.example.com
      properties:
        allow_any_subject:
          description: The "allow_any_subject" indicates that the issuer is allowed
            to have any principal as the subject of the JWT.
          type: boolean
        created_at:
          description: The "created_at" indicates, when grant was created.
          format: date-time
          type: string
        expires_at:
          description: The "expires_at" indicates, when grant will expire, so we will
            reject assertion from "issuer" targeting "subject".
          format: date-time
          type: string
        id:
          example: 9edc811f-4e28-453c-9b46-4de65f00217f
          type: string
        issuer:
          description: The "issuer" identifies the principal that issued the JWT assertion
            (same as "iss" claim in JWT).
          example: https://jwt-idp.example.com
          type: string
        public_key:
          $ref: '#/components/schemas/trustedOAuth2JwtGrantJsonWebKey'
        scope:
          description: The "scope" contains list of scope values (as described in
            Section 3.3 of OAuth 2.0 [RFC6749])
          example:
          - openid
          - offline
          items:
            type: string
          type: array
        subject:
          description: The "subject" identifies the principal that is the subject
            of the JWT.
          example: mike@example.com
          type: string
      type: object
    trustedOAuth2JwtGrantIssuers:
      items:
        $ref: '#/components/schemas/trustedOAuth2JwtGrantIssuer'
      type: array
    trustedOAuth2JwtGrantJsonWebKey:
      example:
        set: https://jwt-idp.example.com
        kid: 123e4567-e89b-12d3-a456-426655440000
      properties:
        kid:
          description: The "key_id" is key unique identifier (same as kid header in
            jws/jwt).
          example: 123e4567-e89b-12d3-a456-426655440000
          type: string
        set:
          description: The "set" is basically a name for a group(set) of keys. Will
            be the same as "issuer" in grant.
          example: https://jwt-idp.example.com
          type: string
      type: object
    uiContainer:
      description: Container represents a HTML Form. The container can work with both
        HTTP Form and JSON requests
      example:
        nodes:
        - meta:
            label:
              context: '{}'
              id: 0
              text: text
              type: type
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
          type: text
          group: default
        - meta:
            label:
              context: '{}'
              id: 0
              text: text
              type: type
          messages:
          - context: '{}'
            id: 0
            text: text
            type: type
          - context: '{}'
            id: 0
            text: text
            type: type
          type: text
          group: default
        method: method
        action: action
        messages:
        - context: '{}'
          id: 0
          text: text
          type: type
        - context: '{}'
          id: 0
          text: text
          type: type
      properties:
        action:
          description: Action should be used as the form action URL `<form action="{{
            .Action }}" method="post">`.
          type: string
        messages:
          items:
            $ref: '#/components/schemas/uiText'
          type: array
        method:
          description: Method is the form method (e.g. POST)
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/uiNode'
          type: array
      required:
      - action
      - method
      - nodes
      type: object
    uiNode:
      description: |-
        Nodes are represented as HTML elements or their native UI equivalents. For example,
        a node can be an `<img>` tag, or an `<input element>` but also `some plain text`.
      example:
        meta:
          label:
            context: '{}'
            id: 0
            text: text
            type: type
        messages:
        - context: '{}'
          id: 0
          text: text
          type: type
        - context: '{}'
          id: 0
          text: text
          type: type
        type: text
        group: default
      properties:
        attributes:
          $ref: '#/components/schemas/uiNodeAttributes'
        group:
          description: Group specifies which group (e.g. password authenticator) this
            node belongs to.
          enum:
          - default
          - password
          - oidc
          - profile
          - link
          - totp
          - lookup_secret
          - webauthn
          type: string
        messages:
          items:
            $ref: '#/components/schemas/uiText'
          type: array
        meta:
          $ref: '#/components/schemas/uiNodeMeta'
        type:
          description: The node's type
          enum:
          - text
          - input
          - img
          - a
          - script
          type: string
      required:
      - attributes
      - group
      - messages
      - meta
      - type
      title: Node represents a flow's nodes
      type: object
    uiNodeAnchorAttributes:
      properties:
        href:
          description: |-
            The link's href (destination) URL.

            format: uri
          type: string
        id:
          description: A unique identifier
          type: string
        node_type:
          description: |-
            NodeType represents this node's types. It is a mirror of `node.type` and
            is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "a".
          type: string
        title:
          $ref: '#/components/schemas/uiText'
      required:
      - href
      - id
      - node_type
      - title
      title: AnchorAttributes represents the attributes of an anchor node.
      type: object
    uiNodeAttributes:
      discriminator:
        mapping:
          a: '#/components/schemas/uiNodeAnchorAttributes'
          img: '#/components/schemas/uiNodeImageAttributes'
          input: '#/components/schemas/uiNodeInputAttributes'
          script: '#/components/schemas/uiNodeScriptAttributes'
          text: '#/components/schemas/uiNodeTextAttributes'
        propertyName: node_type
      oneOf:
      - $ref: '#/components/schemas/uiNodeInputAttributes'
      - $ref: '#/components/schemas/uiNodeTextAttributes'
      - $ref: '#/components/schemas/uiNodeImageAttributes'
      - $ref: '#/components/schemas/uiNodeAnchorAttributes'
      - $ref: '#/components/schemas/uiNodeScriptAttributes'
      title: Attributes represents a list of attributes (e.g. `href="foo"` for links).
    uiNodeImageAttributes:
      properties:
        height:
          description: Height of the image
          format: int64
          type: integer
        id:
          description: A unique identifier
          type: string
        node_type:
          description: |-
            NodeType represents this node's types. It is a mirror of `node.type` and
            is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "img".
          type: string
        src:
          description: |-
            The image's source URL.

            format: uri
          type: string
        width:
          description: Width of the image
          format: int64
          type: integer
      required:
      - height
      - id
      - node_type
      - src
      - width
      title: ImageAttributes represents the attributes of an image node.
      type: object
    uiNodeInputAttributes:
      description: InputAttributes represents the attributes of an input node
      properties:
        autocomplete:
          description: The autocomplete attribute for the input.
          type: string
        disabled:
          description: Sets the input's disabled field to true or false.
          type: boolean
        label:
          $ref: '#/components/schemas/uiText'
        name:
          description: The input's element name.
          type: string
        node_type:
          description: |-
            NodeType represents this node's types. It is a mirror of `node.type` and
            is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "input".
          type: string
        onclick:
          description: |-
            OnClick may contain javascript which should be executed on click. This is primarily
            used for WebAuthn.
          type: string
        pattern:
          description: The input's pattern.
          type: string
        required:
          description: Mark this input field as required.
          type: boolean
        type:
          description: The input's element type.
          enum:
          - text
          - password
          - number
          - checkbox
          - hidden
          - email
          - tel
          - submit
          - button
          - datetime-local
          - date
          - url
          type: string
        value:
          description: The input's value.
          nullable: true
      required:
      - disabled
      - name
      - node_type
      - type
      type: object
    uiNodeMeta:
      description: |-
        This might include a label and other information that can optionally
        be used to render UIs.
      example:
        label:
          context: '{}'
          id: 0
          text: text
          type: type
      properties:
        label:
          $ref: '#/components/schemas/uiText'
      title: A Node's Meta Information
      type: object
    uiNodeScriptAttributes:
      properties:
        async:
          description: The script async type
          type: boolean
        crossorigin:
          description: The script cross origin policy
          type: string
        id:
          description: A unique identifier
          type: string
        integrity:
          description: The script's integrity hash
          type: string
        node_type:
          description: |-
            NodeType represents this node's types. It is a mirror of `node.type` and
            is primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is "script".
          type: string
        nonce:
          description: |-
            Nonce for CSP

            A nonce you may want to use to improve your Content Security Policy.
            You do not have to use this value but if you want to improve your CSP
            policies you may use it. You can also choose to use your own nonce value!
          type: string
        referrerpolicy:
          description: The script referrer policy
          type: string
        src:
          description: The script source
          type: string
        type:
          description: The script MIME type
          type: string
      required:
      - async
      - crossorigin
      - id
      - integrity
      - node_type
      - nonce
      - referrerpolicy
      - src
      - type
      title: ScriptAttributes represent script nodes which load javascript.
      type: object
    uiNodeTextAttributes:
      properties:
        id:
          description: A unique identifier
          type: string
        node_type:
          description: |-
            NodeType represents this node's types. It is a mirror of `node.type` and
            is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "text".
          type: string
        text:
          $ref: '#/components/schemas/uiText'
      required:
      - id
      - node_type
      - text
      title: TextAttributes represents the attributes of a text node.
      type: object
    uiNodes:
      items:
        $ref: '#/components/schemas/uiNode'
      type: array
    uiText:
      example:
        context: '{}'
        id: 0
        text: text
        type: type
      properties:
        context:
          description: The message's context. Useful when customizing messages.
          type: object
        id:
          format: int64
          type: integer
        text:
          description: The message text. Written in american english.
          type: string
        type:
          type: string
      required:
      - id
      - text
      - type
      type: object
    uiTextType:
      type: string
    uiTexts:
      items:
        $ref: '#/components/schemas/uiText'
      type: array
    updateCustomHostnameBody:
      properties:
        cookie_domain:
          description: The domain where cookies will be set. Has to be a parent domain
            of the custom hostname to work.
          type: string
        cors_allowed_origins:
          description: CORS Allowed origins for the custom hostname.
          items:
            type: string
          type: array
        cors_enabled:
          description: CORS Enabled for the custom hostname.
          type: boolean
        hostname:
          description: The custom hostname where the API will be exposed.
          type: string
      type: object
    updateProject:
      properties:
        name:
          description: The name of the project.
          type: string
        services:
          $ref: '#/components/schemas/projectServices'
      required:
      - name
      - services
      type: object
    verifiableIdentityAddress:
      description: VerifiableAddress is an identity's verifiable address
      example:
        updated_at: 2014-01-01T23:28:56.782Z
        verified_at: 2000-01-23T04:56:07.000+00:00
        verified: true
        created_at: 2014-01-01T23:28:56.782Z
        value: value
        status: status
        via: via
      properties:
        created_at:
          description: When this entry was created
          example: 2014-01-01T23:28:56.782Z
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        status:
          description: VerifiableAddressStatus must not exceed 16 characters as that
            is the limitation in the SQL Schema
          type: string
        updated_at:
          description: When this entry was last updated
          example: 2014-01-01T23:28:56.782Z
          format: date-time
          type: string
        value:
          description: |-
            The address value

            example foo@user.com
          type: string
        verified:
          description: Indicates if the address has already been verified
          example: true
          type: boolean
        verified_at:
          format: date-time
          title: NullTime implements sql.NullTime functionality.
          type: string
        via:
          description: VerifiableAddressType must not exceed 16 characters as that
            is the limitation in the SQL Schema
          type: string
      required:
      - status
      - value
      - verified
      - via
      type: object
    version:
      properties:
        version:
          description: Version is the service's version.
          type: string
      type: object
    webAuthnJavaScript:
      type: string
    inline_object:
      properties:
        scope:
          description: |-
            An optional, space separated list of required scopes. If the access token was not granted one of the
            scopes, the result of active will be false.
          type: string
          x-formData-name: scope
        token:
          description: |-
            The string value of the token. For access tokens, this
            is the "access_token" value returned from the token endpoint
            defined in OAuth 2.0. For refresh tokens, this is the "refresh_token"
            value returned.
          required:
          - token
          type: string
          x-formData-name: token
      required:
      - token
      type: object
    inline_response_200:
      example:
        status: status
      properties:
        status:
          description: Always "ok".
          type: string
      required:
      - status
      type: object
    inline_response_503:
      properties:
        errors:
          additionalProperties:
            type: string
          description: Errors contains a list of errors that caused the not ready
            status.
          type: object
      required:
      - errors
      type: object
    inline_object_1:
      properties:
        token:
          required:
          - token
          type: string
          x-formData-name: token
      required:
      - token
      type: object
    inline_object_2:
      properties:
        client_id:
          type: string
          x-formData-name: client_id
        code:
          type: string
          x-formData-name: code
        grant_type:
          required:
          - grant_type
          type: string
          x-formData-name: grant_type
        redirect_uri:
          type: string
          x-formData-name: redirect_uri
        refresh_token:
          type: string
          x-formData-name: refresh_token
      required:
      - grant_type
      type: object
    inline_response_200_1:
      example:
        version: version
      properties:
        version:
          description: The version of Ory Kratos.
          type: string
      required:
      - version
      type: object
    oAuth2ConsentSession_expires_at:
      properties:
        access_token:
          format: date-time
          type: string
        authorize_code:
          format: date-time
          type: string
        id_token:
          format: date-time
          type: string
        par_context:
          format: date-time
          type: string
        refresh_token:
          format: date-time
          type: string
      type: object
  securitySchemes:
    basic:
      scheme: basic
      type: http
    bearer:
      scheme: bearer
      type: http
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://hydra.demo.ory.sh/oauth2/auth
          scopes:
            offline: A scope required when requesting refresh tokens (alias for `offline_access`)
            offline_access: A scope required when requesting refresh tokens
            openid: Request an OpenID Connect ID Token
          tokenUrl: https://hydra.demo.ory.sh/oauth2/token
      type: oauth2
    oryAccessToken:
      scheme: bearer
      type: http
x-forwarded-proto: string
x-request-id: string

